S0001:00401000
S0002:0082E000
S0003:0088C000

 0001:00000010       `vector constructor iterator'(void *,uint,int,void (*)(void *))
 0001:00000040       zCModelAniActive::`vector deleting destructor'(uint)
 0001:000000C0       zSTRING::zSTRING(char const *)
 0001:00000140       zSTRING::`scalar deleting destructor'(uint)
 0001:00000160       zSTRING::~zSTRING(void)
 0001:00000550       oCCSManager::_CreateNewInstance(void)
 0001:000005B0       oCCSManager::operator delete(void *)
 0001:00000600       oCCSManager::oCCSManager(void)
 0001:00000D60       zCObject::zCObject(void)
 0001:00000EC0       zCObject::_GetClassDef(void)
 0001:00000ED0       zCObject::Archive(zCArchiver &)
 0001:00000EE0       zCObject::Unarchive(zCArchiver &)
 0001:00000EF0       zCObject::`scalar deleting destructor'(uint)
 0001:00000F20       zCOLOR::zCOLOR(int)
 0001:00000F30       zCEventMessage::_GetClassDef(void)
 0001:00000F40       zCEventMessage::IsOverlay(void)
 0001:00000F50       zCEventMessage::IsNetRelevant(void)
 0001:00000F60       zCEventMessage::IsHighPriority(void)
 0001:00000F70       zCEventMessage::IsJob(void)
 0001:00000F80       zCEventMessage::GetIgnoreCutsceneMode(void)
 0001:00000F90       zCEventMessage::Delete(void)
 0001:00000FA0       zCEventMessage::IsDeleteable(void)
 0001:00000FB0       zCEventMessage::IsDeleted(void)
 0001:00000FC0       zCEventMessage::SetCutsceneMode(int)
 0001:00000FD0       zCEventMessage::GetCutsceneMode(void)
 0001:00000FE0       zCEventMessage::MD_GetNumOfSubTypes(void)
 0001:00000FF0       zCEventMessage::MD_GetSubTypeString(int)
 0001:00001030       zCEventMessage::MD_GetVobRefName(void)
 0001:00001070       zCEventMessage::MD_SetVobRefName(zSTRING const &)
 0001:00001080       zCEventMessage::MD_SetVobParam(zCVob *)
 0001:00001090       zCEventMessage::MD_GetTimeBehavior(void)
 0001:000010A0       zCEventMessage::MD_GetMinTime(void)
 0001:000010B0       zCEventMessage::Pack(zCBuffer &,zCEventManager *)
 0001:000010C0       zCEventMessage::Unpack(zCBuffer &,zCEventManager *)
 0001:000010D0       zCEventMessage::~zCEventMessage(void)
 0001:000010E0       zCEventMessage::`scalar deleting destructor'(uint)
 0001:00001110       zCEventCore::operator delete(void *)
 0001:00001130       zCEventCore::_GetClassDef(void)
 0001:00001140       zCEventCore::MD_GetNumOfSubTypes(void)
 0001:00001150       zCEventCore::IsNetRelevant(void)
 0001:00001170       zCEventCore::`scalar deleting destructor'(uint)
 0001:000011A0       zCCSCamera_EventMsg::operator delete(void *)
 0001:000011C0       zCCSCamera_EventMsgActivate::operator delete(void *)
 0001:000011E0       zCCSCamera_EventMsgActivate::_GetClassDef(void)
 0001:000011F0       zCCSCamera_EventMsgActivate::IsDeleted(void)
 0001:00001200       zCCSCamera_EventMsgActivate::Delete(void)
 0001:00001210       zCCSCamera_EventMsgActivate::`vector deleting destructor'(uint)
 0001:00001240       zCCSCamera_EventMsgActivate::~zCCSCamera_EventMsgActivate(void)
 0001:000012A0       zCEventScreenFX::operator delete(void *)
 0001:000012C0       oCCSManager::_GetClassDef(void)
 0001:000012D0       oCMsgMovement::operator delete(void *)
 0001:000012F0       oCMsgManipulate::operator delete(void *)
 0001:00001310       oCMsgConversation::operator delete(void *)
 0001:00001330       oCCSManager::`scalar deleting destructor'(uint)
 0001:00001360       oCCSManager::~oCCSManager(void)
 0001:00001370       oCCSManager::CreateCutscenePlayer(zCWorld *)
 0001:000013F0       oCCSPlayer::operator delete(void *)
 0001:00001410       oCCSManager::CreateOuMessage(void)
 0001:00001420       oCCSManager::CreateMessage(int)
 0001:00001AF0       zSTRING::zSTRING(void)
 0001:00001B10       oCCSManager::CreateProperties(void)
 0001:00001B70       oCCSProps::operator delete(void *)
 0001:00001B90       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<char,std::char_traits<char>,std::allocator<char>>(std::allocator<char> const &)
 0001:00001BB0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::erase(uint,uint)
 0001:00001CD0       zCSoundManager::zCSoundEventData::`vector deleting destructor'(uint)
 0001:00001D30       zCSoundManager::zCSoundEventData::~zCSoundEventData(void)
 0001:00001DC0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &,uint,uint)
 0001:00001FC0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(char const *,uint)
 0001:00002060       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Eos(uint)
 0001:00002080       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Grow(uint,bool)
 0001:000021A0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Split(void)
 0001:00002280       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Tidy(bool)
 0001:000022D0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::max_size(void)
 0001:000022E0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Copy(uint)
 0001:00002850       oCCSPlayer::_CreateNewInstance(void)
 0001:000028C0       oCCSPlayer::_GetClassDef(void)
 0001:000028D0       oCCSPlayer::oCCSPlayer(void)
 0001:000028F0       oCCSPlayer::`scalar deleting destructor'(uint)
 0001:00002920       oCCSPlayer::~oCCSPlayer(void)
 0001:00002940       oCCSPlayer::ProcessCutscene(zCCSCutsceneContext *,zVEC3 const &)
 0001:00002E90       oCCSProps::_CreateNewInstance(void)
 0001:00002EF0       oCCSProps::_GetClassDef(void)
 0001:00002F00       oCCSProps::oCCSProps(void)
 0001:00002F20       oCCSProps::`scalar deleting destructor'(uint)
 0001:00002F50       oCCSProps::~oCCSProps(void)
 0001:00002F60       oCCSProps::Archive(zCArchiver &)
 0001:00002F70       oCCSProps::Unarchive(zCArchiver &)
 0001:00002F80       oCCSProps::AcceptRole(zCCSRole *,zCVob *)
 0001:00002F90       oCCSProps::CheckRole(zCCSRole *,zCVob *)
 0001:00002FE0       oCCSProps::CheckRoleResult(void)
 0001:00003210       oCCSTrigger::_CreateNewInstance(void)
 0001:00003270       zCVob::OnTick(void)
 0001:00003280       zCVob::PostLoad(void)
 0001:00003290       zCVob::GetCharacterClass(void)
 0001:000032A0       zCVob::CanThisCollideWith(zCVob *)
 0001:000032B0       zCVob::GetScriptInstance(zSTRING * &,int &)
 0001:000032D0       zCVob::SetByScriptInstance(zSTRING const *,int)
 0001:000032E0       zCVob::GetCSStateFlags(void)
 0001:000032F0       zCTriggerBase::GetTriggerTarget(int)
 0001:00003310       oCCSTrigger::operator delete(void *)
 0001:00003330       oCCSTrigger::_GetClassDef(void)
 0001:00003340       oCCSTrigger::`scalar deleting destructor'(uint)
 0001:00003370       oCCSTrigger::~oCCSTrigger(void)
 0001:00003380       oCCSTrigger::TriggerTarget(zCVob *)
 0001:000035C0       operator+(zSTRING const &,zSTRING const &)
 0001:00003710       operator+(char const *,zSTRING const &)
 0001:00003880       operator+(zSTRING const &,char const *)
 0001:000039A0       zCTrigger::GetTriggerTarget(void)
 0001:000039F0       oCCSTrigger::UntriggerTarget(zCVob *)
 0001:00003C30       oCCSTrigger::Archive(zCArchiver &)
 0001:00003C40       oCCSTrigger::Unarchive(zCArchiver &)
 0001:00003C50       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::~basic_string<char,std::char_traits<char>,std::allocator<char>>(void)
 0001:00003EB0       zCCSCutsceneContext::_CreateNewInstance(void)
 0001:00003F70       zCCSBlockBase::GetCommand(void)
 0001:00003F80       zCCSCutsceneContext::operator delete(void *)
 0001:00003FA0       zCCSCutsceneContext::_GetClassDef(void)
 0001:00003FB0       zCCSCutsceneContext::IsCutscene(void)
 0001:00003FC0       zCCSCutsceneContext::IsOutputUnit(void)
 0001:00003FD0       zCCSCutsceneContext::DisablePlayCutscenes(int)
 0001:00003FE0       zCCSCutsceneContext::zCCSCutsceneContext(void)
 0001:00004040       zCCSCutsceneContext::`scalar deleting destructor'(uint)
 0001:00004070       zCCSCutsceneContext::zCCSCutsceneContext(zSTRING &)
 0001:00004790       zCCSCutsceneContext::zCCSCutsceneContext(zCCSBlock *,int,int)
 0001:00004A80       zCCSCutsceneContext::UseThisSubBlock(zCCSBlock *)
 0001:00004BE0       zCCSCutsceneContext::~zCCSCutsceneContext(void)
 0001:00004E20       zCCSCutsceneContext::Archive(zCArchiver &)
 0001:00005230       zCCSCutsceneContext::GetCSName(void)
 0001:00005300       zCCSProps::GetName(void)
 0001:00005350       zCCSCutsceneContext::Unarchive(zCArchiver &)
 0001:00005810       zCCSCutsceneContext::StartPlaying(void)
 0001:00005E60       zCCSCutsceneContext::Stop(void)
 0001:00006670       zCCSProps::GetScriptFuncOnStop(void)
 0001:000066C0       zCCSCutsceneContext::Interrupt(void)
 0001:00006970       zCCSCutsceneContext::ForcedInterrupt(void)
 0001:00006C20       zCCSCutsceneContext::Play(zVEC3)
 0001:00007EC0       zVEC3::zVEC3(float,float,float)
 0001:00007EE0       zMAT4::GetTranslation(void)
 0001:00007F00       zCCSCutsceneContext::HandleTrigger(void)
 0001:000081A0       zCCSCutsceneContext::HandleUntrigger(void)
 0001:000081B0       zCCSCutsceneContext::GetLastTimePoint(void)
 0001:000081C0       zCCSCutsceneContext::GetLastTimeStamp(void)
 0001:000081D0       zCCSCutsceneContext::GetLastPlayResult(zSTRING &)
 0001:000086A0       zCCSCutsceneContext::AreU(zSTRING const &)
 0001:00008760       zCCSCutsceneContext::AreU(int)
 0001:00008780       zCCSCutsceneContext::IsForcedInterrupted(void)
 0001:000087A0       zCCSCutsceneContext::IsPlaying(void)
 0001:000087D0       zCCSCutsceneContext::IsFinished(void)
 0001:000087F0       zCCSCutsceneContext::ReplayCutscene(void)
 0001:00008800       zCCSCutsceneContext::SetPoolItem(zCCSPoolItem *)
 0001:00008860       zCCSCutsceneContext::PrepareBlock(void)
 0001:000088A0       zCCSCutsceneContext::GetStage(void)
 0001:000088C0       zCCSCutsceneContext::SetStage(zCVob *)
 0001:00008920       zCCSCutsceneContext::CatchPlayer(zCVob *)
 0001:00008930       zCCSCutsceneContext::ForcedResume(void)
 0001:00008950       zCCSCutsceneContext::CheckRoleReactions(void)
 0001:000089C0       zCCSCutsceneContext::PrintDebugInfo(zSTRING const &)
 0001:00008FC0       zCCSCutsceneContext::AddMainRole(zCVob *)
 0001:00008FF0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &)
 0001:00009110       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<char,std::char_traits<char>,std::allocator<char>>(char const *,std::allocator<char> const &)
 0001:000091D0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::compare(char const *)
 0001:00009230       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::compare(uint,uint,char const *,uint)
 0001:000092A0       zCArray<zCCSBlockPosition>::AllocDelta(int)
 0001:00009370       zCCSBlockPosition::`vector deleting destructor'(uint)
 0001:00009820       zCCSAtomicBlock::_CreateNewInstance(void)
 0001:00009950       zCCSBlockBase::InsertBlock(zCCSBlockBase *,int)
 0001:00009960       zCCSAtomicBlock::operator delete(void *)
 0001:00009980       zCCSAtomicBlock::_GetClassDef(void)
 0001:00009990       zCCSAtomicBlock::IsFinished(zCArray<zCEventManager *> const &)
 0001:000099A0       zCCSAtomicBlock::GetCommand(void)
 0001:00009B90       zCCSBlock::_CreateNewInstance(void)
 0001:00009C60       zCCSBlock::operator delete(void *)
 0001:00009C80       zCCSBlock::_GetClassDef(void)
 0001:00009E70       zCCSSyncBlock::_CreateNewInstance(void)
 0001:00009F40       zCCSBlockBase::_GetClassDef(void)
 0001:00009F50       zCCSSyncBlock::operator delete(void *)
 0001:00009F70       zCCSSyncBlock::_GetClassDef(void)
 0001:0000A170       zCCutscene::_CreateNewInstance(void)
 0001:0000A1D0       zCCutscene::operator delete(void *)
 0001:0000A3E0       zCCSRole::_CreateNewInstance(void)
 0001:0000A530       zCCSRole::operator delete(void *)
 0001:0000A550       zCCSRole::_GetClassDef(void)
 0001:0000A740       zCEvMsgCutscene::_CreateNewInstance(void)
 0001:0000A850       zCEvMsgCutscene::operator delete(void *)
 0001:0000A870       zCEvMsgCutscene::_GetClassDef(void)
 0001:0000A880       zCEvMsgCutscene::IsHighPriority(void)
 0001:0000A890       zCEvMsgCutscene::Delete(void)
 0001:0000A8A0       zCEvMsgCutscene::IsDeleted(void)
 0001:0000A8B0       zCEvMsgCutscene::`scalar deleting destructor'(uint)
 0001:0000A940       zCCSRole::zCCSRole(void)
 0001:0000AA60       zCCSRole::`scalar deleting destructor'(uint)
 0001:0000AA90       zCCSRole::zCCSRole(zSTRING &)
 0001:0000ABD0       zCCSRole::~zCCSRole(void)
 0001:0000AE80       zCCSRole::SetRoleVob(zCVob *)
 0001:0000B310       zCObject::Release(void)
 0001:0000B330       zCCSRole::GetRoleVob(void)
 0001:0000B340       zCCSRole::Archive(zCArchiver &)
 0001:0000B3A0       zCCSRole::Unarchive(zCArchiver &)
 0001:0000B4F0       zCEvMsgCutscene::zCEvMsgCutscene(zCEvMsgCutscene::TCutsceneSubType)
 0001:0000B640       zCEvMsgCutscene::~zCEvMsgCutscene(void)
 0001:0000B6A0       zCEvMsgCutscene::MD_GetNumOfSubTypes(void)
 0001:0000B6B0       zCEvMsgCutscene::MD_GetSubTypeString(int)
 0001:0000B860       zCCSBlockBase::zCCSBlockBase(void)
 0001:0000B9C0       zCCSBlockBase::`scalar deleting destructor'(uint)
 0001:0000B9F0       zCCSBlockBase::~zCCSBlockBase(void)
 0001:0000BA00       zCCSBlockBase::GetChild(int)
 0001:0000BA10       zCCSBlockBase::NewBlock(int,int)
 0001:0000BA20       zCCSBlockBase::GetNumOfChilds(void)
 0001:0000BA30       zCCSBlockBase::GetRoleNumOfChild(int)
 0001:0000BA40       zCCSBlockBase::BlockCorrection(void)
 0001:0000BA50       zCCSBlockBase::BlockAsFocus(int)
 0001:0000BA60       zCCSBlockBase::GetRoleName(void)
 0001:0000BAF0       zCCSBlockBase::SetRoleName(zSTRING &)
 0001:0000BB00       zCCSBlockBase::DeleteChild(int)
 0001:0000BB10       zCCSBlockBase::GetChildPos(int)
 0001:0000BB20       zCCSAtomicBlock::zCCSAtomicBlock(void)
 0001:0000BC50       zCCSAtomicBlock::`scalar deleting destructor'(uint)
 0001:0000BC80       zCCSAtomicBlock::~zCCSAtomicBlock(void)
 0001:0000BD20       zCCSAtomicBlock::OrganizeRoles(zCArray<zCVob *> &,zCArray<zCCSRole *> &)
 0001:0000BF80       zCCSAtomicBlock::Play(zCArray<zCEventManager *> const &)
 0001:0000BFA0       zCCSAtomicBlock::Play(zCArray<zCEventManager *> const &,float,float)
 0001:0000BFC0       zCCSAtomicBlock::Play(zCEventManager *)
 0001:0000C040       zCCSAtomicBlock::Play(zCEventManager *,float,float)
 0001:0000C050       zCCSAtomicBlock::GetMinTime(void)
 0001:0000C070       zCCSAtomicBlock::IsFinished(zCEventManager *)
 0001:0000C260       zCCSBlock::zCCSBlock(void)
 0001:0000C300       zCCSBlock::`scalar deleting destructor'(uint)
 0001:0000C330       zCCSBlock::~zCCSBlock(void)
 0001:0000C410       zCCSBlock::GetChild(int)
 0001:0000C430       zCCSBlock::GetChildPos(int)
 0001:0000C450       zCCSBlock::GetNumOfChilds(void)
 0001:0000C460       zCCSBlock::DeleteChild(int)
 0001:0000C4F0       zCCSBlock::Play(zCEventManager *)
 0001:0000C540       zCCSBlock::Play(zCEventManager *,float,float)
 0001:0000C600       zCCSBlock::Play(zCArray<zCEventManager *> const &)
 0001:0000C6D0       zCCSBlock::Play(zCArray<zCEventManager *> const &,float,float)
 0001:0000C7A0       zCCSBlock::GetMinTime(void)
 0001:0000C830       zCCSBlock::IsFinished(zCEventManager *)
 0001:0000C880       zCCSBlock::IsFinished(zCArray<zCEventManager *> const &)
 0001:0000C940       zCCSBlock::OrganizeRoles(zCArray<zCVob *> &,zCArray<zCCSRole *> &)
 0001:0000C990       zCCSBlock::GetRoleName(void)
 0001:0000C9E0       zCCSBlock::SetRoleName(zSTRING &)
 0001:0000CB20       zCCSBlock::InsertBlock(zCCSBlockBase *,int)
 0001:0000CBC0       zCCSBlock::NewBlock(int,int)
 0001:0000CC60       zCCSBlock::BlockAsFocus(int)
 0001:0000CCA0       zCCSBlock::BlockCorrection(void)
 0001:0000CDA0       zCCSSyncBlock::zCCSSyncBlock(void)
 0001:0000CE50       zCCSSyncBlock::`scalar deleting destructor'(uint)
 0001:0000CE80       zCCSSyncBlock::~zCCSSyncBlock(void)
 0001:0000CEE0       zCCSSyncBlock::IsFinished(zCArray<zCEventManager *> const &)
 0001:0000CF30       zCCSSyncBlock::Play(zCEventManager *)
 0001:0000CF80       zCCSSyncBlock::Play(zCArray<zCEventManager *> const &)
 0001:0000D030       zCCSSyncBlock::Play(zCArray<zCEventManager *> const &,float,float)
 0001:0000D0E0       zCCSSyncBlock::GetRoleNumOfChild(int)
 0001:0000D100       zCCSSyncBlock::InsertBlock(zCCSBlockBase *,int)
 0001:0000D1D0       zCCSSyncBlock::NewBlock(int,int)
 0001:0000D2A0       zCCSSyncBlock::BlockAsFocus(int)
 0001:0000D2F0       zCCSSyncBlock::DeleteChild(int)
 0001:0000D3B0       zCCSSyncBlock::AssignerCorrection(int)
 0001:0000D3E0       zCCutscene::zCCutscene(void)
 0001:0000D5A0       zCCSProps::operator delete(void *)
 0001:0000D5C0       zCCutscene::_GetClassDef(void)
 0001:0000D5D0       zCCutscene::IsCutscene(void)
 0001:0000D5E0       zCCutscene::`scalar deleting destructor'(uint)
 0001:0000D610       zCCutscene::~zCCutscene(void)
 0001:0000D780       zCCutscene::SetOwnerPlayer(zCCSPlayer *)
 0001:0000D7C0       zCCutscene::IsMember(zCVob *)
 0001:0000D7F0       zCCutscene::SetRoleListForDebugging(zCArray<zCCSRole *> &)
 0001:0000D9B0       zCCutscene::SaveRolesVobs(zCBuffer &)
 0001:0000DC40       zCCutscene::RestoreRoleVobs(zCBuffer &)
 0001:0000DEB0       zCCutscene::CheckMainRole(zCVob *)
 0001:0000ECF0       zCCutscene::GetStage(void)
 0001:0000ED00       zCCutscene::CheckPlayState(void)
 0001:0000EDC0       zCCutscene::PrepareBlock(void)
 0001:0000EE40       zCCutscene::AddRoleOU(zCVob *)
 0001:0000F670       zCCutscene::AddMainRole(zCVob *)
 0001:0000FEC0       zCCutscene::RemoveRole(zCVob *)
 0001:0000FF40       zCCutscene::CSCheck(int &)
 0001:000120C0       zCCutscene::StartPlaying(void)
 0001:00012B60       zCEventMessage::zCEventMessage(void)
 0001:00012CC0       zCEvMsgCutscene::SetCutsceneName(zSTRING)
 0001:00012E30       zCCutscene::Reset(void)
 0001:00012F30       zCCutscene::ClearCutscene(void)
 0001:00013120       zCCutscene::StopRole(zCVob *)
 0001:00013280       zCCutscene::SolveEventManager(int)
 0001:000132C0       zCCutscene::Stop(void)
 0001:00014390       zCCutscene::Interrupt(void)
 0001:00014D30       zCCutscene::GetActualBlockNum(void)
 0001:00014D40       zCCutscene::ResumeActBlock(void)
 0001:000150F0       zCCutscene::ResumeAtBlock(int)
 0001:00015100       zCCutscene::PlaySub(float,float)
 0001:00015160       zCCutscene::IsFinished(void)
 0001:00015170       zCCutscene::NewBlock(int,int)
 0001:00015350       zCCutscene::NewCS(zCCSManager *)
 0001:00015500       zSTRING::zSTRING(zSTRING const &)
 0001:00015600       zCCutscene::NewRole(zSTRING &)
 0001:000157B0       zCCutscene::DeleteRole(int)
 0001:000158A0       zCCutscene::RegisterAdditionalVob(zCTree<zCVob> *)
 0001:00015910       zCCutscene::LoadStage(void)
 0001:00015B30       zCCutscene::CatchPlayer(zCVob *)
 0001:00015B70       zCCSBlockPosition::zCCSBlockPosition(void)
 0001:00015B90       zCCSBlockPosition::zCCSBlockPosition(zCCSBlockBase *)
 0001:00015BB0       zCCSBlockPosition::zCCSBlockPosition(float,zCCSBlockBase *)
 0001:00015BD0       zCCSBlockPosition::~zCCSBlockPosition(void)
 0001:00015BE0       zCCSBlockPosition::operator=(zCCSBlockPosition const &)
 0001:00015C00       zCCSBlockBase::Archive(zCArchiver &)
 0001:00015C10       zCCSBlockBase::Unarchive(zCArchiver &)
 0001:00015C20       zCCSAtomicBlock::Archive(zCArchiver &)
 0001:00015C40       zCCSAtomicBlock::Unarchive(zCArchiver &)
 0001:00015C70       zCCSBlock::Archive(zCArchiver &)
 0001:00015E50       zCCSBlock::Unarchive(zCArchiver &)
 0001:00016090       zCCSSyncBlock::Archive(zCArchiver &)
 0001:000162C0       zCCSSyncBlock::Unarchive(zCArchiver &)
 0001:00016500       zCCutscene::Archive(zCArchiver &)
 0001:00016590       zCCutscene::Unarchive(zCArchiver &)
 0001:00016840       zCCutscene::FirstRoleUsed(void)
 0001:00016870       zCCutscene::CheckRoles(int &)
 0001:00016900       zCCutscene::PrintDebugInfo(zSTRING const &)
 0001:00016910       zCCutscene::GetLastCheckResult(zSTRING &)
 0001:00016C10       zCCutscene::TryToCancel(void)
 0001:00016C40       zCCutscene::GetFirstBlockPosition(void)
 0001:00016DB0       zTCSBlockPosition::~zTCSBlockPosition(void)
 0001:00016DD0       zCCutscene::GetNextMessage(zTCSBlockPosition &)
 0001:00016E20       zCCutscene::GetNextBlock(zTCSBlockPosition &)
 0001:00016E50       zCCutscene::SerializeCutscene(zCCutscene *,zTCSBlockPosition &)
 0001:00016FC0       zCCutscene::SerializeBlock(zCCSBlockBase *,zTCSBlockPosition &)
 0001:000170B0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::compare(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &)
 0001:00017100       zCArray<zCVob *>::~zCArray<zCVob *>(void)
 0001:00017120       zCArray<zCVob *>::InsertEnd(zCVob * const &)
 0001:000171F0       zCArray<zCEventManager *>::~zCArray<zCEventManager *>(void)
 0001:00017210       zCArray<zCEventManager *>::InsertEnd(zCEventManager * const &)
 0001:000172E0       zCArray<zCCSBlockBase *>::GetSafe(int)
 0001:000174A0       zCArray<zCCSBlockPosition>::~zCArray<zCCSBlockPosition>(void)
 0001:000174C0       zCArray<zCCSRole *>::~zCArray<zCCSRole *>(void)
 0001:000174E0       zCArray<int>::AllocDelta(int)
 0001:00017540       zCArray<zCVob *>::AllocDelta(int)
 0001:000175A0       zCArray<zCEventManager *>::AllocDelta(int)
 0001:00017600       zCArray<zCCSBlockBase *>::AllocDelta(int)
 0001:00017660       zCArray<zCCSBlockBase *>::InsertEnd(zCCSBlockBase * const &)
 0001:00017730       zCArray<zCCSBlockPosition>::InsertEnd(zCCSBlockPosition const &)
 0001:00017780       zCArray<zCCSRole *>::AllocDelta(int)
 0001:00017A00       zCCSLib::_CreateNewInstance(void)
 0001:00017B20       zCCSLib::operator delete(void *)
 0001:00017B40       zCCSLib::_GetClassDef(void)
 0001:00017B50       zCCSLib::Archive(zCArchiver &)
 0001:00017D80       zCCSLib::Unarchive(zCArchiver &)
 0001:00018320       zCCSLib::zCCSLib(void)
 0001:00018400       zCCSLib::`scalar deleting destructor'(uint)
 0001:00018430       zCCSLib::~zCCSLib(void)
 0001:00018510       zCCSLib::DeleteLib(void)
 0001:00018580       zCCSLib::RemoveFromLib(int,int)
 0001:000185F0       zCCSLib::ValidateToken(zSTRING &)
 0001:00018670       zCCSLib::IsLoaded(void)
 0001:00018680       zCCSLib::WasChanged(void)
 0001:00018690       zCCSLib::NextFree(void)
 0001:000186A0       zCCSLib::Add(zCCSBlock *)
 0001:00018750       zCCSLib::Change(void)
 0001:00018760       zCCSLib::GetOU(int)
 0001:00018770       zCCSLib::CompactLib(void)
 0001:000187D0       zCArraySort<zCCSBlock *>::~zCArraySort<zCCSBlock *>(void)
 0001:000187F0       zCArraySort<zCCSBlock *>::AllocDelta(int)
 0001:00018850       zCArraySort<zCCSBlock *>::InsertEnd(zCCSBlock * const &)
 0001:00018B40       zCCSManager::_CreateNewInstance(void)
 0001:00018BA0       zCCSManager::operator delete(void *)
 0001:00018BC0       zCCSManager::LibGetSvmModuleName(int)
 0001:00018E80       zCCSManager::LibIsSvmModuleRunning(int)
 0001:00018FC0       zCCSManager::LibSvmModuleStart(int)
 0001:00019160       zCCSManager::LibSvmModuleStop(int)
 0001:00019370       zCCSManager::zCCSManager(void)
 0001:00019470       zCCSManager::_GetClassDef(void)
 0001:00019480       zCCSManager::CreateMessage(int)
 0001:00019490       zCCSManager::CreateOuMessage(void)
 0001:000194A0       zCCSManager::`scalar deleting destructor'(uint)
 0001:000194D0       zCCSManager::~zCCSManager(void)
 0001:00019610       zCCSManager::CreateCutscenePlayer(zCWorld *)
 0001:00019690       zCCSPlayer::operator delete(void *)
 0001:000196B0       zCCSManager::RemoveCutscenePlayer(zCCSPlayer *)
 0001:000196C0       zCCSManager::InsertPlayerInList(zCCSPlayer *)
 0001:000197A0       zCCSManager::RemovePlayerFromList(zCCSPlayer *)
 0001:00019800       zCCSManager::InitiateCSwithContext(zCCSCutsceneContext *)
 0001:00019930       zCCSPoolItem::operator delete(void *)
 0001:00019950       zCCSManager::InitiateOUwithContext(zCCSCutsceneContext *)
 0001:00019980       zCCSManager::CreateNewCutscene(zSTRING &)
 0001:00019AC0       zCCSManager::CreateNewOutputUnit(int)
 0001:00019B50       zCCSManager::IsDeactivated(zSTRING &)
 0001:00019B70       zCCSManager::PoolCountStart(zSTRING &)
 0001:00019B90       zCCSManager::PoolCountStop(zSTRING &)
 0001:00019BB0       zCCSManager::PoolHasFlags(zSTRING &,int)
 0001:00019BE0       zCCSManager::PoolClrFlags(zSTRING &,int)
 0001:00019C00       zCCSManager::PoolSetFlags(zSTRING &,int)
 0001:00019C20       zCCSManager::PoolNumPlayed(zSTRING &)
 0001:00019C40       zCCSManager::PoolAllowedToStart(zSTRING &)
 0001:00019C70       zCCSManager::PoolInsertItem(zCCSPoolItem *)
 0001:00019D50       zCCSManager::PoolFindItem(zSTRING &)
 0001:00019EA0       zCCSManager::PoolResetAll(void)
 0001:00019ED0       zCCSManager::PoolResetByHour(void)
 0001:00019F10       zCCSManager::PoolResetByDay(void)
 0001:00019F50       zCCSManager::AddCommand(zSTRING &)
 0001:0001A0C0       zCCSManager::GetNumOfShortCom(void)
 0001:0001A0D0       zCCSManager::GetShortCom(int)
 0001:0001A250       zCCSManager::Archive(zCArchiver &)
 0001:0001A4A0       zCCSManager::Unarchive(zCArchiver &)
 0001:0001A700       zCCSManager::LibLoad(int)
 0001:0001AD80       zCCSManager::LibCheckLoaded(int)
 0001:0001ADA0       zCCSManager::LibGetFirst(void)
 0001:0001AE00       zCCSManager::LibGetNext(void)
 0001:0001AE50       zCCSManager::LibGetFirst(int &)
 0001:0001AEC0       zCCSManager::LibGetNext(int &)
 0001:0001AF20       zCCSManager::LibGet(int)
 0001:0001AF50       zCCSManager::LibAddOU(zCCSBlock *)
 0001:0001AF70       zCCSManager::LibDelOU(int)
 0001:0001AF90       zCCSManager::LibNullOU(int)
 0001:0001AFB0       zCCSManager::LibStore(int)
 0001:0001B3B0       zCCSManager::LibValidateOU(int)
 0001:0001B3E0       zCCSManager::LibValidateOU(zSTRING &)
 0001:0001B400       zCCSManager::LibForceToLoad(void)
 0001:0001B410       zCCSManager::LibIsLoaded(void)
 0001:0001B420       zCCSManager::CreateProperties(void)
 0001:0001B480       zCArray<zSTRING>::~zCArray<zSTRING>(void)
 0001:0001B4A0       zCArray<zCCSPoolItem *>::~zCArray<zCCSPoolItem *>(void)
 0001:0001B4C0       zCArray<zCCSPlayer *>::~zCArray<zCCSPlayer *>(void)
 0001:0001B4E0       zCArray<zCCSPoolItem *>::AllocDelta(int)
 0001:0001B540       zCArray<zSTRING>::AllocDelta(int)
 0001:0001B760       zSTRING::`vector deleting destructor'(uint)
 0001:0001B9E0       zCCSPlayer::_CreateNewInstance(void)
 0001:0001BAD0       zCCSDebugger::`scalar deleting destructor'(uint)
 0001:0001BAF0       zCCSPlayer::_GetClassDef(void)
 0001:0001BB00       zCCSPlayer::zCCSPlayer(void)
 0001:0001BC00       zCCSPlayer::`scalar deleting destructor'(uint)
 0001:0001BC30       zCCSPlayer::~zCCSPlayer(void)
 0001:0001BD80       zCCSPlayer::SetOwnerWorld(zCWorld *)
 0001:0001BD90       zCCSPlayer::SetOwnerManager(zCCSManager *)
 0001:0001BDA0       zCCSPlayer::StartCutscene(zCCutscene *,zCVob *,zSTRING)
 0001:0001C230       zCCutscene::GetProperties(void)
 0001:0001C240       zCCSPlayer::StartCutscene(zSTRING &,zCVob *)
 0001:0001C540       zCCSPlayer::CreateNewOutputUnit(int,zCVob *)
 0001:0001C850       zCCSPlayer::StartOutputUnit(int,zCVob *)
 0001:0001CDB0       zCCSPlayer::ForgetCutscene(zCCutscene *)
 0001:0001CEB0       zCCSPlayer::Interrupt(void)
 0001:0001CF10       zCCSPlayer::Resume(void)
 0001:0001CFB0       zCCSPlayer::InsertCutscene(zCCSCutsceneContext *)
 0001:0001D2C0       zCCSPlayer::RemoveCutscene(zCCSCutsceneContext *)
 0001:0001D5E0       zCCSPlayer::OnCSTrigger(zSTRING &,zCVob *)
 0001:0001D880       zCCSPlayer::OnCSUntrigger(zSTRING &,zCVob *)
 0001:0001DA10       zCCSPlayer::Archive(zCArchiver &)
 0001:0001DD10       zCCSPlayer::Unarchive(zCArchiver &)
 0001:0001E0E0       zCCSDebugger::~zCCSDebugger(void)
 0001:0001E110       zCCSPlayer::CSDB_BeginSyncBlock(zCCSSyncBlock *)
 0001:0001E210       zCCSPlayer::CSDB_BeginAtomBlock(zCCSBlockBase *)
 0001:0001E450       zCCSPlayer::CSDB_EndAtomBlock(zCCSBlockBase *)
 0001:0001E660       zCCSPlayer::CSDB_Error(zCCSBlockBase *,zSTRING &)
 0001:0001E890       zCCSPlayer::CSDB_Warning(zCCSBlockBase *,zSTRING &)
 0001:0001EAC0       zCCSPlayer::CSDB_StartPlaying(zCCutscene *)
 0001:0001EAD0       zCCSPlayer::CSDB_Stop(zCCutscene *)
 0001:0001EAE0       zCCSPlayer::ResetCutscenePlayer(void)
 0001:0001EB00       zCCSPlayer::StopAllCutscenes(zCVob *)
 0001:0001EE30       zCCSPlayer::StopAllOutputUnits(zCVob *)
 0001:0001F180       zCCSPlayer::IsAssigned(zSTRING &,zSTRING &)
 0001:0001F1E0       zCCSPlayer::PrintListOfCutscenes(zSTRING const &)
 0001:0001F5A0       zCCSPlayer::GetStartedCutscene(zCVob *)
 0001:0001F610       zCCSPlayer::GetStartedCutscene(zSTRING const &)
 0001:0001F770       zCCSPlayer::GetPlayingGlobalCutscene(void)
 0001:0001F810       zCCSPlayer::UpdateCutscenesNow(void)
 0001:0001F860       zCCSPlayer::DebugResetInfoscreen(void)
 0001:0001F890       zCCSPlayer::DebugAddCutscene(int,zVEC3,int)
 0001:0001F8C0       zCCSPlayer::Process(void)
 0001:0001F980       zCCSPlayer::ProcessList(zVEC3 const &,int,int,int)
 0001:0001FB40       zVEC3::zVEC3(zVEC3 const &)
 0001:0001FB60       zCCSPlayer::ProcessCutscene(zCCSCutsceneContext *,zVEC3 const &)
 0001:0001FC60       zCCSPlayer::ToggleDebugInfo(void)
 0001:0001FD30       zCList<zCCSCutsceneContext>::~zCList<zCCSCutsceneContext>(void)
 0001:0001FD60       zCList<zCCSCutsceneContext>::GetNumInList(void)
 0001:0001FD80       zCList<zCCSCutsceneContext>::`scalar deleting destructor'(uint)
 0001:0001FDC0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::append(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &,uint,uint)
 0001:0001FEA0       zCList<zCCSCutsceneContext>::Get(int)
 0001:000200F0       zCCSPoolItem::_CreateNewInstance(void)
 0001:00020220       zCCSPoolItem::_GetClassDef(void)
 0001:00020230       zCCSPoolItem::zCCSPoolItem(void)
 0001:00020360       zCCSPoolItem::`scalar deleting destructor'(uint)
 0001:00020390       zCCSPoolItem::zCCSPoolItem(zCCSCutsceneContext *)
 0001:000204F0       zCCSPoolItem::Init(void)
 0001:00020500       zCCSPoolItem::~zCCSPoolItem(void)
 0001:00020580       zCCSPoolItem::GetRunBehaviour(int &)
 0001:00020590       zCCSPoolItem::GetRunBehaviour(void)
 0001:000205A0       zCCSPoolItem::SetRunBehaviour(zCCSProps::zTCSRunBehaviour,int &)
 0001:000205C0       zCCSPoolItem::Archive(zCArchiver &)
 0001:00020640       zCCSPoolItem::Unarchive(zCArchiver &)
 0001:00020820       zCCSPoolItem::TestedDeactivation(void)
 0001:00020840       zCCSPoolItem::IsAllowedToPlay(void)
 0001:00020860       zCCSPoolItem::PrintDebugInfo(void)
 0001:00020BC0       zCCSPoolItem::ClrFlags(long)
 0001:00020BE0       zCCSPoolItem::SetFlags(long)
 0001:00020BF0       zCCSPoolItem::HasFlags(long)
 0001:00020E40       zCCSProps::_CreateNewInstance(void)
 0001:00020EA0       zCCSProps::zCCSProps(void)
 0001:00021060       zCCSProps::_GetClassDef(void)
 0001:00021070       zCCSProps::`scalar deleting destructor'(uint)
 0001:000210A0       zCCSProps::~zCCSProps(void)
 0001:00021160       zCCSProps::Archive(zCArchiver &)
 0001:00021240       zCCSProps::Unarchive(zCArchiver &)
 0001:00021330       zCCSProps::CheckDistance(float)
 0001:00021370       zCCSProps::CheckRange(float)
 0001:000213A0       zCCSProps::GetCheckRoleResult(void)
 0001:000213B0       zCCSProps::PrintDebugInfo(void)
 0001:00021B80       zCCSProps::AcceptRole(zCCSRole *,zCVob *)
 0001:00021B90       zCCSProps::CheckRole(zCCSRole *,zCVob *)
 0001:00021BD0       oCBinkPlayer::oCBinkPlayer(void)
 0001:00021BF0       oCBinkPlayer::`scalar deleting destructor'(uint)
 0001:00021C10       oCBinkPlayer::~oCBinkPlayer(void)
 0001:00021C20       oCBinkPlayer::PlayInit(int)
 0001:00021C80       oCBinkPlayer::PlayDeinit(void)
 0001:00021C90       oCBinkPlayer::PlayFrame(void)
 0001:00021CA0       oCBinkPlayer::PlayHandleEvents(void)
 0001:00022780       oCBinkPlayer::OpenVideo(zSTRING)
 0001:00022E30       oCGameInfo::oCGameInfo(void)
 0001:00022E50       zCGameInfo::SetName(zSTRING const &)
 0001:00022F90       zCGameInfo::GetName(void)
 0001:00022FE0       oCGameInfo::`scalar deleting destructor'(uint)
 0001:00023000       oCGameInfo::~oCGameInfo(void)
 0001:00023010       oCGameInfo::Init(void)
 0001:000230D0       oCGameInfo::Pack(zCBuffer &,uchar)
 0001:000230E0       oCGameInfo::Unpack(zCBuffer &)
 0001:000234E0       CGameManager::CGameManager(void)
 0001:00023710       CGameManager::`scalar deleting destructor'(uint)
 0001:00023730       CGameManager::~CGameManager(void)
 0001:000238F0       CGameManager::Tool_ConvertData(void)
 0001:00023C10       zCTextureFileHandler::~zCTextureFileHandler(void)
 0001:00023C20       zCTextureFileHandler::`scalar deleting destructor'(uint)
 0001:00023C40       zCModelConvertFileHandler::~zCModelConvertFileHandler(void)
 0001:00023C50       zCMorphMeshConvertFileHandler::~zCMorphMeshConvertFileHandler(void)
 0001:00023C60       zCProgMeshConvertFileHandler::~zCProgMeshConvertFileHandler(void)
 0001:00023C70       CGameManager::Init(HWND__ * &)
 0001:00024430       emergency_exit(void)
 0001:000244E0       CGameManager::Done(void)
 0001:00024780       CGameManager::ExitGame(void)
 0001:00024790       CGameManager::ExitSession(void)
 0001:00024830       CGameManager::Run(void)
 0001:00024F30       ExitGameFunc(void)
 0001:00024F60       CGameManager::InitScreen_Open(void)
 0001:00025210       CGameManager::InitScreen_Menu(void)
 0001:00025330       CGameManager::InitScreen_Close(void)
 0001:00025430       CGameManager::InitSettings(void)
 0001:00025640       SplashDialogProc(HWND__ *,uint,uint,long)
 0001:00025660       SplashThreadProc(void *)
 0001:00025770       CGameManager::ShowSplashScreen(void)
 0001:000257B0       CGameManager::RemoveSplashScreen(void)
 0001:000257D0       CGameManager::GameInit(void)
 0001:00025A50       oCObjectFactory::operator delete(void *)
 0001:00025A70       oCObjectFactory::_GetClassDef(void)
 0001:00025C40       oCObjectFactory::`scalar deleting destructor'(uint)
 0001:00025C70       oCObjectFactory::~oCObjectFactory(void)
 0001:00025C80       zCObjectFactory::_GetClassDef(void)
 0001:00025C90       zCObjectFactory::CreateGameInfo(void)
 0001:00025CA0       zCObjectFactory::CreatePlayerInfo(void)
 0001:00025CB0       zCObjectFactory::`scalar deleting destructor'(uint)
 0001:00025CE0       zCObjectFactory::~zCObjectFactory(void)
 0001:00025CF0       CGameManager::GameDone(void)
 0001:00025D20       CGameManager::GameSessionReset(void)
 0001:00025E10       CGameManager::GameSessionInit(void)
 0001:00025F70       CGameManager::GameSessionDone(void)
 0001:00026070       CGameManager::ShowIntro(void)
 0001:00026080       CGameManager::ShowExtro(void)
 0001:00026090       CGameManager::PreMenu(void)
 0001:000265C0       zTRnd_DeviceInfo::~zTRnd_DeviceInfo(void)
 0001:00026610       CGameManager::PostMenu(zSTRING)
 0001:000266B0       CGameManager::ApplySomeSettings(void)
 0001:00028280       CGameManager::GetPlaytimeSeconds(void)
 0001:000282D0       CGameManager::Menu(int)
 0001:00029040       CGameManager::Read_Savegame(int)
 0001:000292D0       CGameManager::Write_Savegame(int)
 0001:00029610       oCSavegameInfo::GetName(void)
 0001:00029660       oCSavegameInfo::GetWorldName(void)
 0001:000296B0       oCWorld::GetWorldName(void)
 0001:00029700       CGameManager::HandleCancelKey(int)
 0001:00029AF0       CGameManager::MenuEnabled(int &)
 0001:00029D50       CGameManager::HandleEvent(int)
 0001:0002A1B0       CGameManager::GetGame(void)
 0001:0002A1C0       CGameManager::IsIntroActive(void)
 0001:0002A1E0       CGameManager::InsertMenuWorld(zSTRING &,zSTRING &)
 0001:0002A1F0       CGameManager::RemoveMenuWorld(void)
 0001:0002A200       CGameManager::IsGameRunning(void)
 0001:0002A220       CGameManager::IntroduceChapter(void)
 0001:0002A7E0       CGameManager::IntroduceChapter(zSTRING,zSTRING,zSTRING,zSTRING,int)
 0001:0002A940       CGameManager::PlayVideo(zSTRING)
 0001:0002AB10       CGameManager::PlayVideoEx(zSTRING,short,int)
 0001:0002ADE0       CGameManager::ShowRealPlayTime(void)
 0001:0002B140       VidIsResolutionValid(int,int,int)
 0001:0002B1D0       DefineMenuScriptFunctions(void)
 0001:0002B450       Apply_Options_Video(void)
 0001:0002C040       Apply_Options_Performance(void)
 0001:0002C240       ChangeMusicEnabled(zCOptionEntry &)
 0001:0002C4E0       Apply_Options_Audio(void)
 0001:0002C710       Apply_Options_Game(void)
 0001:0002C940       Apply_Options_Controls(void)
 0001:0002CB70       Update_ChoiceBox(void)
 0001:0002D7F0       oCMenuSavegame::oCMenuSavegame(zSTRING const &,oCMenuSavegame::oTMenuSavegameMode)
 0001:0002D860       oCMenuSavegame::`scalar deleting destructor'(uint)
 0001:0002D880       oCMenuSavegame::~oCMenuSavegame(void)
 0001:0002D920       oCMenu_Main::~oCMenu_Main(void)
 0001:0002D930       oCMenuSavegame::Activate(void)
 0001:0002D940       oCMenuSavegame::HandleSlotChange(int)
 0001:0002E130       oCSavegameInfo::GetSaveTime(void)
 0001:0002E180       oCMenuSavegame::HandleEvent(int)
 0001:0002E1E0       oCMenuSavegame::ScreenInit(void)
 0001:0002EA30       oCMenuSavegame::ScreenDone(void)
 0001:0002EF30       oCMenuSavegame::GetMenuItemSlotNr(zCMenuItem *)
 0001:0002F0F0       oCMenuSavegame::GetSelectedSlot(void)
 0001:0002F100       oCMenuSavegame::SetScreenshot(zCTextureConvert *)
 0001:0002F1B0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::append(char const *,uint)
 0001:0002F540       oBert_StartUp(void)
 0001:00030D20       zMAT4::GetAtVector(void)
 0001:00031430       oBert_ShutDown(void)
 0001:00031440       ShowMoreInfos(oCNpc *,oCNpc *)
 0001:00031EC0       HandleResultString(zSTRING)
 0001:00033990       ClearLogStatistics(void)
 0001:00033A80       LogStatistics(oCNpc *)
 0001:00034870       zSTRING::zSTRING(int)
 0001:00034970       zSTRING::zSTRING(float,int)
 0001:00034AC0       LogStatisticsWrite(zSTRING const &)
 0001:00034CA0       LogStatisticsRead(zSTRING const &)
 0001:00034F40       zCArray<zSTRING>::InsertEnd(zSTRING const &)
 0001:000353E0       oCPlayerInfo::oCPlayerInfo(void)
 0001:00035400       zCPlayerInfo::SetName(zSTRING const &)
 0001:00035540       oCPlayerInfo::`scalar deleting destructor'(uint)
 0001:00035560       oCPlayerInfo::Init(zSTRING const &,zSTRING const &)
 0001:00035570       oCPlayerInfo::~oCPlayerInfo(void)
 0001:00035580       oCPlayerInfo::SetInstance(TPlayerInstance)
 0001:00035590       oCPlayerInfo::SetInstanceByName(zSTRING const &)
 0001:000356D0       oCPlayerInfo::GetInstanceName(void)
 0001:00035720       oCPlayerInfo::GetInstance(void)
 0001:00035730       oCPlayerInfo::Pack(zCBuffer &)
 0001:00035750       oCPlayerInfo::Unpack(zCBuffer &)
 0001:00035770       oCPlayerInfo::Reset(void)
 0001:00035B20       oCSavegameInfo::_CreateNewInstance(void)
 0001:00035B80       oCSavegameInfo::operator delete(void *)
 0001:00035BA0       oCSavegameInfo::oCSavegameInfo(void)
 0001:00035D30       oCSavegameInfo::_GetClassDef(void)
 0001:00035D40       oCSavegameInfo::`scalar deleting destructor'(uint)
 0001:00035D70       oCSavegameInfo::oCSavegameInfo(int)
 0001:00035F10       oCSavegameInfo::Init(void)
 0001:000360E0       oCSavegameInfo::DoesSavegameExist(void)
 0001:000360F0       oCSavegameInfo::UpdateThumbPic(zCTextureConvert *)
 0001:000362F0       zCTextureFileFormatInternal::operator delete(void *)
 0001:00036310       oCSavegameInfo::GetDir(void)
 0001:00036360       oCSavegameInfo::ReloadResources(void)
 0001:00036550       oCSavegameInfo::CleanResources(void)
 0001:00036580       oCSavegameInfo::SetSlot(int)
 0001:00036810       oCSavegameInfo::~oCSavegameInfo(void)
 0001:00036970       oCSavegameInfo::Archive(zCArchiver &)
 0001:00036EC0       oCSavegameInfo::Unarchive(zCArchiver &)
 0001:00037440       oCSavegameInfo::GetGameTime(void)
 0001:000376F0       oCSavegameManager::oCSavegameManager(void)
 0001:000378B0       oCSavegameManager::`scalar deleting destructor'(uint)
 0001:000378D0       oCSavegameManager::~oCSavegameManager(void)
 0001:00037990       oCSavegameManager::Init(void)
 0001:00038070       oCSavegameManager::Reinit(void)
 0001:00038080       oCSavegameManager::CleanResources(void)
 0001:000380E0       oCSavegameManager::SetAndWriteSavegame(int,oCSavegameInfo *)
 0001:000382E0       oCSavegameManager::GetSavegame(int)
 0001:00038310       oCSavegameManager::CopyToCurrent(int)
 0001:000384C0       oCSavegameManager::CopyFromCurrent(int)
 0001:00038670       oCSavegameManager::ClearCurrent(void)
 0001:000387B0       oCSavegameManager::GetSlotDirName(int)
 0001:00038A00       zCArray<oCSavegameInfo *>::~zCArray<oCSavegameInfo *>(void)
 0001:00038A50       oCSystemInfo::oCSystemInfo(void)
 0001:00038AC0       oCSystemInfo::`scalar deleting destructor'(uint)
 0001:00038AE0       oCSystemInfo::~oCSystemInfo(void)
 0001:00038AF0       oCSystemInfo::AnalyseNow(void)
 0001:00038B00       oCSystemInfo::ResetSettings(float)
 0001:000393F0       oCSystemInfo::ScoreNow(void)
 0001:0003A1F0       oCSystemInfo::GetGraphicsBonus(void)
 0001:0003A330       oCSystemInfo::GetSoundBonus(void)
 0001:0003A340       oCSystemInfo::GetScoreDescr(float)
 0001:0003A940       oCTriggerChangeLevel::_CreateNewInstance(void)
 0001:0003AA00       oCTriggerChangeLevel::operator delete(void *)
 0001:0003AA20       oCTriggerChangeLevel::_GetClassDef(void)
 0001:0003AC20       oCTriggerScript::_CreateNewInstance(void)
 0001:0003ACC0       oCTriggerScript::operator delete(void *)
 0001:0003ACE0       oCTriggerScript::_GetClassDef(void)
 0001:0003ACF0       oCTriggerChangeLevel::oCTriggerChangeLevel(void)
 0001:0003AD50       oCTriggerChangeLevel::`scalar deleting destructor'(uint)
 0001:0003AD80       oCTriggerChangeLevel::~oCTriggerChangeLevel(void)
 0001:0003AE20       oCTriggerChangeLevel::TriggerTarget(zCVob *)
 0001:0003B130       oCTriggerChangeLevel::UntriggerTarget(zCVob *)
 0001:0003B140       oCTriggerChangeLevel::SetLevelName(zSTRING const &,zSTRING const &)
 0001:0003B370       oCTriggerChangeLevel::Archive(zCArchiver &)
 0001:0003B3B0       oCTriggerChangeLevel::Unarchive(zCArchiver &)
 0001:0003B3F0       oCTriggerScript::oCTriggerScript(void)
 0001:0003B430       oCTriggerScript::`scalar deleting destructor'(uint)
 0001:0003B460       oCTriggerScript::~oCTriggerScript(void)
 0001:0003B4C0       oCTriggerScript::TriggerTarget(zCVob *)
 0001:0003B820       oCTriggerScript::UntriggerTarget(zCVob *)
 0001:0003BAB0       oCTriggerScript::SetScriptFunc(zSTRING const &,int)
 0001:0003BC00       oCTriggerScript::Archive(zCArchiver &)
 0001:0003BC30       oCTriggerScript::Unarchive(zCArchiver &)
 0001:0003BC60       oCObjectGenerator::oCObjectGenerator(void)
 0001:0003BCB0       zCVob::_GetClassDef(void)
 0001:0003BCC0       zCVob::OnTimer(void)
 0001:0003BCD0       zCVob::GetTriggerTarget(int)
 0001:0003BCE0       oCObjectGenerator::`scalar deleting destructor'(uint)
 0001:0003BD10       oCObjectGenerator::~oCObjectGenerator(void)
 0001:0003BD70       oCObjectGenerator::SetObjectName(zSTRING const &)
 0001:0003BEB0       oCObjectGenerator::SetObjectSpeed(float)
 0001:0003BEC0       oCObjectGenerator::OnTrigger(zCVob *,zCVob *)
 0001:0003C180       zCVob::operator delete(void *)
 0001:0003C1A0       oCObjectGenerator::Archive(zCArchiver &)
 0001:0003C1E0       oCObjectGenerator::Unarchive(zCArchiver &)
 0001:0003C2B0       oCViewGothicProgressBar::Init(void)
 0001:0003C2F0       oCViewGothicProgressBar::HandleChange(void)
 0001:0003C410       oCViewStatusBar::oCViewStatusBar(void)
 0001:0003C4E0       zCInputCallback::HandleEvent(int)
 0001:0003C4F0       zCView::GetViewport(int &,int &,int &,int &)
 0001:0003C520       oCViewStatusBar::`scalar deleting destructor'(uint)
 0001:0003C540       oCViewStatusBar::oCViewStatusBar(int,int,int,int,zTviewID)
 0001:0003C620       oCViewStatusBar::Init(int,int,float)
 0001:0003C7B0       oCViewStatusBar::SetTextures(zSTRING const &,zSTRING const &,zSTRING const &,zSTRING const &)
 0001:0003CA50       oCViewStatusBar::~oCViewStatusBar(void)
 0001:0003CBA0       oCViewStatusBar::SetMaxRange(float,float)
 0001:0003CCB0       oCViewStatusBar::SetRange(float,float)
 0001:0003CD80       oCViewStatusBar::SetPreview(float)
 0001:0003CD90       oCViewStatusBar::SetValue(float)
 0001:0003CE30       zCBinkPlayer::zCBinkPlayer(void)
 0001:0003CF60       zCBinkPlayer::`scalar deleting destructor'(uint)
 0001:0003CF80       zCBinkPlayer::~zCBinkPlayer(void)
 0001:0003D0F0       zCBinkPlayer::OpenVideo(zSTRING)
 0001:0003DCF0       zFILE_FILE::GetFile(void)
 0001:0003DDA0       zFILE_FILE::GetExt(void)
 0001:0003DDF0       zCBinkPlayer::CloseVideo(void)
 0001:0003E030       zCVideoPlayer::GetVideoFilename(void)
 0001:0003E080       zCBinkPlayer::PlayInit(int)
 0001:0003ED20       zCBinkPlayer::PlayDeinit(void)
 0001:0003F510       zCBinkPlayer::PlayGotoNextFrame(void)
 0001:0003F520       zCBinkPlayer::PlayWaitNextFrame(void)
 0001:0003F560       zCBinkPlayer::PlayFrame(void)
 0001:0003F710       zCBinkPlayer::Pause(void)
 0001:0003F730       zCBinkPlayer::Unpause(void)
 0001:0003F750       zCBinkPlayer::PlayHandleEvents(void)
 0001:0003F760       zCBinkPlayer::IsPlaying(void)
 0001:0003F790       zCBinkPlayer::GetPixelFormat(zTRndSurfaceDesc &)
 0001:0003F8E0       zCBinkPlayer::ToggleSound(void)
 0001:0003F930       zCBinkPlayer::SetSoundVolume(float)
 0001:0003F960       zCBinkPlayer::SetFullscreen(int,zSTRING)
 0001:0003FAF0       zCBuffer::zCBuffer(void)
 0001:0003FB30       zCBuffer::`scalar deleting destructor'(uint)
 0001:0003FB70       zCBuffer::zCBuffer(ulong const &)
 0001:0003FBF0       zCBuffer::zCBuffer(void *,ulong const &)
 0001:0003FC40       zCBuffer::Init(void)
 0001:0003FC70       zCBuffer::~zCBuffer(void)
 0001:0003FCA0       zCBuffer::SetMode(zTBufferMode)
 0001:0003FCB0       zCBuffer::Reset(void)
 0001:0003FCD0       zCBuffer::Resize(ulong)
 0001:0003FD60       zCBuffer::Write(void const *,ulong)
 0001:0003FD80       zCBuffer::WriteBits(void const *,ulong)
 0001:0003FF00       zCBuffer::WriteBool(int,int)
 0001:0003FF20       zCBuffer::WriteByte(uchar,int)
 0001:0003FF40       zCBuffer::WriteWord(ushort,int)
 0001:0003FF60       zCBuffer::WriteDWord(ulong,int)
 0001:0003FF80       zCBuffer::WriteReal(float,int)
 0001:0003FFA0       zCBuffer::WriteInt(int,int)
 0001:0003FFC0       zCBuffer::WriteFloat(float,int)
 0001:0003FFE0       zCBuffer::WriteFloatPacked0_16(float)
 0001:00040010       zCBuffer::WriteFloatPacked0_8(float)
 0001:00040040       zCBuffer::WriteFloatPacked8_8(float)
 0001:000400B0       zCBuffer::WriteString(zSTRING)
 0001:00040130       zCBuffer::CompleteByte(void)
 0001:00040160       zCBuffer::Read(void *,ulong)
 0001:00040180       zCBuffer::ReadBits(void *,ulong)
 0001:00040240       zCBuffer::ReadBool(int)
 0001:00040260       zCBuffer::ReadByte(int)
 0001:00040280       zCBuffer::ReadWord(int)
 0001:000402B0       zCBuffer::ReadDWord(int)
 0001:000402E0       zCBuffer::ReadReal(int)
 0001:00040300       zCBuffer::ReadInt(int)
 0001:00040320       zCBuffer::ReadFloat(int)
 0001:00040340       zCBuffer::ReadFloatPacked0_16(void)
 0001:00040370       zCBuffer::ReadFloatPacked0_8(void)
 0001:000403A0       zCBuffer::ReadFloatPacked8_8(void)
 0001:000403D0       zCBuffer::ReadString(void)
 0001:000405B0       zCBuffer::SetPos(ulong const &)
 0001:000405D0       zCBuffer::SetBitPos(ulong const &)
 0001:000405F0       zCBuffer::SetPosRel(int)
 0001:00040610       zCBuffer::SetBitPosRel(int)
 0001:00040630       zCBuffer::SetPosBegin(void)
 0001:00040640       zCBuffer::SetPosEnd(void)
 0001:00040660       zCBuffer::GetPos(void)
 0001:00040670       zCBuffer::GetBitPos(void)
 0001:00040680       zCBuffer::GetMaxSize(void)
 0001:00040690       zCBuffer::GetBitMaxSize(void)
 0001:000406A0       zCBuffer::GetSize(void)
 0001:000406B0       zCBuffer::GetBitSize(void)
 0001:000406C0       zCBuffer::GetRestSize(void)
 0001:000406D0       zCBuffer::GetBitRestSize(void)
 0001:000406E0       zCBuffer::GetBuffer(void)
 0001:000406F0       zCBuffer::GetCursor(void)
 0001:00040700       zCBuffer::SkipByte(void)
 0001:00040730       zCBuffer::GetBitSizeToNextByte(void)
 0001:00040740       zCBuffer::HasError(void)
 0001:00040750       operator==(zCBuffer const &,zCBuffer const &)
 0001:00040780       zCBuffer::WriteObject(zCObject * &)
 0001:00040900       zCBuffer::ReadObject(zCObject * &)
 0001:00040AF0       zCBuffer::zCBuffer(zCBuffer const &)
 0001:00040B40       zCBuffer::operator=(zCBuffer const &)
 0001:00040B60       zCBuffer::CopyFrom(zCBuffer const &)
 0001:00040BE0       zCBuffer::ByteFreq_Reset(void)
 0001:00040C00       zCBuffer::ByteFreq_Analyse(void)
 0001:00040C30       zCBuffer::ByteFreq_Print(void)
 0001:00041030       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(uint,char)
 0001:00041260       zFILE::SetRootDirectory(zSTRING)
 0001:00041390       zFILE::DirectFileConvert(zSTRING &)
 0001:00041530       zFILE::DirectFileAccess(bool)
 0001:00041710       zFILE::GetFreeDiskSpace(void)
 0001:00041720       zFILE::LockDirScan(void)
 0001:00041740       zFILE::UnlockDirScan(void)
 0001:00041760       zFILE::DirectFileAccess(bool,zSTRING &)
 0001:00041780       operator==(zDATE const &,zDATE const &)
 0001:000417F0       operator<(zDATE const &,zDATE const &)
 0001:00041860       zDATE::operator=(long)
 0001:000418B0       zDATE::ToTime_t(void)
 0001:00041900       zDATE::ToString(zTDATE_CONVERT)
 0001:00041A70       zFILE_FILE::HandleError(zSTRING const &,zSTRING const &,zERROR_TYPE)
 0001:00041EF0       zFILE::zFILE(void)
 0001:00041F10       zFILE::`scalar deleting destructor'(uint)
 0001:00041F30       zFILE::zFILE(zSTRING const &)
 0001:00041F50       zFILE::~zFILE(void)
 0001:00041F60       zFILE_FILE::Init(zSTRING const &)
 0001:00041FD0       zFILE_FILE::zFILE_FILE(void)
 0001:00042130       zFILE_FILE::SetMode(long)
 0001:00042140       zFILE_FILE::GetMode(void)
 0001:00042150       zFILE_FILE::GetFileHandle(void)
 0001:00042160       zFILE_FILE::GetPath(void)
 0001:000421B0       zFILE_FILE::GetDirectoryPath(void)
 0001:00042200       zFILE_FILE::GetDrive(void)
 0001:00042250       zFILE_FILE::GetDir(void)
 0001:000422A0       zFILE_FILE::GetFilename(void)
 0001:000422F0       zFILE_FILE::IsOpened(void)
 0001:00042300       zFILE_FILE::Create(zSTRING const &)
 0001:00042360       zFILE_FILE::Open(zSTRING const &,bool)
 0001:000423D0       zFILE_FILE::Exists(zSTRING const &)
 0001:00042430       zFILE_FILE::`scalar deleting destructor'(uint)
 0001:00042450       zFILE_FILE::zFILE_FILE(zSTRING const &)
 0001:00042580       zFILE_FILE::~zFILE_FILE(void)
 0001:000426B0       zFILE_FILE::Exists(void)
 0001:00042730       zFILE_FILE::GetStats(zFILE_STATS &)
 0001:000428A0       zFILE_FILE::Size(void)
 0001:000429F0       zFILE_FILE::Create(void)
 0001:00042C90       zFILE_FILE::Open(bool)
 0001:00042FC0       zFILE_FILE::FlushBuffer(void)
 0001:00043010       zFILE_FILE::Close(void)
 0001:00043260       zFILE_FILE::Reset(void)
 0001:00043270       zFILE_FILE::Append(void)
 0001:00043290       zFILE_FILE::Eof(void)
 0001:000432A0       zFILE_FILE::Pos(void)
 0001:000432B0       zFILE_FILE::Seek(long)
 0001:000432D0       zFILE_FILE::Write(char const *)
 0001:00043410       zFILE_FILE::Write(zSTRING const &)
 0001:00043430       zFILE_FILE::Write(void const *,long)
 0001:00043650       zFILE_FILE::ReadChar(char &)
 0001:00043670       zFILE_FILE::Read(char *)
 0001:000436B0       zFILE_FILE::Read(zSTRING &)
 0001:000438A0       zFILE_FILE::Read(void *,long)
 0001:00043980       zFILE_FILE::SeekText(zSTRING const &)
 0001:00043B30       zFILE_FILE::ReadCodeline(zSTRING &)
 0001:00043D40       zFILE_FILE::ReadLines(zSTRING &,long)
 0001:00043EE0       zFILE_FILE::ReadBlock(long,long)
 0001:00043FB0       zFILE_FILE::UpdateBlock(zSTRING const &,long,long)
 0001:00044360       zFILE_FILE::SetCompletePath(void)
 0001:000445D0       zFILE_FILE::SetPath(zSTRING)
 0001:00044AD0       zFILE_FILE::SetDrive(zSTRING)
 0001:00044C60       zFILE_FILE::SetDir(zSTRING)
 0001:00044DD0       operator+(zSTRING const &,char)
 0001:00044EC0       zFILE_FILE::SetFilename(zSTRING)
 0001:00045050       zFILE_FILE::SetExt(zSTRING)
 0001:000451E0       zFILE_FILE::SetFile(zSTRING)
 0001:00045360       zFILE_FILE::GetFullPath(void)
 0001:000454F0       zFILE_FILE::SlashConvert(zSTRING &)
 0001:00045610       zFILE_FILE::SetCurrentDir(void)
 0001:00045670       zFILE_FILE::ChangeDir(bool)
 0001:000458C0       zFILE_FILE::DirStepInto(zSTRING)
 0001:00045AC0       zFILE_FILE::SearchFile(zSTRING const &,zSTRING const &,int)
 0001:00046100       zFILE_FILE::FindFirst(zSTRING const &)
 0001:000462F0       zFILE_FILE::DirCreate(void)
 0001:00046400       zFILE_FILE::DirRemove(void)
 0001:00046500       zFILE_FILE::DirExists(void)
 0001:000465C0       zFILE_FILE::FileMove(zSTRING,bool)
 0001:000466D0       zFILE_FILE::FileCopy(zSTRING,bool)
 0001:000467E0       zFILE_FILE::FileDelete(void)
 0001:00046860       zFILE_FILE::FileMove(zFILE *)
 0001:00046990       zFILE_FILE::FileCopy(zFILE *)
 0001:00046C10       zFILE_FILE::FindNext(void)
 0001:00046DA0       zPATH::zPATH(void)
 0001:00046E70       zPATH::`scalar deleting destructor'(uint)
 0001:00046EB0       zPATH::zPATH(zSTRING)
 0001:00046F40       zFILE::GetFreeBuffer(void)
 0001:00047250       zFILE::ReleaseBuffer(zCBuffer *)
 0001:00047290       zFILE::InitFileSystem(void)
 0001:000473E0       zFILE::DeinitFileSystem(void)
 0001:000475E0       zFILE_FILE::InitFileSystem(void)
 0001:00047650       zFILE_FILE::DeinitFileSystem(void)
 0001:00047670       Dir_Clear(zSTRING const &,zSTRING const &)
 0001:00047820       Dir_Copy(zSTRING const &,zSTRING const &)
 0001:00047A70       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::at(uint)
 0001:00047B00       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Freeze(void)
 0001:00047BB0       zFILE_VDFS::Init(zSTRING const &)
 0001:00047BF0       zFILE_VDFS::zFILE_VDFS(void)
 0001:00047D30       zFILE_VDFS::Open(zSTRING const &,bool)
 0001:00047DA0       zFILE_VDFS::Exists(zSTRING const &)
 0001:00047E00       zFILE_VDFS::`scalar deleting destructor'(uint)
 0001:00047E20       zFILE_VDFS::zFILE_VDFS(zSTRING const &)
 0001:00047ED0       zFILE_VDFS::~zFILE_VDFS(void)
 0001:00047FF0       zFILE_VDFS::IsOpened(void)
 0001:00048020       zFILE_VDFS::Exists(void)
 0001:00048110       zFILE_VDFS::HandleError(zSTRING const &,zSTRING const &,zERROR_TYPE)
 0001:00048120       zFILE_VDFS::Open(bool)
 0001:000483A0       zFILE_VDFS::Close(void)
 0001:00048400       zFILE_VDFS::Reset(void)
 0001:00048410       zFILE_VDFS::Size(void)
 0001:00048470       zFILE_VDFS::Eof(void)
 0001:00048490       zFILE_VDFS::Seek(long)
 0001:00048870       zFILE_VDFS::SeekText(zSTRING const &)
 0001:00048A50       zFILE_VDFS::Pos(void)
 0001:00048AB0       zFILE_VDFS::Append(void)
 0001:00048AD0       zFILE_VDFS::SetCurrentDir(void)
 0001:00048D20       zFILE_VDFS::GetFullPath(void)
 0001:00048E70       zFILE_VDFS::ChangeDir(bool)
 0001:00048E80       zFILE_VDFS::SearchFile(zSTRING const &,zSTRING const &,int)
 0001:00049190       operator+(char,zSTRING const &)
 0001:000492F0       zFILE_VDFS::GetStats(zFILE_STATS &)
 0001:00049300       zFILE_VDFS::FindFirst(zSTRING const &)
 0001:000495B0       zFILE_VDFS::FindNext(void)
 0001:000498D0       zFILE_VDFS::Read(char *)
 0001:00049A80       zFILE_VDFS::Read(zSTRING &)
 0001:00049BF0       zFILE_VDFS::Read(void *,long)
 0001:00049D60       zFILE_VDFS::InitFileSystem(void)
 0001:0004A440       zFILE_VDFS::DeinitFileSystem(void)
 0001:0004A7E0       zFILE_VDFS::LockCriticalSection(void)
 0001:0004A800       zFILE_VDFS::UnlockCriticalSection(void)
 0001:0004A8C0       default_exit(void)
 0001:0004A8D0       ErrorBox(zSTRING)
 0001:0004AAB0       MessageWindow(zSTRING)
 0001:0004AAE0       GetDiffTime(zSTRING &)
 0001:0004AD40       zERROR::zERROR(void)
 0001:0004AF80       zERROR::`scalar deleting destructor'(uint)
 0001:0004AFA0       zERROR::Init(zSTRING)
 0001:0004B650       zERROR::~zERROR(void)
 0001:0004B850       zERROR::SendToSpy(zSTRING &)
 0001:0004B8C0       zERROR::Report(zERROR_LEVEL,int,zSTRING const &,signed char,uint,int,char *,char *)
 0001:0004B8D0       zERROR::Report(zERROR_TYPE,int,zSTRING const &,signed char,uint,int,char *,char *)
 0001:0004C060       zERROR::BlockBegin(char *,int)
 0001:0004C280       zSTRING::operator delete(void *)
 0001:0004C290       zERROR::BlockEnd(char *,int)
 0001:0004C6B0       zERROR::Separator(zSTRING)
 0001:0004C8C0       zERROR::ShowSpy(int)
 0001:0004CA10       zERROR::Message(zSTRING const &)
 0001:0004CA50       zERROR::Warning(zSTRING const &)
 0001:0004CA80       zERROR::Fatal(zSTRING const &)
 0001:0004CAB0       zERROR::Fault(zSTRING const &)
 0001:0004CAE0       zERROR::SetFilterFlags(ulong)
 0001:0004CC00       zERROR::SetFilterAuthors(zSTRING)
 0001:0004CDA0       zERROR::SetFilterLevel(int)
 0001:0004CF50       zERROR::SetTarget(int)
 0001:0004D1D0       zERROR::GetTargetDescription(void)
 0001:0004D3F0       zERROR::GetFilterFlagDescription(void)
 0001:0004D5F0       zERROR::GetFilterAuthors(void)
 0001:0004D640       zERROR::SearchForSpy(void)
 0001:0004D760       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<char,std::char_traits<char>,std::allocator<char>>(uint,char,std::allocator<char> const &)
 0001:0004D830       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::at(uint)
 0001:0004D850       zQUEUE<zSTRING>::zQUEUE<zSTRING>(void)
 0001:0004D930       zCFileCSV::zCFileCSV(zSTRING const &)
 0001:0004DAD0       zCFileCSV::`scalar deleting destructor'(uint)
 0001:0004DAF0       zCFileCSV::zCFileCSV(void)
 0001:0004DC90       zCFileCSV::~zCFileCSV(void)
 0001:0004DDF0       zCFileCSV::InitCSV(void)
 0001:0004DF10       zCFileCSV::SetFormat(bool,zSTRING const &,zSTRING const &)
 0001:0004E050       zCFileCSV::AddNextField(zSTRING const &)
 0001:0004E1E0       zCFileCSV::AddNextHeader(zSTRING const &)
 0001:0004E390       zCFileCSV::WriteSet(void)
 0001:0004E550       zCFileCSV::GetNextField(zSTRING const &)
 0001:0004E980       zCFileCSV::ReadSet(void)
 0001:0004E9D0       zCFileCSV::ReadHeader(void)
 0001:0004EBB0       zCFileCSV::WriteHeader(void)
 0001:0004EE20       zCGameInfo::zCGameInfo(void)
 0001:0004EF70       zCGameInfo::`scalar deleting destructor'(uint)
 0001:0004EF90       zCGameInfo::~zCGameInfo(void)
 0001:0004EFE0       zCGameInfo::Init(void)
 0001:0004EFF0       zCGameInfo::Reset(void)
 0001:0004F000       zCGameInfo::AddPlayer(zCPlayerInfo *)
 0001:0004F010       zCGameInfo::RemPlayer(zCPlayerInfo *)
 0001:0004F020       zCGameInfo::GetPlayerByID(int)
 0001:0004F030       zCGameInfo::GetPlayerByVobID(ulong)
 0001:0004F070       zCGameInfo::PackToBuffer(zCBuffer &,uchar)
 0001:0004F080       zCGameInfo::CreateFromBuffer(zCBuffer &)
 0001:0004F0A0       zCGameInfo::GetNumPlayers(void)
 0001:0004F0C0       zCGameInfo::Pack(zCBuffer &,uchar)
 0001:0004F160       zCGameInfo::Unpack(zCBuffer &)
 0001:0004F350       zCGameInfo::GetPlayerByNetAddress(zTNetAddress &)
 0001:0004F490       zCNetMessageQueue::zCNetMessageQueue(void)
 0001:0004F4E0       zCNetMessageQueue::~zCNetMessageQueue(void)
 0001:0004F580       zCNet::zCNet(ushort)
 0001:0004F6E0       zCNet::`scalar deleting destructor'(uint)
 0001:0004F700       zCNet::~zCNet(void)
 0001:0004F760       zCNet::NetReset(void)
 0001:0004F900       zCNet::NetReset(int)
 0001:0004F930       zCNet::StreamListen(int (*)(void *))
 0001:0004F990       zCNet::Send(zCNetMessage * &)
 0001:0004FB40       zCNet::DGramWriteMessage(zCNetMessage * &)
 0001:0004FBE0       zCNet::DGramWriteToPlayer(zCNetMessage *,zCPlayerInfo *)
 0001:0004FF80       zCNetHost::GetReadableAddr(void)
 0001:00050000       zCNet::DGramWriteToGroup(zCNetMessage *,zCPlayerGroup *)
 0001:00050070       zCNet::DGramRead(zCNetMessage * &)
 0001:00050140       zCNet::StreamRead(zCNetMessage * &,zCPlayerInfo *)
 0001:00050320       zCNet::StreamReadFromPlayer(void *,ulong,zCPlayerInfo *,zTNetStreamReadMode)
 0001:00050390       zCNet::StreamWriteMessage(zCNetMessage * &)
 0001:00050540       zCNet::StreamWriteToPlayer(void *,ulong,zCPlayerInfo *)
 0001:00050570       zCNet::StreamWriteToGroup(void *,ulong,zCPlayerGroup *)
 0001:000505E0       zCNet::StreamWriteFile(zCNetMessage * &)
 0001:00050AA0       zCNet::StreamReadFile(zCNetMessage *,zCPlayerInfo *)
 0001:000512D0       zCNet::MsgGetFromStream(zCPlayerInfo *,zCNetMessage * &)
 0001:000513D0       zCNet::MsgPut(zCNetMessage *)
 0001:00051630       zCNet::MsgGet(zCNetMessage * &,uchar)
 0001:000516B0       zCNet::MsgSendFromQueue(void)
 0001:00051760       zCNet::MsgRecvToQueue(void)
 0001:000517B0       zCNet::HandleReceiving(void)
 0001:00051820       zCNet::HandleSending(void)
 0001:00051A50       zCNet::Handle(void)
 0001:00051BA0       zCNet::StreamConnect(zCNetHost * &)
 0001:00051BD0       zCNet::StreamDisconnect(zCNetHost * &)
 0001:00051C00       zCNet::LockQueues(int)
 0001:00051C10       zCNet::WaitForStreamMessage(zCPlayerInfo *,zCNetMessage * &)
 0001:00051E70       zCNet::GetLocalAddress(void)
 0001:00051E80       zCNet::EnableNetwork(bool)
 0001:00051E90       zCNet::ApplyTimestamp(zCNetMessage *,uchar)
 0001:00051EE0       zCNet::CheckTimestamp(zCNetMessage *,uchar)
 0001:00051F10       zCNetStatistics::zCNetStatistics(void)
 0001:00051F60       zCNetStatistics::`scalar deleting destructor'(uint)
 0001:00051F80       zCNetStatistics::~zCNetStatistics(void)
 0001:00051F90       zCNetStatistics::AddLostRecv(uint)
 0001:00051FC0       zCNetStatistics::AddLostSend(uint)
 0001:00051FF0       zCNetStatistics::AddPacketSend(double)
 0001:00052010       zCNetStatistics::AddPacketRecv(double)
 0001:00052030       zCNetStatistics::Start(void)
 0001:00052170       zCNetStatistics::Stop(void)
 0001:00052280       zCNetStatistics::Print(void)
 0001:00053680       zSTRING::zSTRING(double,int)
 0001:000537D0       zCNetStatistics::Reset(void)
 0001:000537E0       zCNetStatistics::GetSeconds(void)
 0001:00053810       zQUEUE<zCNetMessage>::Push(zCNetMessage *)
 0001:000538D0       netDumpSocketLL(void)
 0001:00053930       netInit(void)
 0001:00053940       netExit(void)
 0001:00053A90       netSend(zTNetAddress *,void *,int,void *)
 0001:00053CC0       netRecv(void *)
 0001:00053D90       netWrite(void *,void *,int,int)
 0001:000540E0       netRead(void *,void *,int)
 0001:00054210       netListenPacket(zTNetAddress *)
 0001:00054400       netListenStream(zTNetAddress *,int (*)(void *))
 0001:00054650       netConnect(zTNetAddress *)
 0001:000549C0       netClose(void *)
 0001:00054B10       netIsHandleClosed(void *)
 0001:00054BD0       netGetPacketHandle(ulong)
 0001:00054BE0       netGetHostName(zTNetAddress *)
 0001:00054D90       netGetHostAddr(char *)
 0001:00054F30       netGetServicePort(char *,int)
 0001:000550A0       netAddrToString(zTNetAddress *,int)
 0001:000551C0       netGetLocalHost(void)
 0001:000551D0       netGetRemoteAddr(void *)
 0001:000551E0       netGetLocalAddr(void *)
 0001:000551F0       netGetProtocolSupported(int)
 0001:00055220       netSetTimeOut(int,zTNetTimeout *)
 0001:00055250       netGetBufferInfo(void *)
 0001:00055260       netSetMaxInQueuePackets(void *,int)
 0001:000552D0       netGetLastError(void)
 0001:000552E0       netGetLastErrorString(void)
 0001:000552F0       netWindowProc(HWND__ *,ushort,uint,long)
 0001:000560C0       netAcceptPendingConnections(void)
 0001:000563B0       zCNetEventManager::_CreateNewInstance(void)
 0001:00056430       zCEventManager::GetNumMessages(void)
 0001:00056440       zCNetEventManager::operator delete(void *)
 0001:00056460       zCNetEventManager::_GetClassDef(void)
 0001:00056470       zCNetEventManager::HandleNetMessage(zCNetMessage *,ushort,zCWorld *)
 0001:000572F0       zCNetEventManager::zCNetEventManager(void)
 0001:00057310       zCNetEventManager::`scalar deleting destructor'(uint)
 0001:00057340       zCNetEventManager::zCNetEventManager(zCVob *)
 0001:00057360       zCNetEventManager::~zCNetEventManager(void)
 0001:00057370       zCNetEventManager::Init(void)
 0001:00057380       zCNetEventManager::OnMessage(zCEventMessage *,zCVob *)
 0001:00058E60       zCPlayerInfo::GetName(void)
 0001:00058EB0       zCNetEventManager::Archive(zCArchiver &)
 0001:00058EE0       zCNetEventManager::Unarchive(zCArchiver &)
 0001:00058F60       zCNetEventManager::GetNetVobControl(int)
 0001:00059380       zCNetHost::InitHost(zSTRING const &)
 0001:00059650       zCNetHost::zCNetHost(void *)
 0001:000597F0       zCNetHost::`scalar deleting destructor'(uint)
 0001:00059810       zCNetHost::zCNetHost(zSTRING const &)
 0001:000599A0       zCNetHost::zCNetHost(zTNetAddress const &)
 0001:00059B30       zCNetHost::Init(void)
 0001:00059C30       zCNetHost::InitHostForBroadcast(void)
 0001:00059DA0       zCNetHost::InitHostAddr(zTNetAddress * const)
 0001:00059FC0       zCNetHost::~zCNetHost(void)
 0001:0005A010       zCNetHost::Pack(zCBuffer &)
 0001:0005A080       zCNetHost::Unpack(zCBuffer &)
 0001:0005A210       zCNetHost::CreateFromBuffer(zCBuffer &)
 0001:0005A3C0       zCNetHost::PackToBuffer(zCBuffer &)
 0001:0005A3F0       zCNetHost::HasAddress(zTNetAddress *)
 0001:0005A700       zCNetManager::_CreateNewInstance(void)
 0001:0005A880       zCNetManager::operator delete(void *)
 0001:0005A8A0       zCNetManager::_GetClassDef(void)
 0001:0005A8B0       zCNetManager::Temp_HandleNetMessage(zCNetMessage * &,zCWorld *)
 0001:0005A920       zCNetManager::zCNetManager(void)
 0001:0005AAA0       zCNetManager::`scalar deleting destructor'(uint)
 0001:0005AAD0       zCNetManager::~zCNetManager(void)
 0001:0005AAE0       zCNetManager::Process(void)
 0001:0005AB90       zCNetManager::ProcessMessages(void)
 0001:0005AC10       zCNetManager::HandleNetMessage(zCNetMessage *,ushort const &,zCClassDef *,zCWorld *)
 0001:0005ACD0       zCNetManager::CreateNetMessage(ushort const &,zCObject *)
 0001:0005AD60       zCNetManager::SendPing(void)
 0001:0005ADD0       zCNetManager::SendPingReply(zCPlayerInfo *)
 0001:0005AE10       zCNetManager::SendWorldTime(void)
 0001:0005AE20       zCArraySort<zCClassDef *>::GetSafe(int)
 0001:0005B070       zCNetMessage::zCNetMessage(zTNetMessageHeader &)
 0001:0005B120       zCNetMessage::`scalar deleting destructor'(uint)
 0001:0005B140       zCNetMessage::zCNetMessage(ulong const &,ulong)
 0001:0005B220       zCNetMessage::CopyFrom(zCNetMessage *)
 0001:0005B270       zCNetMessage::zCNetMessage(zTNetPacket *)
 0001:0005B400       zCNetMessage::Init(void)
 0001:0005B420       zCNetMessage::~zCNetMessage(void)
 0001:0005B4A0       zCNetMessage::Send(void)
 0001:0005B5D0       zCNetMessage::SetTimestamp(uchar)
 0001:0005B5F0       zCNetMessage::GetTimestamp(void)
 0001:0005B600       zCNetMessage::SetTarget(zCPlayerInfo *)
 0001:0005B630       zCNetMessage::SetTarget(zCPlayerGroup *)
 0001:0005B660       zCNetMessage::GetTarget(zCPlayerInfo * &,zCPlayerGroup * &)
 0001:0005B680       zCNetMessage::Get(void *,ulong const &)
 0001:0005B780       zCNetMessage::Add(void *,ulong)
 0001:0005B890       zCNetMessage::AddCursorPtr(ulong)
 0001:0005B8A0       zCNetMessage::Add(zSTRING const &)
 0001:0005B900       zCNetMessage::Get(zSTRING &)
 0001:0005BA80       zCNetMessage::IsStream(void)
 0001:0005BA90       zCNetMessage::SetStream(int)
 0001:0005BAA0       zCNetMessage::SetFileMessage(zFILE *,zFILE *)
 0001:0005BB30       zCNetMessage::GetFile(zFILE * &)
 0001:0005BB70       zCNetMessage::IsFileMessage(void)
 0001:0005BB90       zCNetMessage::IsMultiMessage(void)
 0001:0005BBB0       zCNetMessage::LogMessage(zFILE *,zSTRING const &)
 0001:0005BF60       zCNetMessage::SetLog(int)
 0001:0005BF70       zCNetMessage::GetHeader(void)
 0001:0005BF80       zCNetMessage::GetHeaderSize(void)
 0001:0005BF90       zCNetMessage::GetBuffer(void)
 0001:0005BFA0       zCNetMessage::GetCursorPtr(void)
 0001:0005BFB0       zCNetMessage::GetPtr(void)
 0001:0005BFC0       zCNetMessage::GetDataPtr(void)
 0001:0005BFD0       zCNetMessage::ResetCursorPtr(void)
 0001:0005BFF0       zCNetMessage::SetMode(zTBufferMode)
 0001:0005C000       zCNetMessage::GetSize(void)
 0001:0005C010       zCNetMessage::GetDataSize(void)
 0001:0005C020       zCNetMessage::GetRestSize(void)
 0001:0005C030       zCNetMessage::GetID(void)
 0001:0005C040       zCNetMessage::GetSenderID(void)
 0001:0005C050       zCNetMessage::GetFlags(void)
 0001:0005C060       zCNetMessage::HasError(void)
 0001:0005C100       zCNetSession::zCNetSession(ushort)
 0001:0005C180       zCNetSession::`scalar deleting destructor'(uint)
 0001:0005C1A0       zCNetSession::Reset(void)
 0001:0005C1C0       zCNetSession::~zCNetSession(void)
 0001:0005C290       zCNetVersion::zCNetVersion(void)
 0001:0005C2B0       zCNetVersion::`scalar deleting destructor'(uint)
 0001:0005C2D0       zCNetVersion::~zCNetVersion(void)
 0001:0005C2E0       zCNetVersion::GetVersionNumber(void)
 0001:0005C2F0       zCNetVersion::GetChecksum(void)
 0001:0005C300       zCNetVersion::CreateChecksum(void)
 0001:0005C310       zCNetVersion::GetVersionString(void)
 0001:0005C410       zCNetVersion::Pack(zCBuffer &)
 0001:0005C440       zCNetVersion::Unpack(zCBuffer &)
 0001:0005C470       operator==(zCNetVersion const &,zCNetVersion const &)
 0001:0005CB80       zCNetVobControl::_CreateNewInstance(void)
 0001:0005CCB0       zCNetVobControl::operator delete(void *)
 0001:0005CCD0       zCNetVobControl::_GetClassDef(void)
 0001:0005CCE0       zCNetVobControl::IsLocalChained(void)
 0001:0005CCF0       zCNetVobControl::SetLocalChained(int)
 0001:0005CD00       zCNetVobControl::zCNetVobControl(void)
 0001:0005CE00       zCNetVobControl::`scalar deleting destructor'(uint)
 0001:0005CE30       zCNetVobControl::~zCNetVobControl(void)
 0001:0005CE50       zCNetVobControl::Init(zCVob *)
 0001:0005CE70       zCNetVobControl::Process(void)
 0001:0005CF40       zCNetVobControl::HandOverToPlayer(zCPlayerInfo *)
 0001:0005D3B0       zCNetVobControl::HandleNetMessage(zCNetMessage *,ushort const &,zCWorld *)
 0001:0005D8C0       zCNetVobControl::CreateNetMessage(ushort const &)
 0001:0005DD00       zCNetVobControl::SetCtrlPlayer(zCPlayerInfo *)
 0001:0005E120       zCNetVobControl::IsLocalControlled(void)
 0001:0005E130       zCNetVobControl::IsPlayerVob(void)
 0001:0005E140       zCNetVobControl::CopyCtrlState(zCVob *)
 0001:0005E170       zCNetVobControl::Archive(zCArchiver &)
 0001:0005E270       zCNetVobControl::Unarchive(zCArchiver &)
 0001:0005EE00       zCOptionEntry::zCOptionEntry(zSTRING const &,zSTRING const &)
 0001:0005F080       zCOptionSection::zCOptionSection(zSTRING const &)
 0001:0005F240       zCOptionSection::~zCOptionSection(void)
 0001:0005F350       zCOption::zCOption(void)
 0001:0005F550       zCOption::`scalar deleting destructor'(uint)
 0001:0005F570       zCOption::~zCOption(void)
 0001:0005F6F0       zCOptionEntry::~zCOptionEntry(void)
 0001:0005F7B0       zCOption::Load(zSTRING)
 0001:000606C0       zCOption::Save(zSTRING)
 0001:00060DE0       zCOption::WriteBool(zSTRING const &,char const *,int,int)
 0001:00060E30       zCOption::WriteInt(zSTRING const &,char const *,int,int)
 0001:00060E60       zCOption::WriteDWord(zSTRING const &,char const *,ulong,int)
 0001:00060E90       zSTRING::zSTRING(ulong)
 0001:00060F90       zCOption::WriteReal(zSTRING const &,char const *,float,int)
 0001:00060FD0       zCOption::WriteString(zSTRING const &,char const *,zSTRING,int)
 0001:00061160       zCOption::ReadBool(zSTRING const &,char const *,int)
 0001:00061390       zCOption::ReadInt(zSTRING const &,char const *,int)
 0001:000614F0       zCOption::ReadDWord(zSTRING const &,char const *,ulong)
 0001:00061650       zCOption::ReadReal(zSTRING const &,char const *,float)
 0001:000617E0       zCOption::ReadString(zSTRING const &,char const *,char const *)
 0001:00061950       zCOption::EntryExists(zSTRING const &,char const *)
 0001:00061A20       zCOption::GetNumEntries(zCOptionSection *)
 0001:00061A40       zCOption::GetEntry(zCOptionSection *,int)
 0001:00061A70       zCOption::RemoveEntry(zSTRING const &,char const *)
 0001:00061C10       zCOption::SetFlag(zSTRING const &,char const *,int)
 0001:00061D10       zCOption::GetEntryByName(zCOptionSection *,zSTRING const &,int)
 0001:00062000       zCOption::GetSectionByName(zSTRING const &,int)
 0001:00062250       zCOption::SectionExists(zSTRING const &)
 0001:00062257       CCommonDialog::OnHelpInfo(tagHELPINFO *)
 0001:00062270       zCOption::GetNumSections(void)
 0001:00062280       zCOption::GetSection(int)
 0001:000622B0       zCOption::RemoveSection(zSTRING const &)
 0001:00062310       zCOption::InsertChangeHandler(zSTRING const &,char const *,int (*)(zCOptionEntry &))
 0001:000624E0       zCOption::WriteRaw(zSTRING const &,char const *,void *,int,int)
 0001:000626C0       zCOption::ReadRaw(zSTRING const &,char const *,void * &,void *,int)
 0001:000628A0       zCOption::WriteBool(zSTRING const &,zSTRING const &,int,int)
 0001:000628C0       zCOption::WriteInt(zSTRING const &,zSTRING const &,int,int)
 0001:000628E0       zCOption::WriteDWord(zSTRING const &,zSTRING const &,ulong,int)
 0001:00062900       zCOption::WriteReal(zSTRING const &,zSTRING const &,float,int)
 0001:00062930       zCOption::WriteString(zSTRING const &,zSTRING const &,zSTRING,int)
 0001:000629D0       zSTRING::ToChar(void)
 0001:000629E0       zCOption::WriteRaw(zSTRING const &,zSTRING const &,void *,int,int)
 0001:00062A00       zCOption::ReadBool(zSTRING const &,zSTRING const &,int)
 0001:00062A20       zCOption::ReadInt(zSTRING const &,zSTRING const &,int)
 0001:00062A40       zCOption::ReadDWord(zSTRING const &,zSTRING const &,ulong)
 0001:00062A60       zCOption::ReadReal(zSTRING const &,zSTRING const &,float)
 0001:00062A90       zCOption::ReadString(zSTRING const &,zSTRING const &,char const *)
 0001:00062AD0       zCOption::ReadRaw(zSTRING const &,zSTRING const &,void *,int)
 0001:00062B00       zCOption::AddParameters(zSTRING)
 0001:00062C20       zCOption::Init(zSTRING,bool)
 0001:00064160       zCOption::ChangeDir(zTOptionPaths)
 0001:00064250       zCOption::GetDir(zTOptionPaths)
 0001:00064260       zCOption::GetDirString(zTOptionPaths)
 0001:00064270       zCOption::Parm(zSTRING const &)
 0001:00064380       zCOption::ParmValue(zSTRING const &)
 0001:00064580       zCOption::ParmValueRaw(zSTRING const &)
 0001:00064780       zCOption::ParmValueInt(zSTRING const &)
 0001:00064940       zCOption::ParmValueFloat(zSTRING const &)
 0001:00064B10       zCArray<int (*)(zCOptionEntry &)>::~zCArray<int (*)(zCOptionEntry &)>(void)
 0001:00064B30       zCArray<zCOptionEntry *>::~zCArray<zCOptionEntry *>(void)
 0001:00064B50       zCArray<zCOptionEntry *>::GetSafe(int)
 0001:00064D10       zCArray<zCOptionSection *>::~zCArray<zCOptionSection *>(void)
 0001:00064D30       zCArray<zCOptionSection *>::GetSafe(int)
 0001:00064EF0       zCArray<zCOptionEntry *>::AllocDelta(int)
 0001:00064F50       zCArray<zCOptionSection *>::AllocDelta(int)
 0001:00065300       zCPlayerGroup::AddGroupToList(void)
 0001:00065460       zCPlayerGroup::RemoveGroupFromList(void)
 0001:000655E0       zCPlayerGroup::zCPlayerGroup(zSTRING const &)
 0001:00065740       zCPlayerGroup::`scalar deleting destructor'(uint)
 0001:00065760       zCPlayerGroup::~zCPlayerGroup(void)
 0001:000658C0       zCPlayerGroup::GetFirstPlayer(int &)
 0001:00065910       zCPlayerGroup::GetNextPlayer(int &)
 0001:00065960       zCPlayerGroup::GetFirstGroup(int &)
 0001:000659A0       zCPlayerGroup::GetNextGroup(int &)
 0001:000659F0       zCPlayerGroup::AddPlayer(zCPlayerInfo *)
 0001:00065A20       zCPlayerGroup::RemPlayer(zCPlayerInfo *)
 0001:00065AA0       zCPlayerGroup::IsMember(zCPlayerInfo *)
 0001:00065AD0       zCPlayerGroup::GetPlayerByID(uchar)
 0001:00065B80       zCPlayerGroup::ShowDebugInfo(void)
 0001:00066210       zCNetHost::GetHostname(void)
 0001:00066260       zCPlayerGroup::ResetPlayerList(void)
 0001:000662C0       zCPlayerGroup::ResetGroupList(void)
 0001:00066400       zCPlayerGroup::GetNearestPlayerToVob(zCVob *,zCPlayerInfo *)
 0001:000664F0       zCList<zCPlayerGroup>::~zCList<zCPlayerGroup>(void)
 0001:00066520       zCList<zCPlayerGroup>::Insert(zCPlayerGroup *)
 0001:00066570       zCList<zCPlayerGroup>::Remove(zCPlayerGroup *)
 0001:000665D0       zCListSort<zCPlayerInfo>::~zCListSort<zCPlayerInfo>(void)
 0001:00066600       zCListSort<zCPlayerInfo>::InsertSort(zCPlayerInfo *)
 0001:00066680       zCListSort<zCPlayerInfo>::Get(int)
 0001:000666B0       zCListSort<zCPlayerInfo>::GetNumInList(void)
 0001:000666D0       zCList<zCPlayerGroup>::`scalar deleting destructor'(uint)
 0001:00066710       zCListSort<zCPlayerInfo>::`scalar deleting destructor'(uint)
 0001:00066820       zCPlayerInfo::zCPlayerInfo(void)
 0001:000669A0       zCPlayerInfo::`scalar deleting destructor'(uint)
 0001:000669C0       zCPlayerInfo::~zCPlayerInfo(void)
 0001:00066CD0       zCPlayerInfo::CreateDistinctPlayer(void)
 0001:00066F60       zCPlayerInfo::Init(zSTRING const &,void *)
 0001:00067100       zCPlayerInfo::Init(zSTRING const &,zSTRING const &)
 0001:00067280       zCPlayerInfo::Pack(zCBuffer &)
 0001:00067320       zCPlayerInfo::Unpack(zCBuffer &)
 0001:00067500       zCPlayerInfo::GetID(void)
 0001:00067510       zCPlayerInfo::CreateFromBuffer(zCBuffer &)
 0001:00067530       zCPlayerInfo::PackToBuffer(zCBuffer &)
 0001:00067540       zCPlayerInfo::GetActivePlayer(void)
 0001:00067550       zCPlayerInfo::SetActive(void)
 0001:00067820       zCPlayerInfo::IsActive(void)
 0001:00067830       zCPlayerInfo::Reset(void)
 0001:00067840       zCPlayerInfo::StorePlayerVobAsScript(void)
 0001:00067930       zCPlayerInfo::CreatePlayerVobFromScript(void)
 0001:000679D0       zCPlayerInfo::GetPlayerVobScript(void)
 0001:000679E0       zCPlayerInfo::SetPlayerVobScript(zCBuffer *)
 0001:00067A90       zCPlayerInfo::SetPlayerVob(zCVob *)
 0001:00067AD0       zCPlayerInfo::Deactivate(int)
 0001:00067AF0       zCPlayerInfo::IsDeactivated(void)
 0001:00067B00       zCPlayerInfo::SetReady(int)
 0001:00067B20       zCPlayerInfo::IsReady(void)
 0001:00067B30       zCPlayerInfo::SetPingStart(void)
 0001:00067B50       zCPlayerInfo::SetPingEnd(void)
 0001:00067BE0       zCScanDirFileHandler::zCScanDirFileHandler(void)
 0001:00067CF0       zCScanDirFileHandler::`scalar deleting destructor'(uint)
 0001:00067D10       zCScanDirFileHandler::~zCScanDirFileHandler(void)
 0001:00067DE0       zCScanDirFileHandler::CanHandleFile(zSTRING &)
 0001:00068000       zCScanDirFileHandler::GetNumMessages(void)
 0001:00068010       zCScanDirFileHandler::GetMessageA(int)
 0001:000681A0       zCScanDirFileHandler::RegisterFileType(zSTRING)
 0001:00068300       zCScanDirFileHandler::AddMessage(zSTRING)
 0001:00068460       zCScanDirFileHandler::ClearMessages(void)
 0001:00068490       zCScanDirFileHandler::SetName(zSTRING const &)
 0001:000685D0       zCScanDirFileHandler::GetName(void)
 0001:000685E0       zCScanDir::zCScanDir(void)
 0001:00068600       zCScanDir::`scalar deleting destructor'(uint)
 0001:00068620       zCScanDir::~zCScanDir(void)
 0001:000686B0       zCScanDir::RegisterFileHandler(zCScanDirFileHandler *,zSTRING const &)
 0001:00068800       zCScanDir::ScanX(void)
 0001:00068FC0       zCScanDir::Scan(zSTRING const &)
 0001:000695B0       zCArray<zSTRING>::GetSafe(int)
 0001:00069770       zCArray<zSTRING>::DeleteList(void)
 0001:000697A0       zCList<zCScanDirFileHandler>::~zCList<zCScanDirFileHandler>(void)
 0001:000697D0       zCList<zCScanDirFileHandler>::Insert(zCScanDirFileHandler *)
 0001:00069820       zCList<zCScanDirFileHandler>::`scalar deleting destructor'(uint)
 0001:000698F0       Characters(char,int)
 0001:00069980       Spaces(int)
 0001:000699F0       zSTRING::Lower(void)
 0001:00069B00       zSTRING::Upper(void)
 0001:00069C10       zSTRING::UpperFirstLowerRest(void)
 0001:00069D60       zSTRING::Align(zTSTR_ALIGN,int,char)
 0001:00069F80       zSTRING::PickWord(uint,zSTRING const &,zSTRING const &)
 0001:0006A1D0       zSTRING::PickWordPos(uint,zSTRING const &,zSTRING const &)
 0001:0006A340       zSTRING::PickWord_Old(int,zSTRING const &)
 0001:0006A400       zSTRING::Insert(uint,zSTRING const &)
 0001:0006A520       zSTRING::Inserted(uint,zSTRING const &)
 0001:0006A6A0       zSTRING::Overwrite(uint,zSTRING const &)
 0001:0006A890       zSTRING::Overwritten(uint,zSTRING const &)
 0001:0006A990       zSTRING::DeleteRight(uint)
 0001:0006AAA0       zSTRING::Delete(uint,ulong)
 0001:0006ABB0       zSTRING::Deleted(uint,ulong)
 0001:0006ACF0       zSTRING::Delete(zSTRING const &,zTSTR_KIND)
 0001:0006AEE0       zSTRING::Deleted(zSTRING const &,zTSTR_KIND)
 0001:0006AFC0       zSTRING::Copy(uint,ulong)
 0001:0006B170       zSTRING::Copied(uint,ulong)
 0001:0006B2D0       zSTRING::Copy(zSTRING const &,zTSTR_KIND const &)
 0001:0006B550       zSTRING::Copied(zSTRING const &,zTSTR_KIND const &)
 0001:0006B630       zSTRING::TrimLeft(char)
 0001:0006B770       zSTRING::TrimRight(char)
 0001:0006B920       zSTRING::Search(int,char const *,uint)
 0001:0006BA20       zSTRING::SearchRev(zSTRING const &,uint)
 0001:0006BC60       zSTRING::Sprintf(char const *,...)
 0001:0006BCD0       zCMemPool<zSTRING>::~zCMemPool<zSTRING>(void)
 0001:0006BCE0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::substr(uint,uint)
 0001:0006BE70       zCMemPool<zSTRING>::zCMemPool<zSTRING>(uint,uint)
 0001:0006BE90       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::replace(uint,uint,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &,uint,uint)
 0001:0006C050       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::find(char const *,uint,uint)
 0001:0006C100       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::rfind(char const *,uint,uint)
 0001:0006C1B0       zCSystemInfo::zCSystemInfo(void)
 0001:0006C350       zCSystemInfo::`scalar deleting destructor'(uint)
 0001:0006C370       zCSystemInfo::~zCSystemInfo(void)
 0001:0006C450       zCSystemInfo::AnalyseMemory(void)
 0001:0006C480       zCSystemInfo::AnalyseCpu(void)
 0001:0006C650       zCSystemInfo::AnalyseOs(void)
 0001:0006CA80       zCSystemInfo::AnalyseGcard(void)
 0001:0006CAA0       zCSystemInfo::AnalyseNow(void)
 0001:0006D400       zCSystemInfo::GetOsName(void)
 0001:0006D480       zCVideoPlayer::zCVideoPlayer(void)
 0001:0006D4C0       zCVideoPlayer::IsPlaying(void)
 0001:0006D4D0       zCVideoPlayer::ToggleSound(void)
 0001:0006D4E0       zCVideoPlayer::SetSoundVolume(float)
 0001:0006D4F0       zCVideoPlayer::`scalar deleting destructor'(uint)
 0001:0006D510       zCVideoPlayer::~zCVideoPlayer(void)
 0001:0006D560       zCVideoPlayer::OpenVideo(zSTRING)
 0001:0006D6D0       zCVideoPlayer::CloseVideo(void)
 0001:0006D7D0       zCVideoPlayer::Play(int)
 0001:0006D8E0       zCVideoPlayer::PlayInit(int)
 0001:0006D900       zCVideoPlayer::PlayGotoNextFrame(void)
 0001:0006D910       zCVideoPlayer::PlayWaitNextFrame(void)
 0001:0006D920       zCVideoPlayer::PlayFrame(void)
 0001:0006D930       zCVideoPlayer::PlayDeinit(void)
 0001:0006D940       zCVideoPlayer::Pause(void)
 0001:0006D960       zCVideoPlayer::Unpause(void)
 0001:0006D980       zCVideoPlayer::Stop(void)
 0001:0006D9D0       zCViewProgressBar::zCViewProgressBar(int,int,int,int,zTviewID)
 0001:0006DBC0       zCViewProgressBar::`scalar deleting destructor'(uint)
 0001:0006DBE0       zCViewProgressBar::~zCViewProgressBar(void)
 0001:0006DD40       zCViewProgressBar::Init(void)
 0001:0006DEA0       zCViewProgressBar::CalcPercentOf(float,float,float)
 0001:0006DEC0       zCViewProgressBar::SetPercent(int,zSTRING)
 0001:0006E190       zCViewProgressBar::HandleChange(void)
 0001:0006E300       zCViewProgressBar::Draw(void)
 0001:0006E340       zCViewProgressBar::SetRange(int,int)
 0001:0006E400       zCViewProgressBar::ResetRange(void)
 0001:0006E4B0       zCList<zTProgressRange>::~zCList<zTProgressRange>(void)
 0001:0006E4E0       zCList<zTProgressRange>::InsertFront(zTProgressRange *)
 0001:0006E530       zCList<zTProgressRange>::`scalar deleting destructor'(uint)
 0001:0006E5A0       zCViewStatusBar::zCViewStatusBar(void)
 0001:0006E5F0       zCViewStatusBar::`scalar deleting destructor'(uint)
 0001:0006E610       zCViewStatusBar::zCViewStatusBar(int,int,int,int,zTviewID)
 0001:0006E680       zCViewStatusBar::Init(void)
 0001:0006E6B0       zCViewStatusBar::~zCViewStatusBar(void)
 0001:0006E6D0       zCViewStatusBar::SetMaxRange(float,float)
 0001:0006E770       zCViewStatusBar::SetRange(float,float)
 0001:0006E810       zCViewStatusBar::SetPreview(float)
 0001:0006E860       zCViewStatusBar::SetValue(float)
 0001:0006E8E0       zCWorldInfo::zCWorldInfo(zSTRING const &)
 0001:0006E9F0       zCWorldInfo::`scalar deleting destructor'(uint)
 0001:0006EA10       zCWorldInfo::~zCWorldInfo(void)
 0001:0006EB30       zCWorldInfo::GetName(void)
 0001:0006EB80       zCWorldInfo::GetPlayerGroup(void)
 0001:0006EB90       zCWorldInfo::IsMember(zCPlayerInfo *)
 0001:0006EBA0       zCWorldInfo::GetLevelMaster(void)
 0001:0006EBF0       zCWorldInfo::EnterWorld(zCPlayerInfo *)
 0001:0006EC80       zCWorldInfo::LeaveWorld(zCPlayerInfo *)
 0001:0006ECC0       zCWorldInfo::ShowDebugInfo(void)
 0001:0006F0D0       zCList<zCPlayerInfo>::~zCList<zCPlayerInfo>(void)
 0001:0006F100       zCList<zCPlayerInfo>::InsertFront(zCPlayerInfo *)
 0001:0006F150       zCList<zCPlayerInfo>::`scalar deleting destructor'(uint)
 0001:0006F1F0       zInitOptions(void)
 0001:00070050       zDeinitOptions(void)
 0001:00070230       zBert_StartUp(void)
 0001:00070EE0       zBert_ShutDown(void)
 0001:00071100       oCAIHuman::CheckActiveSpells(void)
 0001:00071160       oCAIHuman::MagicInvestSpell(void)
 0001:00071770       oCAIHuman::MagicCheckSpellStates(int)
 0001:00071F50       zCModel::GetAniFromAniID(int)
 0001:00071F90       zCModel::IsAniActive(zCModelAni *)
 0001:00071FD0       oCAIHuman::MagicMode(void)
 0001:000723F0       oCMsgWeapon::operator delete(void *)
 0001:000726A0       oCMagFrontier::oCMagFrontier(void)
 0001:000726C0       oCMagFrontier::~oCMagFrontier(void)
 0001:00072730       oCMagFrontier::SetNPC(oCNpc *)
 0001:00072740       oCMagFrontier::DoCheck(void)
 0001:00072DD0       __cfltcvt_init_0
 0001:00072E0C       __cfltcvt_init_1
 0001:00072E48       __cfltcvt_init_2
 0001:00072E84       __cfltcvt_init_3
 0001:00072EC0       __cfltcvt_init_4
 0001:00072F20       oCMagFrontier::GetDistanceNewWorld(zVEC3 const &,float &,zVEC3 &)
 0001:00073370       operator*(zMAT4 const &,zVEC3 const &)
 0001:000733D0       __cfltcvt_init_5
 0001:0007340C       __cfltcvt_init_6
 0001:00073460       oCMagFrontier::GetDistanceDragonIsland(zVEC3 const &,float &,zVEC3 &)
 0001:00073590       __cfltcvt_init_7
 0001:000735CC       __cfltcvt_init_8
 0001:00073620       oCMagFrontier::GetDistanceAddonWorld(zVEC3 const &,float &,zVEC3 &)
 0001:00073750       oCMagFrontier::StartLightningAtPos(zVEC3 &,zVEC3 &)
 0001:00073C30       zVEC3::Length2(void)
 0001:00073C50       zCMaterial::operator delete(void *)
 0001:00073C70       zCVisual::operator delete(void *)
 0001:00073C90       zCQuadMark::operator delete(void *)
 0001:00073CB0       oCMagFrontier::DoWarningFX(int)
 0001:00073E50       oCVisualFX::operator delete(void *)
 0001:00073E70       oCMagFrontier::DisposeWarningFX(void)
 0001:00073EB0       oCMagFrontier::DoShootFX(zVEC3 const &)
 0001:00074170       operator*(zVEC3 const &,float)
 0001:000741A0       oCMagFrontier::DisposeShootFX(void)
 0001:000743F0       oCMag_Book::oCMag_Book(void)
 0001:000745C0       oCMag_Book::~oCMag_Book(void)
 0001:00074720       oCMag_Book::CheckConsistency(void)
 0001:00074A50       oCMag_Book::SetOwner(zCVob *)
 0001:00074AC0       oCMag_Book::SetWorld(zCWorld *)
 0001:00074AD0       oCMag_Book::Register(oCSpell *,int)
 0001:00074BB0       oCMag_Book::Register(oCItem *,int)
 0001:00074CC0       oCMag_Book::DeRegister(oCItem *)
 0001:00074DA0       oCMag_Book::DeRegister(int)
 0001:00074E50       oCMag_Book::CreateNewSpell(int)
 0001:00074FC0       oCSpell::operator delete(void *)
 0001:00074FE0       oCMag_Book::Register(int,int)
 0001:00075220       oCMag_Book::IsIn(int)
 0001:00075260       oCMag_Book::Spell_Setup(int,oCNpc *,zCVob *)
 0001:000753A0       oCMag_Book::Spell_Setup(oCNpc *,zCVob *,int)
 0001:00075530       oCMag_Book::Spell_Invest(void)
 0001:000756B0       oCMag_Book::StartInvestEffect(zCVob *,int,int,int)
 0001:000757A0       oCMag_Book::Spell_Cast(void)
 0001:00075E30       zCObject::CheckInheritance(zCClassDef const *,zCClassDef const *)
 0001:00075E60       oCMag_Book::StartCastEffect(zCVob *,zVEC3 const &)
 0001:00075F50       oCMag_Book::Spell_InCast(void)
 0001:00075F60       oCMag_Book::Open(int)
 0001:00076270       oCMag_Book::Close(int)
 0001:000763E0       oCMag_Book::Ease(float,float,float)
 0001:00076410       oCMag_Book::EasePos(float,zVEC3 &,zVEC3 &)
 0001:00076490       oCMag_Book::GetAngle(zCVob *)
 0001:00076650       Alg_CalcAziElev(zVEC3 const &,float &,float &)
 0001:00076760       oCMag_Book::IsInMovement(void)
 0001:00076770       oCMag_Book::IsActive(void)
 0001:00076780       oCMag_Book::GetSelectedSpell(void)
 0001:000767D0       oCMag_Book::GetSelectedSpellNr(void)
 0001:000767E0       oCMag_Book::Spell_Open(int)
 0001:00076910       oCMag_Book::StopSelectedSpell(void)
 0001:00076A90       oCMag_Book::KillSelectedSpell(void)
 0001:00076D50       oCMag_Book::Spell_Stop(int)
 0001:00076FC0       oCMag_Book::Left(void)
 0001:00077020       oCMag_Book::Right(void)
 0001:00077070       oCMag_Book::CalcPos(zCVob *,float)
 0001:00077210       operator*(zMAT4 const &,zMAT4 const &)
 0001:00077460       oCMag_Book::DoOpen(void)
 0001:000775E0       oCMag_Book::DoClose(void)
 0001:00077990       operator+(zVEC3 const &,zVEC3 const &)
 0001:000779C0       oCMag_Book::SetFrontSpell(int)
 0001:00077D50       oCMag_Book::DoTurn(void)
 0001:00077E50       oCMag_Book::ShowHandSymbol(void)
 0001:00077FD0       oCMag_Book::SetShowHandSymbol(int)
 0001:00078330       oCMag_Book::DoPerFrame(void)
 0001:00078B50       zVEC4::zVEC4(void)
 0001:00078B60       oCMag_Book::GetNoOfSpells(void)
 0001:00078B70       oCMag_Book::GetSpell(oCItem *,int &)
 0001:00078BC0       oCMag_Book::GetSpell(int)
 0001:00078BE0       oCMag_Book::GetSpellItem(int)
 0001:00078C00       oCMag_Book::GetSpellItem(oCSpell *)
 0001:00078C40       oCMag_Book::NextRegisterAt(int)
 0001:00078C60       oCMag_Book::GetSpellByKey(int)
 0001:00078CA0       oCMag_Book::GetSpellItemByKey(int)
 0001:00078CE0       oCMag_Book::GetNoOfSpellByKey(int)
 0001:00078D30       oCMag_Book::GetKeyByItem(oCItem *)
 0001:00078D70       zCArray<oCSpell *>::~zCArray<oCSpell *>(void)
 0001:00078D90       zCArray<oCItem *>::~zCArray<oCItem *>(void)
 0001:00078DB0       zCArray<oCSpell *>::AllocDelta(int)
 0001:00078E10       zCArray<oCItem *>::AllocDelta(int)
 0001:00078E70       zDYNAMIC_CAST(zCObject const *)
 0001:00078F90       oCMenu_Main::oCMenu_Main(zSTRING const &)
 0001:00078FB0       oCMenu_Main::`scalar deleting destructor'(uint)
 0001:00078FD0       oCMenu_Main::ScreenInit(void)
 0001:00078FE0       oCMenu_Main::ScreenDone(void)
 0001:00078FF0       oCMenu_Main::HandleEvent(int)
 0001:000791D0       oCMenu_ChgKeys::oCMenu_ChgKeys(zSTRING const &)
 0001:000791F0       oCMenu_ChgKeys::`scalar deleting destructor'(uint)
 0001:00079210       oCMenu_ChgKeys::~oCMenu_ChgKeys(void)
 0001:00079220       oCMenu_ChgKeys::HandleEvent(int)
 0001:00079460       oCMenu_ChgKeys::ExecCommand(zSTRING const &)
 0001:00079E60       oCMenu_ChgKeys::ScreenInit(void)
 0001:00079E80       oCMenu_ChgKeys::Leave(void)
 0001:00079F30       oCMenu_ChgKeys::InitText(void)
 0001:0007A210       zCArray<ushort>::~zCArray<ushort>(void)
 0001:0007A230       zCArray<ushort>::InsertEnd(ushort const &)
 0001:0007A300       zCArray<ushort>::AllocDelta(int)
 0001:0007A960       oCMenu_Log::oCMenu_Log(zSTRING const &)
 0001:0007A980       oCMenu_Log::`scalar deleting destructor'(uint)
 0001:0007A9A0       oCMenu_Log::~oCMenu_Log(void)
 0001:0007A9B0       oCMenu_Log::ScreenInit(void)
 0001:0007ADE0       oCMenu_Log::ScreenDone(void)
 0001:0007AEF0       oCMenu_Log::SetDayTime(zSTRING const &,zSTRING const &)
 0001:0007AF90       oCMenu_Log::SetLogTopics(zCList<oCLogTopic> const &)
 0001:0007B600       zTMenuItemListElement::~zTMenuItemListElement(void)
 0001:0007B680       oCMenu_Log::SetInfo(zCMenuItem const *)
 0001:0007B690       oCMenu_Log::ExecCommand(zSTRING const &)
 0001:0007B8E0       oCMenu_Log::HandleEnterItem(zCMenuItem *)
 0001:0007BB10       oCMenu_Log::HandleLeaveItem(zCMenuItem *)
 0001:0007BD50       oCMenu_Log::HandleActivateItem(zCMenuItem *)
 0001:0007BD60       oCMenu_Log::HandleEvent(int)
 0001:0007BDB0       oCMenu_Log::Activate(void)
 0001:0007BDC0       oCMenu_Log::InitForDisplay(void)
 0001:0007BE00       oCMenu_Status::HandleEvent(int)
 0001:0007BFF0       oCMenu_Status::SetPlayerName(zSTRING const &)
 0001:0007C040       oCMenu_Status::SetGuild(zSTRING const &)
 0001:0007C130       oCMenu_Status::SetMagicalGuild(zSTRING const &)
 0001:0007C220       oCMenu_Status::SetExperience(ulong,ulong,ulong)
 0001:0007C620       zCMenuItem::Release(void)
 0001:0007C650       oCMenu_Status::SetLearnPoints(ulong)
 0001:0007C790       oCMenu_Status::oCMenu_Status(zSTRING const &)
 0001:0007C7F0       oCMenu_Status::`scalar deleting destructor'(uint)
 0001:0007C810       oCMenu_Status::~oCMenu_Status(void)
 0001:0007C8E0       oCMenu_Status::AddArmor(oSMenuInfoArmor const &)
 0001:0007C9F0       oCMenu_Status::AddAttribute(oSMenuInfoAttribute const &)
 0001:0007CBD0       oCMenu_Status::AddTalent(oSMenuInfoTalent const &)
 0001:0007CDC0       oCMenu_Status::InitForDisplay(void)
 0001:0007D8C0       oCStatusScreen::oCStatusScreen(void)
 0001:0007DB30       oCStatusScreen::`scalar deleting destructor'(uint)
 0001:0007DB50       oCStatusScreen::~oCStatusScreen(void)
 0001:0007DD60       oCStatusScreen::Show(void)
 0001:0007DF80       oCLogScreen::oCLogScreen(void)
 0001:0007E1D0       oCLogScreen::`scalar deleting destructor'(uint)
 0001:0007E1F0       oCLogScreen::~oCLogScreen(void)
 0001:0007E3E0       oCLogScreen::Show(void)
 0001:0007E600       oCMapScreen::oCMapScreen(void)
 0001:0007E7D0       oCMapScreen::`scalar deleting destructor'(uint)
 0001:0007E7F0       oCMapScreen::~oCMapScreen(void)
 0001:0007E9C0       oCMapScreen::Show(int)
 0001:0007ECE0       zCArray<oSMenuInfoAttribute>::~zCArray<oSMenuInfoAttribute>(void)
 0001:0007ED10       zCArray<oSMenuInfoTalent>::~zCArray<oSMenuInfoTalent>(void)
 0001:0007ED40       zCArray<oSMenuInfoArmor>::zCArray<oSMenuInfoArmor>(void)
 0001:0007ED50       oSMenuInfoAttribute::`vector deleting destructor'(uint)
 0001:0007EDB0       oSMenuInfoTalent::`vector deleting destructor'(uint)
 0001:0007EE10       oSMenuInfoAttribute::~oSMenuInfoAttribute(void)
 0001:0007EE90       oSMenuInfoTalent::~oSMenuInfoTalent(void)
 0001:0007EF40       zCList<oCLogEntry>::Get(int)
 0001:0007EF70       zCList<oCLogTopic>::Get(int)
 0001:0007EFA0       zCArray<oSMenuInfoAttribute>::AllocDelta(int)
 0001:0007F1A0       zCArray<oSMenuInfoTalent>::AllocDelta(int)
 0001:0007F3B0       oSMenuInfoAttribute::oSMenuInfoAttribute(void)
 0001:0007F3F0       oSMenuInfoTalent::oSMenuInfoTalent(void)
 0001:0007F6B0       Freelook(void)
 0001:0007F860       TestKeys_Carsten(int)
 0001:0007F870       ExceptionInfoCallback(EXCEPTION_DESCR *)
 0001:000806C0       oCarsten_PerFrame(void)
 0001:000806F0       oCarsten_StartUp(void)
 0001:00082980       zVEC4::zVEC4(zVEC4 const &)
 0001:000829A0       oCarsten_ShutDown(void)
 0001:00082C20       oCSpell::oCSpell(void)
 0001:00082D90       oCSpell::_GetClassDef(void)
 0001:00082DA0       oCSpell::`scalar deleting destructor'(uint)
 0001:00082DD0       oCSpell::oCSpell(int)
 0001:00082F50       oCSpell::~oCSpell(void)
 0001:00083020       oCSpell::InitValues(int)
 0001:00083150       oCSpell::GetSpellInstanceName(int)
 0001:000832E0       oCSpell::CreateEffect(void)
 0001:00083530       oCVisFX_MultiTarget::operator delete(void *)
 0001:00083550       oCSpell::InitByScript(zSTRING const &)
 0001:000837F0       oCSpell::SetEnabled(int)
 0001:00083920       oCSpell::GetEnabled(void)
 0001:00083930       oCSpell::Setup(zCVob *,zCVob *,int)
 0001:000840D0       oCSpell::Invest(void)
 0001:00084360       oCSpell::Cast(void)
 0001:00084510       oCSpell::Stop(void)
 0001:00084700       oCSpell::Kill(void)
 0001:000848A0       oCSpell::Open(void)
 0001:000849A0       oCSpell::Close(void)
 0001:00084B00       oCSpell::Reset(void)
 0001:00084C40       oCSpell::StopTargetEffects(zCVob *)
 0001:00084D30       oCSpell::CallScriptInvestedMana(void)
 0001:00084FC0       oCSpell::IsTargetTypeValid(zCVob *,int)
 0001:000851D0       oCSpell::IsValidTarget(zCVob *)
 0001:00085470       oCSpell::GetVob(void)
 0001:00085480       oCSpell::GetSpellID(void)
 0001:00085490       oCSpell::GetEnergyType(void)
 0001:000854A0       oCSpell::GetCategory(void)
 0001:000854B0       oCSpell::GetName(void)
 0001:00085620       oCSpell::GetLevel(void)
 0001:00085630       oCSpell::IsInvestSpell(void)
 0001:00085640       oCSpell::SetInvestedMana(int)
 0001:00085660       oCSpell::GetSpellStatus(void)
 0001:00085670       oCSpell::SetReleaseStatus(void)
 0001:00085940       oCSpell::SetSpellInfo(int)
 0001:00085950       oCSpell::DoLogicInvestEffect(void)
 0001:00085960       oCSpell::CastSpecificSpell(void)
 0001:00085E10       oCSpell::EndTimedEffect(void)
 0001:00086280       oCSpell::DoTimedEffect(void)
 0001:00086310       oCSpell::CanBeDeleted(void)
 0001:00086320       oCSpell::DeleteCaster(void)
 0001:00086340       oCSpell::Archive(zCArchiver &)
 0001:00086350       oCSpell::Unarchive(zCArchiver &)
 0001:00086550       oCSpell::_CreateNewInstance(void)
 0001:00086960       oCTrajectory::Calc(void)
 0001:00086C50       zMAT4::SetTranslation(zVEC3 const &)
 0001:00086C70       zMAT4::GetTranslation(zVEC3 &)
 0001:00086C90       zMAT4::zMAT4(zMAT4 const &)
 0001:00086CD0       zCKBSpline::InitVars(void)
 0001:00086CF0       oCTrajectory::Changed(void)
 0001:00086D00       oCTrajectory::Interpolate(float)
 0001:00087130       oCTrajectory::InterpolateN(float)
 0001:00087240       oCTrajectory::Draw(void)
 0001:00087500       oCTrajectory::Clear(void)
 0001:00087570       zCKBSpline::~zCKBSpline(void)
 0001:000875D0       oCTrajectory::RecalcByColl(zVEC3 const &,zVEC3 const &,zVEC3 const &,int)
 0001:000879F0       operator-(zVEC3 const &,zVEC3 const &)
 0001:00087A20       operator*(zVEC3 const &,zVEC3 const &)
 0001:00087A40       oCTrajectory::ApplyGrav(float const &)
 0001:00087AB0       oCTrajectory::SetByList(zCArray<zCVob *>)
 0001:00087C20       oCTrajectory::VobCross(zCVob const *)
 0001:00087CB0       oCEmitterKey::oCEmitterKey(void)
 0001:00087FA0       oCEmitterKey::~oCEmitterKey(void)
 0001:000881A0       oCEmitterKey::SetByScript(zSTRING const &)
 0001:00088370       oCEmitterKey::ParseStrings(void)
 0001:000888B0       oCVisualFX::SetupAIForAllFXInWorld(void)
 0001:00088A10       oCVisualFX::RemoveInstancesOfClass(zCClassDef &,int)
 0001:00088A80       oCVisualFX::PreSaveGameProcessing(int)
 0001:00088A90       oCVisualFX::PostSaveGameProcessing(void)
 0001:00088AA0       oCVisualFX::oCVisualFX(void)
 0001:00088F30       zVEC3::zVEC3(void)
 0001:00088F40       zCEffect::_GetClassDef(void)
 0001:00088F50       oCTrajectory::~oCTrajectory(void)
 0001:00089010       oCVisualFX::_GetClassDef(void)
 0001:00089020       oCVisualFX::GetOrigin(void)
 0001:00089030       oCVisualFX::GetTarget(void)
 0001:00089040       oCVisualFX::GetInflictor(void)
 0001:00089050       oCVisualFX::Play(float,zMAT4 const *,zMAT4 const *)
 0001:00089060       oCVisualFX::SetDuration(float)
 0001:00089070       oCVisualFX::GetCollisionCandidates(zCArray<zCVob *> &)
 0001:00089110       oCVisualFX::GetNumCollisionCandidates(void)
 0001:00089120       oCVisualFX::SetDamage(float)
 0001:00089130       oCVisualFX::SetDamageType(int)
 0001:00089140       oCVisualFX::GetDamage(void)
 0001:00089150       oCVisualFX::GetDamageType(void)
 0001:00089160       oCVisualFX::IsASpell(void)
 0001:00089170       oCVisualFX::SetSpellType(int)
 0001:00089180       oCVisualFX::GetSpellType(void)
 0001:00089190       oCVisualFX::SetSpellCat(int)
 0001:000891A0       oCVisualFX::GetSpellCat(void)
 0001:000891B0       oCVisualFX::GetSpellTargetTypes(void)
 0001:000891C0       oCVisualFX::SetSpellTargetTypes(int)
 0001:000891D0       oCVisualFX::GetIsProjectile(void)
 0001:000891E0       oCVisualFX::SetIsProjectile(int)
 0001:000891F0       oCVisualFX::`scalar deleting destructor'(uint)
 0001:00089220       zCEffect::~zCEffect(void)
 0001:00089230       zCEffect::`scalar deleting destructor'(uint)
 0001:00089260       oCVisualFX::~oCVisualFX(void)
 0001:00089BC0       zCKBSpline::`scalar deleting destructor'(uint)
 0001:00089BE0       zCPositionKey::`scalar deleting destructor'(uint)
 0001:00089C00       oCVisualFX::CleanUpCriticalFX(void)
 0001:00089DF0       oCVisualFX::CreateHierachy(void)
 0001:0008A0B0       oCVisualFX::DisposeHierachy(void)
 0001:0008A2C0       oCVisualFX::SetSendsAssessMagic(int)
 0001:0008A350       oCVisualFX::GetSendsAssessMagic(void)
 0001:0008A3F0       oCVisualFX::InitParser(void)
 0001:0008A7F0       oCVisualFX::ExitParser(void)
 0001:0008A820       oCVisualFX::InitValues(void)
 0001:0008AD00       zCAIBase::operator delete(void *)
 0001:0008AD20       zCAIBase::_GetClassDef(void)
 0001:0008AD30       zCAIBase::CanThisCollideWith(zCVob *)
 0001:0008AD40       zCAIBase::HasAIDetectedCollision(void)
 0001:0008AD50       zCAIBase::AICollisionResponseSelfDetected(zVEC3 const &,int &)
 0001:0008AD60       zCAIBase::HostVobRemovedFromWorld(zCVob *,zCWorld *)
 0001:0008AD70       oCVisualFXAI::ReportCollisionToAI(zCCollisionReport const &)
 0001:0008AD90       oCVisualFXAI::HostVobAddedToWorld(zCVob *,zCWorld *)
 0001:0008ADA0       oCVisualFXAI::GetIsProjectile(void)
 0001:0008ADB0       oCVisualFXAI::`scalar deleting destructor'(uint)
 0001:0008ADE0       oCVisualFXAI::~oCVisualFXAI(void)
 0001:0008ADF0       zCAIBase::ReportCollisionToAI(zCCollisionReport const &)
 0001:0008AE00       zCAIBase::HostVobAddedToWorld(zCVob *,zCWorld *)
 0001:0008AE10       zCAIBase::GetIsProjectile(void)
 0001:0008AE20       zCAIBase::`scalar deleting destructor'(uint)
 0001:0008AE50       zCAIBase::~zCAIBase(void)
 0001:0008AE60       oCVisualFX::ParseStrings(void)
 0001:0008B220       oCVisualFX::SetVisualByString(zSTRING const &)
 0001:0008C290       zPATH::~zPATH(void)
 0001:0008C2B0       zCParticleFX::operator delete(void *)
 0001:0008C2D0       zCEarthquake::operator delete(void *)
 0001:0008C2F0       zCVobScreenFX::operator delete(void *)
 0001:0008C310       zCPolyStrip::operator delete(void *)
 0001:0008C330       oCVisualFX::SetCollisionEnabled(int)
 0001:0008C4B0       oCVisualFX::SetByScript(zSTRING const &)
 0001:0008CDA0       zCVobLight::operator delete(void *)
 0001:0008CDC0       oCVisualFX::UpdateFXByEmitterKey(oCEmitterKey *)
 0001:0008D5F0       oCVisualFX::CreateBackup(void)
 0001:0008D600       oCVisualFX::FindKey(zSTRING const &)
 0001:0008D760       oCVisualFX::CreateAndPlay(zSTRING const &,zCVob const *,zCVob const *,int,float,int,int)
 0001:0008DA80       oCVisualFX::CreateAndPlay(zSTRING const &,zVEC3 const &,zCVob const *,int,float,int,int)
 0001:0008DE80       oCVisualFX::CreateAndCastFX(zSTRING const &,zCVob const *,zCVob const *)
 0001:0008E1E0       oCVisualFX::CreateAndCastFX(zSTRING const &,zMAT4 const &)
 0001:0008E620       oCVisualFX::CalcTrajectory(int const &)
 0001:0008FDD0       zMAT4::GetUpVector(void)
 0001:0008FDF0       zMAT4::GetRightVector(void)
 0001:0008FE10       zVEC3::LengthApprox(void)
 0001:0008FEA0       zVEC3::Normalize(void)
 0001:0008FEE0       operator==(zVEC3 const &,zVEC3 const &)
 0001:0008FF20       zCPositionKey::SetMat(zMAT4 const &)
 0001:0008FF50       oCTrajectory::InsertKey(zMAT4 &)
 0001:00090060       oCTrajectory::GetKey(int)
 0001:000900E0       oCTrajectory::GetNumKeys(void)
 0001:000900F0       oCVisualFX::SetOrigin(zCVob *,int)
 0001:00090220       oCVisualFX::SetInflictor(zCVob *)
 0001:000902E0       oCVisualFX::SetTarget(zCVob *,int)
 0001:00090450       oCVisualFX::SetTarget(zVEC3 &,int)
 0001:00090510       oCVisualFX::CreateInvestFX(void)
 0001:00090690       oCVisualFX::InitInvestFX(void)
 0001:00090830       oCVisualFX::StopInvestFX(void)
 0001:000908E0       oCVisualFX::Open(void)
 0001:00090C20       oCVisualFX::Reset(void)
 0001:00090E10       oCVisualFX::Init(zCVob const *,zVEC3 const &)
 0001:00090F20       oCVisualFX::Init(zCVob const *,zCVob const *,zCVob const *)
 0001:00091680       zSTRING::Search(zSTRING const &,uint)
 0001:000916A0       oCVisualFX::Init(zCArray<zCVob *> const &)
 0001:00091830       oCVisualFX::InvestNext(void)
 0001:00091CB0       oCVisualFX::SetLevel(int,int)
 0001:00092150       oCVisualFX::GetLevel(void)
 0001:00092160       oCVisualFX::Cast(int)
 0001:000926C0       zSTRING::ToFloat(void)
 0001:00092A00       oCVisualFX::Collide(int)
 0001:00092BE0       oCVisualFX::Stop(int)
 0001:00092F70       oCVisualFX::Kill(void)
 0001:000932B0       oCVisualFX::CanBeDeleted(void)
 0001:000932F0       oCVisualFX::IsFinished(void)
 0001:00093370       oCVisualFX::IsLooping(void)
 0001:000933E0       oCVisualFX::InitEffect(void)
 0001:00093C80       oCVisualFX::EndEffect(int)
 0001:00093D20       oCVisualFX::SetShowVisual(int)
 0001:00093E80       oCVisualFX::ReportCollision(zCCollisionReport const &)
 0001:000947F0       Alg_SqrtInvApprox(float)
 0001:00094830       oCVisualFX::ProcessQueuedCollisions(void)
 0001:000948D0       oCVisualFX::ProcessCollision(zSVisualFXColl &)
 0001:000952F0       oCNpc::oSDamageDescriptor::~oSDamageDescriptor(void)
 0001:00095360       oCMsgDamage::operator delete(void *)
 0001:00095380       oCVisualFX::CollisionResponse(zVEC3 const &,int)
 0001:000958E0       oCVisualFX::SetCollisionCandidates(zCArray<zCVob *>)
 0001:00095A00       oCVisualFX::GetCollidedCandidates(zCArray<zCVob *> &)
 0001:00095AC0       oCVisualFX::CanThisCollideWith(zCVob *)
 0001:00095CF0       oCVisualFX::CheckDeletion(void)
 0001:00096300       oCVisualFX::UpdateActKey(void)
 0001:00096550       oCVisualFX::DoMovements(void)
 0001:00097A20       zVEC3::NormalizeSafe(void)
 0001:00097A80       operator^(zVEC3 const &,zVEC3 const &)
 0001:00097AC0       zCPositionKey::GetMat(void)
 0001:00097B40       zCKBSpline::InterpolateN(float,zMAT4 &,zTSplLerpMode)
 0001:00097B70       oCVisualFX::CheckDelayedTrigger(void)
 0001:00097EE0       oCVisualFX::AdjustShapeToOrigin(void)
 0001:00098480       operator*(zVEC2 const &,float)
 0001:000984A0       oCVisualFX::UpdateEffects(void)
 0001:00098A20       oCVisualFX::OnTick(void)
 0001:00098B40       oCVisualFX::Archive(zCArchiver &)
 0001:00098B50       oCVisualFX::Unarchive(zCArchiver &)
 0001:00098B60       oCVisualFX::CalcPFXMesh(void)
 0001:00098D10       oCVisualFX::ReleasePFXMesh(void)
 0001:00098DF0       oCVisualFX::SetPFXShapeVisual(zCVisual *,int)
 0001:00099030       oCVisualFXAI::DoAI(zCVob *,int &)
 0001:00099230       oCVisualFX::_CreateNewInstance(void)
 0001:00099290       zCArray<zCPositionKey *>::zCArray<zCPositionKey *>(void)
 0001:000992A0       zCArray<zCPositionKey *>::~zCArray<zCPositionKey *>(void)
 0001:000992C0       zCArray<zCPositionKey *>::DeleteList(void)
 0001:000992E0       zCArray<oCVisualFX *>::~zCArray<oCVisualFX *>(void)
 0001:00099300       zCArray<oCEmitterKey *>::~zCArray<oCEmitterKey *>(void)
 0001:00099320       zCArray<zSVisualFXColl>::~zCArray<zSVisualFXColl>(void)
 0001:00099340       zCArray<zCPositionKey *>::AllocDelta(int)
 0001:000993A0       zCArray<oCEmitterKey *>::InsertEnd(oCEmitterKey * const &)
 0001:00099470       zCArray<zSVisualFXColl>::AllocDelta(int)
 0001:000994E0       zCArray<oCVisualFX *>::AllocDelta(int)
 0001:00099540       zDYNAMIC_CAST(zCObject const *)
 0001:00099570       zDYNAMIC_CAST(zCObject const *)
 0001:00099810       nullsub_31
 0001:00099820       oCVisualFX::Edit(void)
 0001:00099DB0       oCVisualFX::CreateNewScriptFX(zSTRING const &)
 0001:00099FF0       oCEmitterKey::Edit(void)
 0001:0009A3E0       oCEmitterKey::CreateNewScriptKey(zSTRING const &)
 0001:0009A620       oCVisualFX::FxConsole_ParameterChanged(zSTRING const &)
 0001:0009B290       oCVisualFX::EmConsole_ParameterChanged(zSTRING const &)
 0001:0009B4D0       oCVisualFX::FxConsole_EvalFunc(zSTRING const &,zSTRING &)
 0001:0009C180       oCVisualFX::EmConsole_EvalFunc(zSTRING const &,zSTRING &)
 0001:0009D430       oCEmitterKey::SetDefaultByFX(oCVisualFX *)
 0001:0009D8B0       oCVisualFX::SetupEmitterKeysByVisual(void)
 0001:0009D950       oCVisualFX::ResetForEditing(void)
 0001:0009DB40       oCVisFX_MultiTarget::oCVisFX_MultiTarget(void)
 0001:0009DB80       oCVisFX_MultiTarget::_GetClassDef(void)
 0001:0009DB90       oCVisFX_MultiTarget::Play(float,zMAT4 const *,zMAT4 const *)
 0001:0009DBA0       oCVisFX_MultiTarget::`scalar deleting destructor'(uint)
 0001:0009DBD0       oCVisFX_MultiTarget::~oCVisFX_MultiTarget(void)
 0001:0009DCF0       oCVisFX_MultiTarget::Open(void)
 0001:0009DD30       oCVisFX_MultiTarget::SetLevel(int)
 0001:0009DD80       oCVisFX_MultiTarget::Init(zCArray<zCVob *>)
 0001:0009E220       oCVisFX_MultiTarget::InvestNext(void)
 0001:0009E260       oCVisFX_MultiTarget::Cast(int)
 0001:0009E2D0       oCVisFX_MultiTarget::Stop(int)
 0001:0009E340       oCVisFX_MultiTarget::SetByScript(zSTRING const &)
 0001:0009E400       oCVisFX_MultiTarget::Reset(void)
 0001:0009E440       oCVisFX_MultiTarget::IsFinished(void)
 0001:0009E490       oCVisFX_MultiTarget::SetDamage(float)
 0001:0009E4F0       oCVisFX_MultiTarget::SetDamageType(int)
 0001:0009E540       oCVisFX_MultiTarget::Archive(zCArchiver &)
 0001:0009E550       oCVisFX_MultiTarget::Unarchive(zCArchiver &)
 0001:0009E750       oCVisFX_MultiTarget::_CreateNewInstance(void)
 0001:0009E7F0       zCArray<zCVob *>::AllocAbs(int)
 0001:0009ED20       zCAICamera::GetCurrent(void)
 0001:0009ED30       zCAICamera::zCAICamera(void)
 0001:0009EF80       zCAICamera::_GetClassDef(void)
 0001:0009EF90       zCAICamera::`scalar deleting destructor'(uint)
 0001:0009EFC0       zCAICamera::~zCAICamera(void)
 0001:0009F180       zCAICamera::Create(void)
 0001:0009F210       zCAICamera::operator delete(void *)
 0001:0009F230       zCAICamera::StartUp(void)
 0001:0009F850       zCAICamera::CleanUp(void)
 0001:0009F880       zCAICamera::GlobalStartUp(void)
 0001:0009F890       zCAICamera::GlobalCleanUp(void)
 0001:0009F8F0       zCAICamera::GetBestRange(void)
 0001:0009F9A0       zCAICamera::GetMinRange(void)
 0001:0009F9B0       zCAICamera::GetMaxRange(void)
 0001:0009F9C0       zCAICamera::SetMode(zSTRING &,zCArray<zCVob *>)
 0001:0009FD40       zCAICamera::GetMode(void)
 0001:0009FD90       zCAICamera::IsModeActive(zSTRING &)
 0001:0009FE10       zCAICamera::IsModeAvailable(zSTRING const &)
 0001:0009FE30       zCAICamera::ReceiveMsg(zTAICamMsg const &)
 0001:0009FE60       zCAICamera::SetVob(zCVob *)
 0001:000A0120       zCAICamera::SetTarget(zCVob *)
 0001:000A05B0       zCAICamera::SetTargetList(zCArray<zCVob *>)
 0001:000A0870       zCAICamera::ClearTargetList(void)
 0001:000A08F0       zCAICamera::AddTarget(zCVob *)
 0001:000A0A40       zCAICamera::SubTarget(zCVob *)
 0001:000A0AD0       zCAICamera::Console_EvalFunc(zSTRING const &,zSTRING &)
 0001:000A13B0       zCAICamera::ParameterChanged(void)
 0001:000A1550       zCAICamera::CalcFirstPosition(void)
 0001:000A16E0       zCAICamera::SetByScript(zSTRING &)
 0001:000A1D30       zCAICamera::SetByScriptLine(zSTRING &)
 0001:000A2670       zCAICamera::CreateInstance(zSTRING &)
 0001:000A2690       zCAICamera::AI_LookingCam(void)
 0001:000A30C0       zSPathSearchResult::~zSPathSearchResult(void)
 0001:000A30E0       zCAICamera::AI_FirstPerson(void)
 0001:000A3370       zCAICamera::AI_Normal(void)
 0001:000A3570       zCAICamera::GetCamSysFirstPos(void)
 0001:000A3580       zCAICamera::SetHintTargetInPortalRoom(int)
 0001:000A35C0       zCAICamera::CheckKeys(void)
 0001:000A3FB0       zCAICamera::DoAI(zCVob *,int &)
 0001:000A44E0       zCAICamera::SetRotateEnabled(int)
 0001:000A46E0       zCAICamera::_CreateNewInstance(void)
 0001:000A4740       zCArray<zCVob *>::DeleteList(void)
 0001:000A4890       zCPathSearch::zCPathSearch(void)
 0001:000A4A70       zSPathSearchState::~zSPathSearchState(void)
 0001:000A4B40       zCPathSearch::CamVobChanged(void)
 0001:000A4C40       zCPathSearch::TargetChanged(void)
 0001:000A4C60       zCPathSearch::SetAICamera(zCAICamera *)
 0001:000A4C70       zCSphereCoordsCache::GetSphereCoordLazy(float const &,float const &,float const &,zSPathSearchState_Internal * &)
 0001:000A59C0       nullsub_14
 0001:000A59F0       zCSphereCoordsCache::zSAziSphereCoord::~zSAziSphereCoord(void)
 0001:000A5A10       zCSphereCoordsCache::zSElevSphereCoord::~zSElevSphereCoord(void)
 0001:000A5A30       zSPathSearchState_Internal::zSPathSearchState_Internal(void)
 0001:000A5A40       zCSphereCoordsCache::GetBestScoredSearch(float &,float &,float &,zSPathSearchState_Internal * &)
 0001:000A5B90       zCSphereCoordsCache::zCSphereCoordsCache(void)
 0001:000A5BB0       zCSphereCoordsCache::~zCSphereCoordsCache(void)
 0001:000A5C10       zCSphereCoordsCache::DeleteList(void)
 0001:000A5D20       zCPathSearch::GetReport(void)
 0001:000A5D60       zSPathSearchResult::zSPathSearchResult(void)
 0001:000A5D80       zCPathSearch::GetSearch(void)
 0001:000A5DD0       zCPathSearch::~zCPathSearch(void)
 0001:000A5F60       zCPathSearch::SphereSearch(zSEvasionSearchDesc const &)
 0001:000A6540       zSEvasionSearchDesc::zSEvasionSearchOptions::~zSEvasionSearchOptions(void)
 0001:000A65C0       zCPathSearch::SwitchSearch(zSEvasionSearchDesc const &)
 0001:000A65D0       zCPathSearch::ShoulderSearch(zSEvasionSearchDesc const &)
 0001:000A69B0       zCPathSearch::PanicSearch(zSEvasionSearchDesc const &)
 0001:000A6EC0       zCPathSearch::CalcStateScores(zSPathSearchState &)
 0001:000A71E0       zCPathSearch::GetBestLerpMode(zSPathSearchState const &)
 0001:000A7350       zCPathSearch::GetBestLerpMode(zVEC3 const &,zVEC3 const &)
 0001:000A7430       zCPathSearch::DoSlerpRotQuat(zCQuat const &,zCQuat const &,float const &,float const &)
 0001:000A7670       zCPathSearch::FindBestEvasion(zCPathSearch::zSPathSearchOptions &)
 0001:000A7B40       zCPathSearch::CanEvadeTo(zSPathSearchState &)
 0001:000A7BA0       zCPathSearch::FindEvasionSequence(zCArray<zSEvasionSearchDesc> &)
 0001:000A7F00       zSEvasionSearchDesc::zSEvasionSearchDesc(void)
 0001:000A7F30       zSEvasionSearchDesc::~zSEvasionSearchDesc(void)
 0001:000A7FD0       zCPathSearch::FES_PlayerInvisible_Moved(zCArray<zSEvasionSearchDesc> &)
 0001:000AA060       zSEvasionSearchDesc::zSEvasionSearchOptions::zSEvasionSearchOptions(void)
 0001:000AA0A0       zCPathSearch::FES_PlayerInvisible_Moved_BW(zCArray<zSEvasionSearchDesc> &)
 0001:000AA9E0       zCPathSearch::FES_PlayerInvisible_Moved_FW(zCArray<zSEvasionSearchDesc> &)
 0001:000AB340       zCPathSearch::FES_IdealCone(zCArray<zSEvasionSearchDesc> &)
 0001:000AD200       zCPathSearch::FES_PlayerInvisible_Standing(zCArray<zSEvasionSearchDesc> &)
 0001:000AD250       zCPathSearch::FES_PlayerInvisible_Rotated(zCArray<zSEvasionSearchDesc> &)
 0001:000ADAD0       zCPathSearch::FES_PlayerTargetInvisible(zCArray<zSEvasionSearchDesc> &)
 0001:000ADB10       zCPathSearch::FES_CamHitWall(zCArray<zSEvasionSearchDesc> &)
 0001:000ADB20       zCPathSearch::FES_NoEvasionFound(zCArray<zSEvasionSearchDesc> &)
 0001:000ADCF0       zCPathSearch::EvasionPossible(void)
 0001:000ADD00       zCPathSearch::IsPointValid(zVEC3 const &,int,zTPoseFailReason &)
 0001:000AE5D0       zCPathSearch::IsPointNearWall(zVEC3 const &)
 0001:000AE7F0       zCPathSearch::LineOfSight(zVEC3 const &,zVEC3 const &)
 0001:000AE880       zCPathSearch::CorrectPosForNearClip(zVEC3 &)
 0001:000AEC70       zCPathSearch::AdjustCenterSphere(zVEC3 &,zVEC3 const &,float)
 0001:000AEF20       zCPathSearch::GetPolyNearestPoint(zCPolygon *,zVEC3 const &)
 0001:000AF4B0       nullsub_8
 0001:000AF4C0       zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>::zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>(void)
 0001:000AF4D0       zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>::~zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>(void)
 0001:000AF500       zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>::InsertEnd(zSEvasionSearchDesc::zSEvasionSearchOptions const &)
 0001:000AF780       zCArraySort<zCSphereCoordsCache::zSRangeSphereCoord *>::zCArraySort<zCSphereCoordsCache::zSRangeSphereCoord *>(void)
 0001:000AF7A0       zCArraySort<zCSphereCoordsCache::zSRangeSphereCoord *>::InsertSort(zCSphereCoordsCache::zSRangeSphereCoord * const &)
 0001:000AF8F0       zCArraySort<zCSphereCoordsCache::zSElevSphereCoord *>::zCArraySort<zCSphereCoordsCache::zSElevSphereCoord *>(void)
 0001:000AF910       zCArraySort<zCSphereCoordsCache::zSElevSphereCoord *>::InsertSort(zCSphereCoordsCache::zSElevSphereCoord * const &)
 0001:000AFA60       zCArraySort<zCSphereCoordsCache::zSAziSphereCoord *>::~zCArraySort<zCSphereCoordsCache::zSAziSphereCoord *>(void)
 0001:000AFA80       zCArraySort<zCSphereCoordsCache::zSAziSphereCoord *>::InsertSort(zCSphereCoordsCache::zSAziSphereCoord * const &)
 0001:000AFBD0       zCArray<int (**)(zSEvasionSearchDesc const &)>::~zCArray<int (**)(zSEvasionSearchDesc const &)>(void)
 0001:000AFBF0       zCArray<zSEvasionSearchDesc>::~zCArray<zSEvasionSearchDesc>(void)
 0001:000AFC20       zCArray<zSEvasionSearchDesc>::InsertEnd(zSEvasionSearchDesc const &)
 0001:000AFE40       zSEvasionSearchDesc::zSEvasionSearchOptions::`vector deleting destructor'(uint)
 0001:000AFEA0       zSEvasionSearchDesc::zSEvasionSearchOptions::operator=(zSEvasionSearchDesc::zSEvasionSearchOptions const &)
 0001:000B0130       zSEvasionSearchDesc::`vector deleting destructor'(uint)
 0001:000B0190       zSEvasionSearchDesc::operator=(zSEvasionSearchDesc const &)
 0001:000B03B0       zCArray<zSEvasionSearchDesc::zSEvasionSearchOptions>::AllocDelta(int)
 0001:000B05F0       zCArraySort<zCSphereCoordsCache::zSRangeSphereCoord *>::AllocDelta(int)
 0001:000B0650       zCArraySort<zCSphereCoordsCache::zSElevSphereCoord *>::AllocDelta(int)
 0001:000B06B0       zCArray<zSEvasionSearchDesc>::AllocDelta(int)
 0001:000B08E0       zClamp(float &,float,float)
 0001:000B0940       zCAICamera::StartupDialogCam(void)
 0001:000B0DE0       zCAICamera::GlobalDialogCamCleanUp(void)
 0001:000B0EE0       zCAICamera::InitDialogCam(void)
 0001:000B0F20       zCAICamera::SetDialogCamDuration(float)
 0001:000B0F30       zCAICamera::ReleaseLastDialogCam(void)
 0001:000B0FF0       zCAICamera::PickPreset(zSTRING,zCArray<zCCSCamera *> const &)
 0001:000B10F0       zCAICamera::StartDialogCam(int)
 0001:000B3140       zVEC4::zVEC4(float,float,float,float)
 0001:000B3160       zCCSCamera_EventMsgActivate::zCCSCamera_EventMsgActivate(zCCSCamera_EventMsgActivate::zTCSCam_ActivateSubType)
 0001:000B3250       zCCSCamera::GetCamKey(int)
 0001:000B3270       zCCSCamera::GetTargetKey(int)
 0001:000B3290       zCAICamera::DialogPresetIsValid(zCCSCamera *)
 0001:000B3330       zCArray<zCCSCamera *>::~zCArray<zCCSCamera *>(void)
 0001:000B3350       zCArray<zCCSCamera *>::InsertEnd(zCCSCamera * const &)
 0001:000B3420       zCArray<zCCSCamera *>::DeleteList(void)
 0001:000B3440       zCArray<zCCSCamera *>::AllocDelta(int)
 0001:000B34D0       zCMovementTracker::GetTracker(void)
 0001:000B3520       zCMovementTracker::zCMovementTracker(void)
 0001:000B3A10       zCPose::~zCPose(void)
 0001:000B3A20       zCMovementTracker::~zCMovementTracker(void)
 0001:000B3AA0       zCMovementTracker::GetAzimuth(void)
 0001:000B3AB0       zCMovementTracker::GetElevation(void)
 0001:000B3AC0       zCMovementTracker::GetAzimuth(zVEC3 const &)
 0001:000B3DC0       zVEC2::zVEC2(float,float)
 0001:000B3DE0       zVEC2::operator=/(float)
 0001:000B3E00       zVEC2::Length2(void)
 0001:000B3E20       operator*(zVEC2 const &,zVEC2 const &)
 0001:000B3E40       zCMovementTracker::GetElevation(zVEC3 const &)
 0001:000B4070       zCMovementTracker::GetRange(zVEC3 const &)
 0001:000B40A0       zCMovementTracker::SetAzimuth(float const &)
 0001:000B40D0       zCMovementTracker::SetElevation(float const &)
 0001:000B4100       zCMovementTracker::SetRange(float const &)
 0001:000B41D0       zCMovementTracker::GetRange(void)
 0001:000B4200       zCMovementTracker::ApplyAziToPoint(float const &,zVEC3 const &)
 0001:000B4400       zCMovementTracker::ApplyElevToPoint(float const &,zVEC3 const &)
 0001:000B47A0       zCMovementTracker::ApplyRangeToPoint(float const &,zVEC3 const &)
 0001:000B4860       zCMovementTracker::GetRangePos(float const &)
 0001:000B4920       zCMovementTracker::GetIdealRangePos(void)
 0001:000B49E0       zCMovementTracker::GetDistToIdealRange(void)
 0001:000B4AE0       zCMovementTracker::IsIdealOrientation(void)
 0001:000B4B50       zCMovementTracker::IsIdealRange(void)
 0001:000B4C70       zCMovementTracker::UpdateCamPos(zVEC3 const &)
 0001:000B4D30       zCMovementTracker::UpdatePlayerPos(zVEC3 const &)
 0001:000B50A0       zVEC3::operator+=(zVEC3 const &)
 0001:000B50D0       zVEC3::operator=/(float)
 0001:000B5100       zCMovementTracker::SetCamPos(zVEC3 const &)
 0001:000B5150       zCMovementTracker::CalcPlayerPose(void)
 0001:000B5AF0       operator/(zVEC3 const &,float)
 0001:000B5B20       zInverseMatD(zMAT4 const &,zSTRING const &)
 0001:000B5EE0       nullsub_9
 0001:000B5EF0       zCMovementTracker::CalcPlayerMovements(void)
 0001:000B61E0       zCMovementTracker::SetPlayerPos(zVEC3 const &)
 0001:000B6260       zCMovementTracker::ReceiveMsg(zTAICamMsg const &)
 0001:000B6270       zCMovementTracker::ClearMessages(void)
 0001:000B6280       zCMovementTracker::AutoSetMessages(void)
 0001:000B63C0       zCMovementTracker::UpdateMessages(void)
 0001:000B63F0       zCMovementTracker::Update(void)
 0001:000B6820       zCMovementTracker::CheckKeys(void)
 0001:000B6830       zCMovementTracker::CheckSpecialMoves(void)
 0001:000B6B10       zCMovementTracker::GetLocalRot(float const &,float const &)
 0001:000B6C90       zCMovementTracker::GetLocalRotEnd(void)
 0001:000B7110       zCMovementTracker::RecalcRingPositions(void)
 0001:000B71B0       zCMovementTracker::GetLastValidWayPoint(zCMovementTracker::zTWayPoint const &)
 0001:000B73A0       nullsub_10
 0001:000B73B0       zCMovementTracker::UpdateWayPoint(zCMovementTracker::zTWayPoint const &)
 0001:000B76C0       zCMovementTracker::ResetWayPoints(zVEC3 const &,zCMovementTracker::zTWayPoint const &)
 0001:000B77C0       zCMovementTracker::InterpolateTo(zSPathSearchResult const &)
 0001:000B8D90       zMAT4::SetUpVector(zVEC3 const &)
 0001:000B8DB0       zMAT4::SetRightVector(zVEC3 const &)
 0001:000B8DD0       operator-(zVEC3 const &)
 0001:000B8DF0       zCMovementTracker::CalcPlayerSpline(void)
 0001:000B9080       zCMovementTracker::GetFirstPersonCamMat(void)
 0001:000B9280       nullsub_15
 0001:000B9290       zCMovementTracker::GetPanicCamMat(void)
 0001:000B9370       nullsub_16
 0001:000B9380       zCMovementTracker::GetShoulderCamMat(void)
 0001:000B94F0       zCMovementTracker::CalcAziElevRangeApprox(float const &,float const &,float const &)
 0001:000B98E0       nullsub_11
 0001:000B98F0       zCMovementTracker::SetRotateEnabled(int)
 0001:000B9AD0       zCMovementTracker::SaveFrameStates(void)
 0001:000B9F00       zCMovementTracker::TargetChanged(void)
 0001:000BA060       zCMovementTracker::CamVobChanged(void)
 0001:000BA0F0       zCMovementTracker::UpdateSampledPlayerPos(zVEC3 const &)
 0001:000BA280       zCMovementTracker::SetSampledPlayerPos(zVEC3 const &)
 0001:000BA2C0       zCMovementTracker::GetPlayerFuturePos(float)
 0001:000BA3A0       nullsub_12
 0001:000BA3B0       zCArray<zCPositionKey *>::zCArray<zCPositionKey *>(zCArray<zCPositionKey *> const &)
 0001:000BA440       zCArray<zCPositionKey *>::RemoveOrderIndex(int)
 0001:000BA4A0       zCAICamera::InitHelperVobs(void)
 0001:000BA740       zCAICamera::DeleteHelperVobs(void)
 0001:000BA7B0       zCAICamera::ShowDebug(void)
 0001:000BBC00       zCAICamera::DrawClipLine(zVEC3 const &,zVEC3 const &,zCOLOR)
 0001:000BBE60       zCAICamera::CalcMinimumBSphere(zCArray<zVEC3> &)
 0001:000BC2E0       zCAICamera::CheckUnderWaterFX(void)
 0001:000BC7F0       zCAICamera::CalcAziElevRange(float const &,float const &,float const &,zMAT4 const &)
 0001:000BCBD0       nullsub_13
 0001:000BCE00       zCCamTrj_KeyFrame::zCCamTrj_KeyFrame(void)
 0001:000BCED0       zCCamTrj_KeyFrame::_GetClassDef(void)
 0001:000BCEE0       zCCamTrj_KeyFrame::`scalar deleting destructor'(uint)
 0001:000BCF10       zCCamTrj_KeyFrame::~zCCamTrj_KeyFrame(void)
 0001:000BCF90       zCCamTrj_KeyFrame::ThisVobAddedToWorld(zCWorld *)
 0001:000BCFA0       zCCamTrj_KeyFrame::ThisVobRemovedFromWorld(zCWorld *)
 0001:000BD100       zCCamTrj_KeyFrame::Archive(zCArchiver &)
 0001:000BD250       zCCamTrj_KeyFrame::Unarchive(zCArchiver &)
 0001:000BD390       zCCamTrj_KeyFrame::Changed(void)
 0001:000BD400       zCCSCamera::GetPlayerVob(void)
 0001:000BD410       zCCSCamera::zCCSCamera(void)
 0001:000BD790       zCCSCamera::_GetClassDef(void)
 0001:000BD7B0       zCCSCamera::`scalar deleting destructor'(uint)
 0001:000BD7E0       zCCSCamera::~zCCSCamera(void)
 0001:000BD9F0       zCCSCamera::InsertCamKey(zCCamTrj_KeyFrame *)
 0001:000BDB20       zCCSCamera::InsertCamKeyAtPos(zCCamTrj_KeyFrame *,int)
 0001:000BDC70       zCCSCamera::RemoveCamKey(zCCamTrj_KeyFrame *)
 0001:000BDD40       zCCSCamera::InsertTargetKey(zCCamTrj_KeyFrame *)
 0001:000BDE70       zCCSCamera::InsertTargetKeyAtPos(zCCamTrj_KeyFrame *,int)
 0001:000BDFC0       zCCSCamera::RemoveTargetKey(zCCamTrj_KeyFrame *)
 0001:000BE090       zCCSCamera::Refresh(void)
 0001:000BE1D0       zCCSCamera::Draw(void)
 0001:000BE9A0       zCCSCamera::Archive(zCArchiver &)
 0001:000BEBC0       zCCSCamera::Unarchive(zCArchiver &)
 0001:000BF000       zCCSCamera::ThisVobAddedToWorld(zCWorld *)
 0001:000BF010       zCCSCamera::ThisVobRemovedFromWorld(zCWorld *)
 0001:000BF180       zCCSCamera::OnMessage(zCEventMessage *,zCVob *)
 0001:000BF480       zCCSCamera::EV_Play(zCCSCamera_EventMsg *)
 0001:000BF930       zCCSCamera::EV_Resume(zCCSCamera_EventMsg *)
 0001:000BF960       zCCSCamera::EV_Pause(zCCSCamera_EventMsg *)
 0001:000BFA20       zCCSCamera::EV_Stop(zCCSCamera_EventMsg *)
 0001:000BFF20       zCCSCamera::EV_GotoKey(zCCSCamera_EventMsg *)
 0001:000C03D0       zCCSCamera::EV_SetDuration(zCCSCamera_EventMsg *)
 0001:000C0410       zCCSCamera::EV_SetTime(zCCSCamera_EventMsg *)
 0001:000C0430       zCCSCamera::EV_Deactivate(zCCSCamera_EventMsgActivate *)
 0001:000C04B0       zCCSCamera::EV_SetCamReference(zCCSCamera_EventMsgActivate *)
 0001:000C0550       zCCSCamera::EV_SetTargetReference(zCCSCamera_EventMsgActivate *)
 0001:000C05F0       zCCSCamera::DeleteEvMsgOfSubType(int)
 0001:000C0690       zCCSCamera::OnTick(void)
 0001:000C2270       zCCSCamera::OnTrigger(zCVob *,zCVob *)
 0001:000C29E0       zCPose::SetPose(zMAT4 &)
 0001:000C2A20       zCCamTrj_KeyFrame::operator delete(void *)
 0001:000C2A40       zCCSCamera_EventMsg::_GetClassDef(void)
 0001:000C2A50       zCCSCamera_EventMsg::IsJob(void)
 0001:000C2A70       zCCSCamera_EventMsg::IsHighPriority(void)
 0001:000C2A80       zCCSCamera_EventMsg::IsDeleted(void)
 0001:000C2A90       zCCSCamera_EventMsg::Delete(void)
 0001:000C2AA0       zCCSCamera_EventMsg::MD_GetTimeBehavior(void)
 0001:000C2AC0       zCCSCamera::OnUntrigger(zCVob *,zCVob *)
 0001:000C2D40       zCCSCamera::RecalcTrajectories(void)
 0001:000C2E80       zCCSCamera::CheckAndResetAdjustedKeys(void)
 0001:000C2F40       zCCSCamera::CheckAndCorrectKey(int)
 0001:000C2FF0       zCCSCamera::CheckAndCorrectPose(zMAT4 &)
 0001:000C31D0       zCCSCamera::PreKFProcessing(void)
 0001:000C3FF0       zCCSCamera::PostKFProcessing(void)
 0001:000C4020       zCCSCamera::AutoSetKeyTimes(zCArray<zCCamTrj_KeyFrame *> &)
 0001:000C4510       zCCSCamera::Changed(void)
 0001:000C4540       zCCSCamera::Initialize(void)
 0001:000C5190       zCCSCamera::Reset(void)
 0001:000C5210       zCCSCamera::CalcPrevNextActKeyOfTime(float const &,zCArray<zCCamTrj_KeyFrame *> &,int &,int &,int &)
 0001:000C5300       zCCSCamera::IsPointNearWall(zVEC3 const &)
 0001:000C54A0       zCCSCamera::GetPolyNearestPoint(zCPolygon *,zVEC3 const &)
 0001:000C59D0       zCCSCamera::AdjustCenterSphere(zVEC3 &,zVEC3 const &,float)
 0001:000C5C00       zCCSCamera_EventMsg::zCCSCamera_EventMsg(void)
 0001:000C5D40       zCCSCamera_EventMsg::`scalar deleting destructor'(uint)
 0001:000C5D70       zCCSCamera_EventMsg::zCCSCamera_EventMsg(zCCSCamera_EventMsg::zTCSCam_EvSubType)
 0001:000C5ED0       zCCSCamera_EventMsg::~zCCSCamera_EventMsg(void)
 0001:000C5EE0       zCCSCamera_EventMsg::Archive(zCArchiver &)
 0001:000C5F70       zCCSCamera_EventMsg::Unarchive(zCArchiver &)
 0001:000C6000       zCCSCamera_EventMsg::MD_GetNumOfSubTypes(void)
 0001:000C6010       zCCSCamera_EventMsg::MD_GetSubTypeString(int)
 0001:000C6220       zCCSCamera_EventMsg::MD_GetMinTime(void)
 0001:000C6240       zCCSCamera_EventMsgActivate::Archive(zCArchiver &)
 0001:000C6270       zCCSCamera_EventMsgActivate::Unarchive(zCArchiver &)
 0001:000C6400       zCCSCamera_EventMsgActivate::MD_GetNumOfSubTypes(void)
 0001:000C6410       zCCSCamera_EventMsgActivate::MD_GetSubTypeString(int)
 0001:000C6530       zCCSCamera_EventMsgActivate::MD_GetVobRefName(void)
 0001:000C6580       zCCSCamera_EventMsgActivate::MD_SetVobRefName(zSTRING const &)
 0001:000C66C0       zCCSCamera_EventMsgActivate::MD_SetVobParam(zCVob *)
 0001:000C66D0       zCCSCamera::SetDrawEnabled(int)
 0001:000C68D0       zCCSCamera_EventMsg::_CreateNewInstance(void)
 0001:000C6C00       zCCSCamera_EventMsgActivate::_CreateNewInstance(void)
 0001:000C6F10       zCCSCamera::_CreateNewInstance(void)
 0001:000C6F70       zCCSCamera::operator delete(void *)
 0001:000C7180       zCCamTrj_KeyFrame::_CreateNewInstance(void)
 0001:000C71E0       zCArray<zCEventMessage *>::~zCArray<zCEventMessage *>(void)
 0001:000C7200       zCArray<zCEventMessage *>::Remove(zCEventMessage * const &)
 0001:000C7250       zCArray<zCCamTrj_KeyFrame *>::~zCArray<zCCamTrj_KeyFrame *>(void)
 0001:000C7270       zCArray<zCCamTrj_KeyFrame *>::InsertEnd(zCCamTrj_KeyFrame * const &)
 0001:000C7340       zCArray<zCCamTrj_KeyFrame *>::InsertAtPos(zCCamTrj_KeyFrame * const &,int)
 0001:000C7430       zCArray<zCCamTrj_KeyFrame *>::RemoveOrder(zCCamTrj_KeyFrame * const &)
 0001:000C7480       zCArray<zCCamTrj_KeyFrame *>::IsInList(zCCamTrj_KeyFrame * const &)
 0001:000C74C0       zCArray<zCPositionKey *>::InsertEnd(zCPositionKey * const &)
 0001:000C7590       zCArray<zCEventMessage *>::AllocDelta(int)
 0001:000C75F0       zCArray<zCCamTrj_KeyFrame *>::AllocDelta(int)
 0001:000C7650       zCArray<zCCamTrj_KeyFrame *>::RemoveOrderIndex(int)
 0001:000C76B0       D_Reset(void)
 0001:000C76C0       D_Print(zVEC3 const &,zSTRING const &,TDebug)
 0001:000C76D0       D_Print(float const &,zSTRING const &,TDebug)
 0001:000C76E0       D_Print(zSTRING &,TDebug)
 0001:000C76F0       D_Print(char *,TDebug)
 0001:000C7700       D_Print(char *,int,int)
 0001:000C7710       D_PrintA(char *,int,int)
 0001:000C7720       D_Print3D(zVEC3 const &,zSTRING &,zCOLOR const &)
 0001:000C7730       D_DrawPolyWire(zCPolygon const &,zCOLOR const &)
 0001:000C7740       D_ClrWin(void)
 0001:000C7830       __CxxRestoreUnhandledExceptionFilter(void)
 0001:000C7840       zCExceptionHandler::zCExceptionHandler(void)
 0001:000C7850       zCExceptionHandler::~zCExceptionHandler(void)
 0001:000C7860       zCExceptionHandler::SetIsActive(int)
 0001:000C7890       zCExceptionHandler::GetIsActive(void)
 0001:000C78A0       zCExceptionHandler::SetLogFileName(char *)
 0001:000C78C0       zCExceptionHandler::UnhandledExceptionFilter(_EXCEPTION_POINTERS *)
 0001:000C7E40       zCExceptionHandler::AddUnhandledExceptionReleaseCallback(void (*)(void))
 0001:000C7F50       zCExceptionHandler::RemoveUnhandledExceptionReleaseCallback(void (*)(void))
 0001:000C7FB0       zCExceptionHandler::AddUnhandledExceptionInfoCallback(void (*)(EXCEPTION_DESCR *))
 0001:000C80C0       zCExceptionHandler::RemoveUnhandledExceptionInfoCallback(void (*)(EXCEPTION_DESCR *))
 0001:000C8120       zCExceptionHandler::WalkReleaseCallbacks(void)
 0001:000C8180       zCExceptionHandler::AssertExceptionFilter(_EXCEPTION_POINTERS *,ASSERT_FAIL_INFO *,EXCEPTION_INFO *)
 0001:000C86B0       zCExceptionHandler::BoundsExceptionFilter(_EXCEPTION_POINTERS *,ASSERT_FAIL_INFO *,EXCEPTION_INFO *)
 0001:000C8BD0       zCExceptionHandler::RecordModuleList(void *)
 0001:000C8EB0       zCFlash::zCFlash(void)
 0001:000C9040       zCVisual::_GetClassDef(void)
 0001:000C9050       zCVisual::GetOBBox3D(void)
 0001:000C9060       zCVisual::GetVisualDied(void)
 0001:000C9070       zCVisual::DynLightVisual(zCArray<zCVobLight *> const &,zMAT4 *)
 0001:000C9080       zCVisual::GetRenderSortKey(void)
 0001:000C9090       zCVisual::CanTraceRay(void)
 0001:000C90A0       zCVisual::HostVobRemovedFromWorld(zCVob *,zCWorld *)
 0001:000C90B0       zCVisual::HostVobAddedToWorld(zCVob *,zCWorld *)
 0001:000C90C0       zCVisual::GetFileExtension(int)
 0001:000C90D0       zCVisual::GetAlphaTestingEnabled(void)
 0001:000C90E0       zCVisual::SetAlphaTestingEnabled(int)
 0001:000C90F0       zCVisual::LoadVisualVirtual(zSTRING const &)
 0001:000C9100       zCPolyStrip::_GetClassDef(void)
 0001:000C9110       zCPolyStrip::GetVisualName(void)
 0001:000C91A0       zCFlash::IsBBox3DLocal(void)
 0001:000C91B0       zCFlash::GetBBox3D(void)
 0001:000C91E0       zCFlash::GetVisualName(void)
 0001:000C9270       zCFlash::DynLightVisual(zCArray<zCVobLight *> const &,zMAT4 *)
 0001:000C9280       zCFlash::zCBolt::`scalar deleting destructor'(uint)
 0001:000C92B0       zCFlash::zCBolt::~zCBolt(void)
 0001:000C9390       zCFlash::`scalar deleting destructor'(uint)
 0001:000C93C0       zCFlash::~zCFlash(void)
 0001:000C9480       zCFlash::GetVisualDied(void)
 0001:000C94A0       zCFlash::zCBolt::zCBolt(void)
 0001:000C94D0       zCFlash::Render(zTRenderContext &)
 0001:000C9690       zCFlash::SetVisualUsedBy(zCVob *)
 0001:000C96C0       zCFlash::SetProjectionSphere(zTBSphere3D const &)
 0001:000C9720       zCFlash::zCBolt::SetProjectionSphere(zTBSphere3D const &)
 0001:000C9780       zCFlash::Generate(zCFlash::zCBolt *,zVEC3 const &,zVEC3 const &,float)
 0001:000C9B80       zGetHighestBit(int)
 0001:000C9BA0       zCFlash::zCBolt::Generate_R(zVEC3 const &,zVEC3 const &,float,int)
 0001:000CA290       zCFlash::zCBolt::FreeResources(void)
 0001:000CA320       zCFlash::zCBolt::Render(zTRenderContext &)
 0001:000CA370       zCFlash::SetTexture(zSTRING const &)
 0001:000CA4D0       zCFlash::zCBolt::SetTexture(zSTRING const &)
 0001:000CA5C0       zCFlash::zCBolt::InterpolateTo(zCFlash::zCBolt *,float)
 0001:000CA690       zCFlash::zCBolt::Copy(zCFlash::zCBolt *)
 0001:000CA6E0       zCFlash::Update(float)
 0001:000CA890       zCFlash::Create(zVEC3,zVEC3,float)
 0001:000CAA40       zCArray<zCFlash::zCBolt *>::~zCArray<zCFlash::zCBolt *>(void)
 0001:000CAA60       zCArray<zCFlash::zCBolt *>::AllocDelta(int)
 0001:000CAB60       zCInput::zCInput(void)
 0001:000CABC0       zCInput::GetState(ushort)
 0001:000CABD0       zCInput::SetState(ushort,int)
 0001:000CABE0       zCInput::GetToggled(ushort)
 0001:000CABF0       zCInput::SetDeviceEnabled(zTInputDevice,int)
 0001:000CAC00       zCInput::GetDeviceEnabled(zTInputDevice)
 0001:000CAC10       zCInput::GetDeviceConnected(zTInputDevice)
 0001:000CAC20       zCInput::KeyPressed(int)
 0001:000CAC30       zCInput::KeyToggled(int)
 0001:000CAC40       zCInput::AnyKeyPressed(void)
 0001:000CAC50       zCInput::ResetRepeatKey(int)
 0001:000CAC60       zCInput::GetKey(int,int)
 0001:000CAC70       zCInput::SetKey(int,int)
 0001:000CAC80       zCInput::GetChar(void)
 0001:000CAC90       zCInput::ClearKeyBuffer(void)
 0001:000CACA0       zCInput::GetNumJoysConnected(void)
 0001:000CACB0       zCInput::SetJoyDigitalEmu(int)
 0001:000CACC0       zCInput::SetJoyEnabled(int)
 0001:000CACD0       zCInput::JoyState(int)
 0001:000CACE0       zCInput::JoyState(int,int)
 0001:000CACF0       zCInput::GetMousePos(float &,float &,float &)
 0001:000CAD00       zCInput::GetMouseButtonPressedLeft(void)
 0001:000CAD10       zCInput::GetMouseButtonPressedMid(void)
 0001:000CAD20       zCInput::GetMouseButtonPressedRight(void)
 0001:000CAD30       zCInput::SetMouseSensitivity(float,float)
 0001:000CAD40       zCInput::GetMouseSensitivity(float &,float &)
 0001:000CAD50       zCInput::GetMouseIdle(void)
 0001:000CAD60       zCInput::SetMouseFlipXY(int,int)
 0001:000CAD70       zCInput::GetMouseFlipXY(int &,int &)
 0001:000CAD80       zCInput::`scalar deleting destructor'(uint)
 0001:000CADA0       zCInput::~zCInput(void)
 0001:000CAE40       zCInput::CompareKeyMaps(void const *,void const *)
 0001:000CAE60       zCInput::Bind(ushort,zCArray<ushort> const &)
 0001:000CB020       zCInput::BindOption(zSTRING,ushort,zCArray<ushort>)
 0001:000CB220       zSKeyMapping::`scalar deleting destructor'(uint)
 0001:000CB240       zSKeyMapping::~zSKeyMapping(void)
 0001:000CB260       zCInput::Unbind(ushort)
 0001:000CB370       zCInput::IsBinded(ushort,ushort)
 0001:000CB470       zCInput::IsBindedToggled(ushort,ushort)
 0001:000CB4B0       zCInput::GetBinding(ushort,zCArray<ushort> &)
 0001:000CB5D0       zCInput::GetFirstBindedLogicalKey(ushort)
 0001:000CB640       zCInput::InitializeControlValues(void)
 0001:000CEAF0       zSTRING::operator=(char const *)
 0001:000CEBB0       zSCtrlValue::~zSCtrlValue(void)
 0001:000CEC00       _GetDefaultBinding(short,zSTRING,zCArray<ushort> &)
 0001:000CEE00       zCInput::BindKeys(int)
 0001:000D05D0       zCInput::GetControlValueByName(zSTRING const &)
 0001:000D0680       zCInput::GetNameByControlValue(ushort)
 0001:000D0760       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(char const *)
 0001:000D0810       zCArray<ushort>::zCArray<ushort>(void)
 0001:000D0820       zCArray<ushort>::operator=(zCArray<ushort> const &)
 0001:000D08C0       zCArraySort<zSKeyMapping *>::~zCArraySort<zSKeyMapping *>(void)
 0001:000D08E0       zCArraySort<zSKeyMapping *>::InsertSort(zSKeyMapping * const &)
 0001:000D0A30       zCArraySort<zSKeyMapping *>::Search(zSKeyMapping * const &)
 0001:000D0AA0       zCArray<zSCtrlValue>::Insert(zSCtrlValue const &)
 0001:000D0C40       zSCtrlValue::`vector deleting destructor'(uint)
 0001:000D0CA0       zCArraySort<zSKeyMapping *>::AllocDelta(int)
 0001:000D0D00       zCArray<zSCtrlValue>::InsertEnd(zSCtrlValue const &)
 0001:000D0EA0       zCArray<zSCtrlValue>::AllocDelta(int)
 0001:000D10A0       zSCtrlValue::zSCtrlValue(void)
 0001:000D1130       GetCharFromDIK(int,int,int)
 0001:000D22E0       _EnumJoysticksCallback(DIDEVICEINSTANCEA const *,void *)
 0001:000D2310       _EnumJoystickObjectsCallback(DIDEVICEOBJECTINSTANCEA const *,void *)
 0001:000D2380       InitDInput(HWND__ *,HINSTANCE__ *)
 0001:000D2A90       UpdateDInput(void)
 0001:000D2D30       SetAcquireMouse(void)
 0001:000D2D60       SetAcquireJoystick(void)
 0001:000D3290       nullsub_17
 0001:000D3960       ReleaseDInput(void)
 0001:000D3A00       zCInput_Win32::SetFocusWindow(HWND__ *)
 0001:000D3A10       zCInput_Win32::zCInput_Win32(HWND__ * *)
 0001:000D3CA0       zCInput_Win32::GetMouseIdle(void)
 0001:000D3CB0       zCInput_Win32::`scalar deleting destructor'(uint)
 0001:000D3CD0       zCInput_Win32::~zCInput_Win32(void)
 0001:000D3D30       zCInput_Win32::GetState(ushort)
 0001:000D3E00       zCInput_Win32::SetState(ushort,int)
 0001:000D4020       zCInput_Win32::GetToggled(ushort)
 0001:000D4100       zCInput_Win32::SetDeviceEnabled(zTInputDevice,int)
 0001:000D4160       zCInput_Win32::GetDeviceEnabled(zTInputDevice)
 0001:000D4190       zCInput_Win32::GetDeviceConnected(zTInputDevice)
 0001:000D41C0       zCInput_Win32::KeyPressed(int)
 0001:000D41D0       zCInput_Win32::KeyToggled(int)
 0001:000D41F0       zCInput_Win32::AnyKeyPressed(void)
 0001:000D4300       zCInput_Win32::SetAutoRepeatDelayRate(float,float)
 0001:000D4320       zCInput_Win32::GetAutoRepeatDelayRate(void)
 0001:000D4330       zCInput_Win32::ResetRepeatKey(int)
 0001:000D4370       zCInput_Win32::GetKey(int,int)
 0001:000D44D0       zCInput_Win32::SetKey(int,int)
 0001:000D4510       zCInput_Win32::GetChar(void)
 0001:000D45D0       zCInput_Win32::ClearKeyBuffer(void)
 0001:000D4700       zCInput_Win32::ProcessInputEvents(void)
 0001:000D4730       zCInput_Win32::GetMousePos(float &,float &,float &)
 0001:000D4790       zCInput_Win32::GetMouseButtonPressedLeft(void)
 0001:000D47A0       zCInput_Win32::GetMouseButtonPressedMid(void)
 0001:000D47B0       zCInput_Win32::GetMouseButtonPressedRight(void)
 0001:000D47C0       zCInput_Win32::SetMouseSensitivity(float,float)
 0001:000D4810       zCInput_Win32::GetMouseSensitivity(float &,float &)
 0001:000D4830       zCInput_Win32::SetMouseFlipXY(int,int)
 0001:000D4850       zCInput_Win32::GetMouseFlipXY(int &,int &)
 0001:000D4870       zCArray<int>::GetSafe(int)
 0001:000D4A30       zCArray<int>::InsertEnd(int const &)
 0001:000D4B30       zCKBSpline::Initialize(zCArray<zCPositionKey *> &,int)
 0001:000D51D0       zCCubicPolynomial::zCCubicPolynomial(void)
 0001:000D51E0       zCCubicPolynomial::~zCCubicPolynomial(void)
 0001:000D51F0       zCCubicPolynomial::`vector deleting destructor'(uint)
 0001:000D5240       zCKBSpline::Changed(void)
 0001:000D5290       zCKBSpline::Terminate(void)
 0001:000D5310       zCCubicPolynomial::Interpolate1(float,zVEC3 &)
 0001:000D53F0       zCKBSpline::ComputeIAndU(float,int &,float &)
 0001:000D54A0       zCKBSpline::Interpolate0(float,zVEC3 &)
 0001:000D55C0       zCKBSpline::Interpolate0(float,zMAT4 &,zTSplLerpMode)
 0001:000D5970       zCKBSpline::Interpolate1(float,zMAT4 &,zTSplLerpMode)
 0001:000D5C30       zCKBSpline::Interpolate1(float,zVEC3 &)
 0001:000D5D30       zCKBSpline::Interpolate2(float,zVEC3 &)
 0001:000D5E10       zCCubicPolynomial::Speed(float)
 0001:000D5F30       zCCubicPolynomial::Length(float)
 0001:000D60C0       zCKBSpline::ComputeArcLength(void)
 0001:000D6290       zCKBSpline::InvertIntegral(float,int &,float &)
 0001:000D6630       zCKBSpline::Interpolate0_AL(float,zVEC3 &)
 0001:000D6740       zCKBSpline::Interpolate0_AL(float,zMAT4 &,zTSplLerpMode)
 0001:000D6A70       zCKBSpline::Interpolate1_AL(float,zMAT4 &,zTSplLerpMode)
 0001:000D6D60       zCKBSpline::Interpolate1_AL(float,zVEC3 &)
 0001:000D6E60       zCKBSpline::Interpolate2_AL(float,zVEC3 &)
 0001:000D6F40       zCKBSpline::Length(float)
 0001:000D70D0       zCKBSpline::DrawControlPolygon(zCOLOR)
 0001:000D7380       zCKBSpline::Draw(zCOLOR,float)
 0001:000D7970       zCCubicPolynomial::Interpolate0(float,zVEC3 &)
 0001:000D7A50       zCKBSpline::GetTime(float)
 0001:000D7A90       zCArray<zCPositionKey *>::AllocAbs(int)
 0001:000D7AF0       zCArray<zCPositionKey *>::InsertAtPos(zCPositionKey * const &,int)
 0001:000D7C10       nullsub_32
 0001:000D7C20       GetPoseOfHeading(zVEC3 const &,zVEC3 const &)
 0001:000D80D0       nullsub_1
 0001:000D80E0       zCPose::SetInertiaRot(float)
 0001:000D8160       zCPose::SetInertiaPos(float)
 0001:000D81D0       zCPose::SetInertiaSamplesRot(int)
 0001:000D8240       zCPose::SetInertiaSamplesPos(int)
 0001:000D82A0       zCPose::CalcAvgRot(void)
 0001:000D84B0       zCPose::UpdatePose(zMAT4 &)
 0001:000D8660       zCPose::UpdatePose(zCQuat &,zVEC3 &)
 0001:000D8800       zCPose::UpdateRot(zMAT4 &)
 0001:000D8880       zCPose::UpdateRot(zCQuat &)
 0001:000D8900       zCPose::UpdatePos(zVEC3 &)
 0001:000D8A30       zCPose::zCPose(void)
 0001:000D8AA0       zCPose::SetRot(zMAT4 &)
 0001:000D8B20       zCPose::SetRot(zCQuat &)
 0001:000D8B90       zCPose::SetPos(zMAT4 &)
 0001:000D8C30       zCPose::SetPos(zVEC3 &)
 0001:000D8C90       zCPose::GetPose(zMAT4 &)
 0001:000D8CD0       zCPose::GetPose(void)
 0001:000D8D20       zCPose::GetPoseAbs(zMAT4 &)
 0001:000D8D60       zCPose::GetRotMatAbs(void)
 0001:000D8D90       zCPose::GetRotMat(void)
 0001:000D8EA0       zCMenu::CompareNames(void const *,void const *)
 0001:000D8F10       zCMenu::CreateParser(void)
 0001:000D8F90       zCMenu::Startup(void)
 0001:000D9380       zCMenu::Shutdown(void)
 0001:000D9470       zCMenu::zCMenu(void)
 0001:000D95F0       zCMenu::`scalar deleting destructor'(uint)
 0001:000D9610       zCMenu::zCMenu(zSTRING const &)
 0001:000D9750       zCMenu::~zCMenu(void)
 0001:000D9950       zCMenu::InitValues(void)
 0001:000D9B80       zCMenu::Release(void)
 0001:000D9BB0       zCMenu::DefineExternal(zSTRING &,int (*)(void),int,int,...)
 0001:000D9BE0       zCMenu::Create(zSTRING const &)
 0001:000D9E00       zCMenu::Register(void)
 0001:000DA020       zCMenu::Unregister(void)
 0001:000DA0C0       zCMenu::IsRegistered(void)
 0001:000DA130       zCMenu::GetParser(void)
 0001:000DA140       zCMenu::GetByName(zSTRING const &)
 0001:000DA320       zCMenu::SetByScript(zSTRING const &)
 0001:000DA5A0       zCMenu::ClearAllEvents(void)
 0001:000DA5C0       zCMenu::PreviousOption(void)
 0001:000DA690       zCMenu::NextOption(void)
 0001:000DA760       zCMenu::RestartMusicTheme(void)
 0001:000DA780       zCMenu::Enter(void)
 0001:000DA910       zCMenu::Leave(void)
 0001:000DA9A0       zCMenu::Run(void)
 0001:000DAB70       zCMenu::HandleEvent(int)
 0001:000DAFD0       zCMenu::Activate(void)
 0001:000DB070       zCMenu::UpdateWindowGeometry(void)
 0001:000DB1C0       zCMenu::HandleFrame(int)
 0001:000DB250       zCMenu::HandleAction(void)
 0001:000DB430       zCMenu::HandleSelAction(zTMenuItemSelAction,zSTRING const &,zCMenuItem *)
 0001:000DBAC0       zCMenu::ExecCommand(zSTRING const &)
 0001:000DBCD0       zCMenu::RedrawItems(void)
 0001:000DBD00       zCMenu::PrintInformation(zSTRING)
 0001:000DBDE0       zCMenu::ScreenInit(void)
 0001:000DC9E0       zCMenu::ScreenDone(void)
 0001:000DCC20       zCMenu::Render(void)
 0001:000DCD10       zCMenu::GetBackWorld(void)
 0001:000DCD50       zCMenu::GetBackDatFile(void)
 0001:000DCD60       zCMenu::GetActive(void)
 0001:000DCD80       zCMenu::GetActiveItem(void)
 0001:000DCD90       zCMenu::GetNumberOfActiveItem(void)
 0001:000DCE00       zCMenu::SetActiveItem(zCMenuItem *)
 0001:000DCF60       zCMenu::GetName(void)
 0001:000DCF70       zCMenu::SetName(zSTRING const &)
 0001:000DD0D0       zCMenu::HandleEnterItem(zCMenuItem *)
 0001:000DD0E0       zCMenu::HandleLeaveItem(zCMenuItem *)
 0001:000DD0F0       zCMenu::HandleActivateItem(zCMenuItem *)
 0001:000DD100       zCArraySort<zCMenu *>::InsertSort(zCMenu * const &)
 0001:000DD250       zCArraySort<zCMenu *>::Search(zCMenu * const &)
 0001:000DD2C0       zCArray<zCMenuItem *>::~zCArray<zCMenuItem *>(void)
 0001:000DD2E0       zCArraySort<zCMenu *>::RemoveOrderIndex(int)
 0001:000DD310       zCArray<zCMenuItem *>::AllocDelta(int)
 0001:000DD400       zCMenuItem::CompareNames(void const *,void const *)
 0001:000DD470       zCMenuItem::Startup(void)
 0001:000DD4E0       zCMenuItem::Shutdown(void)
 0001:000DD5F0       zCMenuItem::GetByName(zSTRING const &)
 0001:000DD780       zCMenuItem::GetSelItem(void)
 0001:000DD7C0       zCMenuItem::Create(zSTRING const &)
 0001:000DDD80       zCMenuItem::SetMinValue(float)
 0001:000DDD90       zCMenuItem::SetMaxValue(float)
 0001:000DDDA0       zCMenuItem::HasBeenCanceled(void)
 0001:000DDDB0       zCMenuItemInput::Enter(void)
 0001:000DDDC0       zCMenuItemInput::Leave(void)
 0001:000DDDD0       zCMenuItemInput::HandleEvent(int)
 0001:000DDDE0       zCMenuItemInput::HasBeenCanceled(void)
 0001:000DDDF0       zCMenuItemSlider::SetIsActive(int)
 0001:000DDE10       zCMenuItemSlider::HandleEvent(int)
 0001:000DDE20       zCMenuItem::zCMenuItem(zSTRING const &)
 0001:000DE010       zCMenuItem::`scalar deleting destructor'(uint)
 0001:000DE030       zCMenuItem::zCMenuItem(void)
 0001:000DE1E0       zCMenuItem::~zCMenuItem(void)
 0001:000DE410       zCMenuItem::Init(void)
 0001:000DE790       zCMenuItem::SetByScript(zSTRING &)
 0001:000DEA90       zCMenuItem::InsertInWin(zCView *)
 0001:000DF030       zCMenuItem::RemoveFromWin(void)
 0001:000DF090       zCMenuItem::GetDimX(int)
 0001:000DF190       zCMenuItem::GetDimY(int)
 0001:000DF1F0       zCMenuItem::InitMenuItem(void)
 0001:000DF280       zCMenuItem::InitView(void)
 0001:000DF360       zCMenuItem::Show(void)
 0001:000DF3A0       zCMenuItem::Hide(void)
 0001:000DF3E0       zCMenuItem::Open(void)
 0001:000DF410       zCMenuItem::Close(void)
 0001:000DF430       zCMenuItem::ToggleValue(int,int)
 0001:000DF460       zCMenuItem::GetType(void)
 0001:000DF470       zCMenuItem::GetText(int)
 0001:000DF540       zCMenuItem::SetName(zSTRING const &)
 0001:000DF680       zCMenuItem::GetName(void)
 0001:000DF690       zCMenuItem::GetCoords(int &,int &,int &,int &)
 0001:000DF6A0       zCMenuItem::GetSelActionType(int)
 0001:000DF6B0       zCMenuItem::GetSelActionString(int)
 0001:000DF6D0       zCMenuItem::SetName(zSTRING &)
 0001:000DF830       zCMenuItem::Register(void)
 0001:000DF9E0       zCMenuItem::Unregister(void)
 0001:000DFB10       zCMenuItem::IsRegistered(void)
 0001:000DFBB0       zCMenuItem::SetText(zSTRING const &,int,int)
 0001:000E0200       zCMenuItem::UpdateSize(void)
 0001:000E02D0       zCMenuItem::SetText(zCArray<zSTRING>,int)
 0001:000E0490       zCMenuItem::Enter(void)
 0001:000E04A0       zCMenuItem::Leave(void)
 0001:000E04B0       zCMenuItem::HandleEvent(int)
 0001:000E04F0       zCMenuItem::Run(void)
 0001:000E0550       zCMenuItem::Input(int,zSTRING &)
 0001:000E08C0       zCMenuItem::Draw(void)
 0001:000E08E0       zCMenuItem::DrawFront(void)
 0001:000E0A20       zCMenuItem::DrawItems(void)
 0001:000E0A50       zCMenuItem::UpdateContent(void)
 0001:000E0A60       zCMenuItem::UpdateFX(void)
 0001:000E0BF0       zCMenuItem::GetEventFunc(zTMenuItemEvent)
 0001:000E0C00       zCMenuItem::SetIsActive(int)
 0001:000E0D10       zCMenuItem::SetIsSelectable(int)
 0001:000E0D60       zCMenuItem::GetIsSelectable(void)
 0001:000E0DE0       zCMenuItem::SetIsDisabled(int)
 0001:000E0DF0       zCMenuItem::GetIsDisabled(void)
 0001:000E0E30       zCMenuItem::SetIsVisible(int)
 0001:000E0E40       zCMenuItem::GetIsVisible(void)
 0001:000E0E80       zCMenuItemInput::zCMenuItemInput(zSTRING const &)
 0001:000E1010       zCMenuItemInput::`scalar deleting destructor'(uint)
 0001:000E1030       zCMenuItemInput::~zCMenuItemInput(void)
 0001:000E10E0       zCMenuItemInput::SetValue(zSTRING)
 0001:000E1160       zCMenuItemInput::GetValue(void)
 0001:000E1180       zCMenuItemInput::InitMenuItem(void)
 0001:000E1330       zCMenuItemInput::InsertInWin(zCView *)
 0001:000E1360       zCMenuItemInput::Run(void)
 0001:000E16D0       zCMenuItemText::zCMenuItemText(zSTRING const &)
 0001:000E1780       zCMenuItemText::`scalar deleting destructor'(uint)
 0001:000E17A0       zCMenuItemText::~zCMenuItemText(void)
 0001:000E1810       zCMenuItemText::DrawFront(void)
 0001:000E1860       zCMenuItemText::FormatMultiline(void)
 0001:000E1BE0       zCMenuItemText::DrawMultiline(void)
 0001:000E2000       zCMenuItemText::InitMenuItem(void)
 0001:000E21C0       zCMenuItemText::SetEnum(zSTRING const &)
 0001:000E2340       zCMenuItemText::HandleEvent(int)
 0001:000E24F0       zCMenuItemText::SetText(zSTRING const &,int,int)
 0001:000E27B0       zCMenuItemText::SetText(zCArray<zSTRING>,int)
 0001:000E2810       zCMenuItemSlider::zCMenuItemSlider(zSTRING const &)
 0001:000E2890       zCMenuItemSlider::`scalar deleting destructor'(uint)
 0001:000E28B0       zCMenuItemSlider::~zCMenuItemSlider(void)
 0001:000E28D0       zCMenuItemSlider::ToggleValue(int,int)
 0001:000E2C50       zCMenuItemSlider::InitMenuItem(void)
 0001:000E2D10       zCMenuItemSlider::InsertInWin(zCView *)
 0001:000E2EE0       zCMenuItemSlider::RemoveFromWin(void)
 0001:000E2F70       zCMenuItemSlider::SetValue(float)
 0001:000E2FF0       zCMenuItemSlider::GetValue(void)
 0001:000E3000       zCMenuItemChoice::zCMenuItemChoice(zSTRING const &)
 0001:000E3040       zCMenuItemChoice::`scalar deleting destructor'(uint)
 0001:000E3060       zCMenuItemChoice::~zCMenuItemChoice(void)
 0001:000E3080       zCMenuItemChoice::ToggleValue(int,int)
 0001:000E3310       zCMenuItemChoice::SetOptionByString(zSTRING)
 0001:000E3750       zCMenuItemChoice::GetStringByOption(void)
 0001:000E38E0       zCMenuItemChoice::InsertInWin(zCView *)
 0001:000E3AA0       zCMenuItemChoice::RemoveFromWin(void)
 0001:000E3B30       zCMenuItemChoice::Resize(void)
 0001:000E3C00       zCMenuItemChoice::Draw(void)
 0001:000E3C20       zCMenuItemChoice::DrawFront(void)
 0001:000E3E50       zCMenuItemChoice::GetNumOptions(void)
 0001:000E4030       zCMenuItemChoice::GetText(int)
 0001:000E41B0       zCMenuItemChoice::InitMenuItem(void)
 0001:000E42D0       zCMenuItemButton::zCMenuItemButton(zSTRING const &)
 0001:000E4460       zCMenuItemButton::`scalar deleting destructor'(uint)
 0001:000E4480       zCMenuItemButton::~zCMenuItemButton(void)
 0001:000E4530       zCMenuItemButton::InitMenuItem(void)
 0001:000E4700       zCMenuItemButton::Toggle(void)
 0001:000E4900       zCMenuItemButton::Run(void)
 0001:000E4B70       zCMenuItemButton::InsertInWin(zCView *)
 0001:000E4BB0       zCMenuItemButton::RemoveFromWin(void)
 0001:000E4C70       zCMenuItemList::zCMenuItemList(zSTRING const &)
 0001:000E4CD0       zCMenuItemList::`scalar deleting destructor'(uint)
 0001:000E4CF0       zCMenuItemList::~zCMenuItemList(void)
 0001:000E4D90       zCMenuItemList::Run(void)
 0001:000E4E20       zCMenuItemList::InitMenuItem(void)
 0001:000E4E30       zCMenuItemList::Show(void)
 0001:000E4E80       zCMenuItemList::Hide(void)
 0001:000E4EC0       zCMenuItemList::DeleteContent(void)
 0001:000E4F10       zCMenuItemList::InsertEnd(zTMenuItemListElement &)
 0001:000E5120       zCMenuItemList::InsertFront(zTMenuItemListElement &)
 0001:000E5310       zCMenuItemList::InsertInWin(zCView *)
 0001:000E5470       zCMenuItemList::RemoveFromWin(void)
 0001:000E5520       zCMenuItemList::Enter(void)
 0001:000E5530       zCMenuItemList::Leave(void)
 0001:000E5540       zCMenuItemList::UpdateContent(void)
 0001:000E5550       zCMenuItemList::DrawFront(void)
 0001:000E5860       zCMenuItemList::HandleEvent(int)
 0001:000E5AB0       zCMenuItemList::ShowContent(void)
 0001:000E5C60       zCMenuItemList::JumpToNextEntry(void)
 0001:000E5C80       zCMenuItemList::JumpToPrevEntry(void)
 0001:000E5CA0       zCMenuItemList::JumpToTopEntry(void)
 0001:000E5CC0       zCMenuItemList::JumpToLastEntry(void)
 0001:000E5CE0       zCArraySort<zCMenuItem *>::InsertSort(zCMenuItem * const &)
 0001:000E5E30       zCArraySort<zCMenuItem *>::Search(zCMenuItem * const &)
 0001:000E5EA0       zCArray<zTMenuItemListElement>::zCArray<zTMenuItemListElement>(void)
 0001:000E5EB0       zTMenuItemListElement::`vector deleting destructor'(uint)
 0001:000E5F10       zCArraySort<zCMenuItem *>::AllocDelta(int)
 0001:000E5F70       zCArraySort<zCMenuItem *>::RemoveOrderIndex(int)
 0001:000E5FA0       zCArray<zTMenuItemListElement>::AllocDelta(int)
 0001:000E61C0       zTMenuItemListElement::zTMenuItemListElement(void)
 0001:000E6230       zCMusicSystem::DisableMusicSystem(int)
 0001:000E62B0       zCMusicTheme_DM::~zCMusicTheme_DM(void)
 0001:000E6370       zCMusicTheme::~zCMusicTheme(void)
 0001:000E63F0       zCMusicTheme::IsActive(void)
 0001:000E6400       zCMusicTheme::`scalar deleting destructor'(uint)
 0001:000E6420       zCMusicTheme_DM::IsActive(void)
 0001:000E6430       zCMusicTheme_DM::`scalar deleting destructor'(uint)
 0001:000E6450       zCMusicSys_DirectMusic::zCMusicSys_DirectMusic(void)
 0001:000E6E40       zCMusicTheme::zCMusicTheme(void)
 0001:000E6E80       zCMusicJingle::zCMusicJingle(void)
 0001:000E6ED0       zCMusicJingle::~zCMusicJingle(void)
 0001:000E6F50       zCMusicJingle::AddRef(void)
 0001:000E6F60       zCMusicJingle::Release(void)
 0001:000E6F70       zCMusicJingle::IsPlaying(void)
 0001:000E6F80       zCMusicJingle::StopPlaying(void)
 0001:000E6F90       zCMusicJingle::CacheIn(void)
 0001:000E6FA0       zCMusicJingle::CacheOut(void)
 0001:000E6FB0       zCMusicJingle::`scalar deleting destructor'(uint)
 0001:000E6FD0       zCMusicSystem::~zCMusicSystem(void)
 0001:000E6FE0       zCMusicSystem::PlayThemeByScript(zSTRING const &,int,int *)
 0001:000E6FF0       zCMusicSystem::LoadThemeByScript(zSTRING const &)
 0001:000E7000       zCMusicSystem::LoadTheme(zSTRING const &)
 0001:000E7010       zCMusicSystem::PlayTheme(zCMusicTheme *,float const &,zTMus_TransType const &,zTMus_TransSubType const &)
 0001:000E7020       zCMusicSystem::GetActiveTheme(void)
 0001:000E7030       zCMusicSystem::PlayJingleByScript(zSTRING const &)
 0001:000E7040       zCMusicSystem::StopJingleByScript(zSTRING const &)
 0001:000E7050       zCMusicSystem::LoadJingleByScript(zSTRING const &)
 0001:000E7060       zCMusicSystem::LoadJingle(zSTRING const &)
 0001:000E7070       zCMusicSystem::PlayJingle(zCMusicJingle const *,float const &,zTMus_TransSubType const &)
 0001:000E7080       zCMusicSystem::StopJingle(int const &)
 0001:000E7090       zCMusicSystem::IsJingleActive(int const &)
 0001:000E70A0       zCMusicSystem::AddEventCallBackFunc(zTMus_EventType const &,void (*)(zTMus_EventType const &))
 0001:000E70B0       zCMusicSystem::RemoveEventCallBackFunc(void (*)(zTMus_EventType const &))
 0001:000E70C0       zCMusicSystem::Mute(void)
 0001:000E70D0       zCMusicSystem::Stop(void)
 0001:000E70E0       zCMusicSystem::SetVolume(float)
 0001:000E70F0       zCMusicSystem::GetVolume(void)
 0001:000E7100       zCMusicSystem::IsAvailable(zSTRING const &)
 0001:000E7110       zCMusicSystem::`scalar deleting destructor'(uint)
 0001:000E7130       zCMusicSys_DirectMusic::GetActiveTheme(void)
 0001:000E7140       zCMusicSys_DirectMusic::StopJingle(int const &)
 0001:000E7150       zCMusicSys_DirectMusic::IsJingleActive(int const &)
 0001:000E7160       zCMusicSys_DirectMusic::GetVolume(void)
 0001:000E79D0       zCMusicSys_DirectMusic::`scalar deleting destructor'(uint)
 0001:000E79F0       zCMusicSys_DirectMusic::~zCMusicSys_DirectMusic(void)
 0001:000E7AB0       zCMusicSys_DirectMusic::PlayThemeByScript(zSTRING const &,int,int *)
 0001:000E7C70       zCMusicSys_DirectMusic::LoadTheme(zSTRING const &)
 0001:000E7C80       zCMusicSys_DirectMusic::LoadThemeByScript(zSTRING const &)
 0001:000E8800       zPATH::GetDirectoryPath(void)
 0001:000E8820       zCMusicSys_DirectMusic::PlayTheme(zCMusicTheme *,float const &,zTMus_TransType const &,zTMus_TransSubType const &)
 0001:000E8A90       zCMusicSys_DirectMusic::PlayJingleByScript(zSTRING const &)
 0001:000E8BC0       zCMusicSys_DirectMusic::StopJingleByScript(zSTRING const &)
 0001:000E8BD0       zCMusicSys_DirectMusic::LoadJingleByScript(zSTRING const &)
 0001:000E8D80       zCMusicSys_DirectMusic::LoadJingle(zSTRING const &)
 0001:000E8D90       zCMusicSys_DirectMusic::PlayJingle(zCMusicJingle const *,float const &,zTMus_TransSubType const &)
 0001:000E8F10       zCMusicSys_DirectMusic::DoMusicUpdate(void)
 0001:000E8F20       zCMusicSys_DirectMusic::Stop(void)
 0001:000E8F40       zCMusicSys_DirectMusic::Mute(void)
 0001:000E8FD0       zCMusicSys_DirectMusic::SetVolume(float)
 0001:000E9010       zCMusicSys_DirectMusic::IsAvailable(zSTRING const &)
 0001:000E9080       zCDrvProperties_MSS::zCDrvProperties_MSS(void)
 0001:000E9110       zCDrvProperties_MSS::~zCDrvProperties_MSS(void)
 0001:000E99D0       zCHandleManager::~zCHandleManager(void)
 0001:000E9A30       zCHandleManager::zCHandleManager(void)
 0001:000E9A50       nullsub_33
 0001:000E9AA0       zCSndDebugCallback::DoWorldPerFrameCallback(zCWorld *,zCCamera *)
 0001:000E9AF0       zCSndSys_MSS::zCSndSys_MSS(void)
 0001:000EA350       zCSoundSystem::~zCSoundSystem(void)
 0001:000EA360       zCSoundSystem::LoadSoundFX(zSTRING const &)
 0001:000EA370       zCSoundSystem::LoadSoundFXScript(zSTRING const &)
 0001:000EA380       zCSoundSystem::GetSFXParser(void)
 0001:000EA390       zCSoundSystem::GetPlayingTimeMSEC(zSTRING const &)
 0001:000EA3A0       zCSoundSystem::SetSound3DDefaultRadius(float)
 0001:000EA3B0       zCSoundSystem::GetSound3DDefaultRadius(void)
 0001:000EA3C0       zCSoundSystem::SetMasterVolume(float)
 0001:000EA3D0       zCSoundSystem::GetMasterVolume(void)
 0001:000EA3E0       zCSoundSystem::StopSound(int const &)
 0001:000EA3F0       zCSoundSystem::StopAllSounds(void)
 0001:000EA400       zCSoundSystem::GetSoundProps(int const &,int &,float &,float &)
 0001:000EA410       zCSoundSystem::UpdateSoundProps(int const &,int,float,float)
 0001:000EA420       zCSoundSystem::IsSoundActive(int const &)
 0001:000EA430       zCSoundSystem::SetListener(zCVob *)
 0001:000EA440       zCSoundSystem::SetGlobalReverbPreset(int,float)
 0001:000EA450       zCSoundSystem::SetReverbEnabled(int)
 0001:000EA460       zCSoundSystem::GetReverbEnabled(void)
 0001:000EA470       zCSoundSystem::GetNumProvider(void)
 0001:000EA480       zCSoundSystem::GetProviderName(int)
 0001:000EA490       zCSoundSystem::SetProvider(int)
 0001:000EA4A0       zCSoundSystem::SetSpeakerType(zCSoundSystem::zTSpeakerType)
 0001:000EA4B0       zCSoundSystem::GetSpeakerType(void)
 0001:000EA4C0       zCSoundSystem::GetCPULoad(void)
 0001:000EA4D0       zCSoundSystem::`scalar deleting destructor'(uint)
 0001:000EA4F0       zCSndSys_MSS::GetReverbEnabled(void)
 0001:000EA500       zCSndSys_MSS::GetSpeakerType(void)
 0001:000EA550       zCSndSys_MSS::`scalar deleting destructor'(uint)
 0001:000EA570       zCSndSys_MSS::~zCSndSys_MSS(void)
 0001:000EA830       zCSndSys_MSS::InitializeMSS(void)
 0001:000EB700       zCSndSys_MSS::GetDigitalDriverHandle(void)
 0001:000EB710       zCSndSys_MSS::EvalFunc(zSTRING const &,zSTRING &)
 0001:000EC2C0       zCSndSys_MSS::FrmCon_ParamChanged(zSTRING const &)
 0001:000EC5F0       zCSndSys_MSS::SfxCon_ParamChanged(zSTRING const &)
 0001:000EC600       zCSndSys_MSS::CloseProvider(void)
 0001:000EC710       zCSndSys_MSS::SetNumAudioChannels(int)
 0001:000EC730       zCSndSys_MSS::GetMasterVolume(void)
 0001:000EC770       zCSndSys_MSS::GetNumSoundsPlaying(void)
 0001:000EC7A0       zCSndSys_MSS::RemoveAllActiveSounds(void)
 0001:000EC7E0       zCSndSys_MSS::DisposeAllSampleHandles(void)
 0001:000EC880       zCSndSys_MSS::SetListener(zCVob *)
 0001:000EC8E0       zCSndSys_MSS::SetMasterVolume(float)
 0001:000EC930       zCSndSys_MSS::MuteSFX(void)
 0001:000EC960       zCSndSys_MSS::LoadSoundFX(zSTRING const &)
 0001:000ECF20       zCSoundFX::operator delete(void *)
 0001:000ECF40       zCSoundFX::_GetClassDef(void)
 0001:000ECF50       zCSoundFX::zCSoundFX(void)
 0001:000ECF70       zCSoundFX::~zCSoundFX(void)
 0001:000ECF80       zCSoundFX::GetNumChannels(void)
 0001:000ECF90       zCSoundFX::GetNumChannelFrames(int)
 0001:000ECFA0       zCSoundFX::GetChannelFrame(int,int)
 0001:000ECFB0       zCSoundFX::SetChannelFrame(int,int)
 0001:000ECFC0       zCSoundFX::GetPlayingTimeMSEC(void)
 0001:000ECFD0       zCSoundFX::GetPan(void)
 0001:000ECFE0       zCSoundFX::SetPan(float)
 0001:000ECFF0       zCSoundFX::GetVolume(void)
 0001:000ED000       zCSoundFX::SetVolume(float)
 0001:000ED010       zCSoundFX::GetFrequency(void)
 0001:000ED020       zCSoundFX::SetFrequency(int)
 0001:000ED030       zCSoundFX::SetLooping(int)
 0001:000ED040       zCSoundFX::IsLooping(void)
 0001:000ED050       zCSoundFX::SetIsFixed(int)
 0001:000ED060       zCSoundFX::GetIsFixed(void)
 0001:000ED070       zCSoundFX::`scalar deleting destructor'(uint)
 0001:000ED0A0       zCSndFX_MSS::GetNumChannels(void)
 0001:000ED0B0       zCSndFX_MSS::GetNumChannelFrames(int)
 0001:000ED0C0       zCSndFX_MSS::GetPan(void)
 0001:000ED0D0       zCSndFX_MSS::GetVolume(void)
 0001:000ED0E0       zCSndFX_MSS::GetFrequency(void)
 0001:000ED0F0       zCSndFX_MSS::IsLooping(void)
 0001:000ED100       zCSndFX_MSS::SetIsFixed(int)
 0001:000ED110       zCSndFX_MSS::GetIsFixed(void)
 0001:000ED120       zCSndSys_MSS::LoadSoundFXScript(zSTRING const &)
 0001:000ED640       zCSndSys_MSS::LoadMulti(zSTRING const &,int)
 0001:000EE0E0       zCSndSys_MSS::LoadSingle(zSTRING const &)
 0001:000EE7B0       zCSndSys_MSS::PlaySound(zCSoundFX *,int)
 0001:000EFB70       zCSndSys_MSS::PlaySound(zCSoundFX *,int,int,float,float)
 0001:000F0060       zCSndSys_MSS::PlaySound3D(zSTRING const &,zCVob *,int,zCSoundSystem::zTSound3DParams *)
 0001:000F00F0       zCSndSys_MSS::PlaySound3D(zCSoundFX *,zCVob *,int,zCSoundSystem::zTSound3DParams *)
 0001:000F0B10       zCSndSys_MSS::PlaySound3DAmbient(zCSoundFX *,zCVob *,int,zCSoundSystem::zTSound3DParams *)
 0001:000F1300       zCSndSys_MSS::StopSound(int const &)
 0001:000F13C0       zCSndSys_MSS::StopAllSounds(void)
 0001:000F1410       zCSndSys_MSS::UpdateSound3D(int const &,zCSoundSystem::zTSound3DParams *)
 0001:000F21F0       zCSndSys_MSS::UpdateSoundPropsAmbient(zCActiveSnd *,zCSoundSystem::zTSound3DParams *)
 0001:000F2580       zCSndSys_MSS::GetSoundProps(int const &,int &,float &,float &)
 0001:000F2780       zCSndSys_MSS::GetSound3DProps(int const &,zCSoundSystem::zTSound3DParams &)
 0001:000F28A0       zCSndSys_MSS::GetActiveVolume(int const &)
 0001:000F2970       zCSndSys_MSS::UpdateSoundProps(int const &,int,float,float)
 0001:000F2D60       zCSndSys_MSS::DoSoundUpdate(void)
 0001:000F2FD0       zCSndSys_MSS::IsSoundActive(int const &)
 0001:000F30E0       zCSndSys_MSS::GetPlayingTimeMSEC(zSTRING const &)
 0001:000F3270       zCSndSys_MSS::GetSFXParser(void)
 0001:000F3280       zCSndSys_MSS::GetUsedSoundMem(void)
 0001:000F3290       zCSndSys_MSS::SetGlobalReverbPreset(int,float)
 0001:000F3350       zCSndSys_MSS::SetReverbEnabled(int)
 0001:000F3380       zCSndSys_MSS::GetNumProvider(void)
 0001:000F33B0       zCSndSys_MSS::GetProviderName(int)
 0001:000F33D0       zCSndSys_MSS::SetProvider(int)
 0001:000F33E0       zCSndSys_MSS::Start3DProvider(int)
 0001:000F3B50       zCSndSys_MSS::SetGlobalOcclusion(float)
 0001:000F3B60       zCSndSys_MSS::GetCPULoad(void)
 0001:000F3B80       zCSndSys_MSS::SetSpeakerType(zCSoundSystem::zTSpeakerType)
 0001:000F3D10       zCSndFX_MSS::zCSndFX_MSS(void)
 0001:000F3D70       zCSndFX_MSS::`scalar deleting destructor'(uint)
 0001:000F3DA0       zCSndFX_MSS::~zCSndFX_MSS(void)
 0001:000F3F40       zCSndFrame::`scalar deleting destructor'(uint)
 0001:000F3F60       zCSndFX_MSS::LoadChannel(int)
 0001:000F4760       zCSndFX_MSS::SetFrequency(int)
 0001:000F4810       zCSndFX_MSS::SetPan(float)
 0001:000F48F0       zCSndFX_MSS::SetVolume(float)
 0001:000F4970       zCSndFX_MSS::SetDefaultProperties(void)
 0001:000F49C0       zCSndFX_MSS::LoadResourceData(void)
 0001:000F4D10       zCWaveData::zCWaveData(void)
 0001:000F4E70       zCWaveData::GetName(void)
 0001:000F4FE0       zCSndFX_MSS::ReleaseResourceData(void)
 0001:000F52D0       zCSndFX_MSS::IsActive(void)
 0001:000F5370       zCSndFX_MSS::GetPlayingTimeMSEC(void)
 0001:000F53C0       zCSndFX_MSS::GetResSizeBytes(void)
 0001:000F5470       zCSndFX_MSS::CheckCanBeCachedOut(void)
 0001:000F5520       zCSndFX_MSS::NewFrame(void)
 0001:000F5610       zCSndFX_MSS::SetLooping(int)
 0001:000F5660       zCSndFX_MSS::GetChannelFrame(int,int)
 0001:000F5670       zCSndFX_MSS::SetChannelFrame(int,int)
 0001:000F56F0       zCSndFX_MSS::CacheInActFrame(void)
 0001:000F5780       zCSndFX_MSS::CacheOutActFrame(void)
 0001:000F57D0       zCSndFX_MSS::CacheInActChannel(void)
 0001:000F5810       zCSndFX_MSS::CacheOutActChannel(void)
 0001:000F5890       zCSndFX_MSS::ChooseVariance(void)
 0001:000F58F0       zCActiveSnd::zCActiveSnd(void)
 0001:000F5900       zCActiveSnd::~zCActiveSnd(void)
 0001:000F5980       zCActiveSnd::GetNextFreeHandle(void)
 0001:000F5990       zCActiveSnd::AllocNextFreeSnd(void)
 0001:000F5B30       zCActiveSnd::Release(void)
 0001:000F5BB0       zCActiveSnd::Initialize(void)
 0001:000F5C30       zCActiveSnd::GetHandleIndex(int)
 0001:000F5D70       zCActiveSnd::GetHandleActive(int)
 0001:000F5E70       zCActiveSnd::GetSoundActive(zCActiveSnd *)
 0001:000F5F00       zCActiveSnd::GetFrameActive(zCSndFrame *)
 0001:000F5F40       zCActiveSnd::GetHandleSound(int)
 0001:000F5FF0       zCActiveSnd::AddSound(zCActiveSnd *)
 0001:000F61A0       zCActiveSnd::RemoveSound(zCActiveSnd *)
 0001:000F6400       zCActiveSnd::RemoveSoundsByFrame(zCSndFrame *)
 0001:000F6440       zCActiveSnd::RemoveSoundByVobSlot(zCVob const *,int)
 0001:000F6490       zCActiveSnd::StopSoundsByFrame(zCSndFrame *)
 0001:000F64F0       zCActiveSnd::ResumeSoundsByFrame(zCSndFrame *)
 0001:000F6540       zCActiveSnd::UpdateSoundsByFrame(zCSndFrame *)
 0001:000F6850       zCActiveSnd::GetNumActive(void)
 0001:000F6860       zCActiveSnd::NewFrame(void)
 0001:000F6A80       zCActiveSnd::UpdateReverb(float)
 0001:000F6AE0       zCActiveSnd::CalcListenerPan(void)
 0001:000F6AF0       zCActiveSnd::CalcListenerVolume(void)
 0001:000F6B40       zCActiveSnd::GetNum3DSamplesUsed(void)
 0001:000F6B80       zCActiveSnd::GetNumAmbientSamplesUsed(void)
 0001:000F6BC0       zCActiveSnd::RequestChannel(void)
 0001:000F6EA0       zCActiveSnd::RequestChannel3D(void)
 0001:000F71D0       zCActiveSnd::GetVolume(void)
 0001:000F73D0       zCActiveSnd::DebugInfo(void)
 0001:000F8490       zCActiveSnd::InitPreAllocedData(void)
 0001:000F85C0       zCActiveSnd::CleanupPreAllocedData(void)
 0001:000F8680       zCActiveSnd::HasBeenUpdatedThisFrame(void)
 0001:000F86B0       zCSndChannel::zCSndChannel(void)
 0001:000F86D0       zCSndChannel::~zCSndChannel(void)
 0001:000F8830       zCActiveSnd::AutoCalcObstruction(int)
 0001:000F8A30       zCSndFrame::zCSndFrame(void)
 0001:000F8BF0       zCSndFrame::~zCSndFrame(void)
 0001:000F8DC0       zCSndFrame::CalcPitchOffset(float)
 0001:000F8E50       zCSndFrame::CalcPitchVariance(void)
 0001:000F8EE0       zCSndFrame::SetDefaultProperties(void)
 0001:000F8F90       zCSndFrame::CacheIn(void)
 0001:000F9010       zCSndFrame::CacheOut(void)
 0001:000F9050       zCWavePool::zCWavePool(void)
 0001:000F91C0       zCWavePool::~zCWavePool(void)
 0001:000F92E0       zCWavePool::CacheIn(zSTRING &)
 0001:000F9500       zCWavePool::CacheIn(zCWaveData *)
 0001:000F9650       zCWavePool::CacheOut(zCWaveData *)
 0001:000F97D0       zCWavePool::ReleaseWave(zCWaveData *)
 0001:000F98A0       zCWavePool::NewFrame(void)
 0001:000F9A00       zCWavePool::DebugInfo(void)
 0001:000F9D80       zCWavePool::DebugInfo2(void)
 0001:000FA520       zCWaveData::zCWaveData(zSTRING &)
 0001:000FA730       zCWaveData::~zCWaveData(void)
 0001:000FA8C0       zCWaveData::Init(void)
 0001:000FA9A0       zCWaveData::CacheIn(void)
 0001:000FAF70       zPATH::GetPath(void)
 0001:000FAF90       zCWaveData::CacheOut(void)
 0001:000FAFE0       zCWaveData::CheckForCorrectFormat(int)
 0001:000FB290       zCWaveData::Release(void)
 0001:000FB2C0       zCWaveData::`scalar deleting destructor'(uint)
 0001:000FB2E0       zCWaveData::GetSize(void)
 0001:000FB300       zCHandleManager::Alloc3DSample(void)
 0001:000FB330       zCHandleManager::AllocSample(void)
 0001:000FB359       __CxxRestoreUnhandledExceptionFilter(void)
 0001:000FB370       zCHandleManager::Free3DSample(h3DPOBJECT *)
 0001:000FB440       zCHandleManager::FreeSample(_SAMPLE *)
 0001:000FB520       zCHandleManager::DisposeAllSamples(void)
 0001:000FB5D0       zCArraySort<zCActiveSnd *>::GetSafe(int)
 0001:000FB790       zCArraySort<zCActiveSnd *>::InsertSort(zCActiveSnd * const &)
 0001:000FB8E0       zCArraySort<zCActiveSnd *>::Search(zCActiveSnd * const &)
 0001:000FB950       zCArray<zCActiveSnd *>::~zCArray<zCActiveSnd *>(void)
 0001:000FB970       zCArray<zCActiveSnd *>::DeleteList(void)
 0001:000FB990       zCArray<zCSndFrame *>::zCArray<zCSndFrame *>(void)
 0001:000FB9A0       zCArray<zCSndFrame *>::~zCArray<zCSndFrame *>(void)
 0001:000FB9C0       zCArray<zCSndFrame *>::DeleteList(void)
 0001:000FB9E0       zCArraySort<zCWaveData *>::zCArraySort<zCWaveData *>(void)
 0001:000FBA00       zCArraySort<zCWaveData *>::~zCArraySort<zCWaveData *>(void)
 0001:000FBA20       zCArraySort<zCWaveData *>::Search(zCWaveData * const &)
 0001:000FBA90       zCArraySort<zCWaveData *>::RemoveOrder(zCWaveData * const &)
 0001:000FBB10       zCArray<zCWaveData *>::zCArray<zCWaveData *>(void)
 0001:000FBB20       zCArray<zCWaveData *>::~zCArray<zCWaveData *>(void)
 0001:000FBB40       zCArray<zCWaveData *>::IsInList(zCWaveData * const &)
 0001:000FBB80       zCArray<zCSndChannel *>::zCArray<zCSndChannel *>(void)
 0001:000FBB90       zCArray<zCSndChannel *>::~zCArray<zCSndChannel *>(void)
 0001:000FBBB0       zCArray<h3DPOBJECT *>::~zCArray<h3DPOBJECT *>(void)
 0001:000FBBD0       zCArray<h3DPOBJECT *>::RemoveIndex(int)
 0001:000FBBF0       zCArray<_SAMPLE *>::RemoveIndex(int)
 0001:000FBC10       zCArraySort<zCActiveSnd *>::RemoveOrderIndex(int)
 0001:000FBC40       zCArray<zCActiveSnd *>::AllocDelta(int)
 0001:000FBCA0       zCArray<zCSndFrame *>::InsertEnd(zCSndFrame * const &)
 0001:000FBD70       zCArraySort<zCWaveData *>::AllocDelta(int)
 0001:000FBDD0       zCArraySort<zCWaveData *>::RemoveOrderIndex(int)
 0001:000FBE00       zCArray<zCWaveData *>::AllocDelta(int)
 0001:000FBE60       zCArray<zCSndChannel *>::InsertEnd(zCSndChannel * const &)
 0001:000FBF30       zCArray<h3DPOBJECT *>::AllocDelta(int)
 0001:000FBF90       zCArray<_SAMPLE *>::AllocDelta(int)
 0001:000FC020       vidRefreshModeList(void)
 0001:000FC1E0       vidGetCaps(ulong)
 0001:000FC330       vidGetModeList(VIDMODE *,VIDMODE *,int)
 0001:000FC5C0       vidSetModeEx(VIDEO_INFO *)
 0001:000FC7B0       vidGetScreenModeName(int)
 0001:000FC800       vidSetPalette(uchar *,int)
 0001:000FCA00       vidCreatePalette(int,void *,void *,int)
 0001:000FCCA0       vidSetFrameReady(void)
 0001:000FCCD0       vidGetFPSRate(void)
 0001:000FCD40       vidSetMode(VIDMODE *)
 0001:000FD290       vidWaitVSYNC(void)
 0001:000FD300       vidFlip(void)
 0001:000FD3A0       vidGetStdSurface(int,int)
 0001:000FD400       vidLock(SURFACE *)
 0001:000FD540       vidUnLock(SURFACE *)
 0001:000FD620       vidCreateSurface(SURFACE_INFO *)
 0001:000FD740       vidFreeSurface(SURFACE *)
 0001:000FD880       vidSetColorKey(SURFACE *,ulong)
 0001:000FD910       vidPaintWindow(HWND__ *)
 0001:000FD9B0       vidCloseDisplay(int)
 0001:000FDD10       vidToggleFullScreenMode(void)
 0001:000FDF50       vidIdleEnter(void)
 0001:000FE020       vidWaitScreenUnblank(void)
 0001:000FE070       vidMinimize(int)
 0001:000FE350       vidWaitRestore(void)
 0001:000FE560       vidRestore(void)
 0001:000FE750       vidIsMinimized(void)
 0001:000FE7E0       vidBlit(BLIT_CMD *)
 0001:000FE940       vidBlitBatch(BLIT_CMD *,int)
 0001:000FE970       vidLostFocus(void)
 0001:000FE9A0       SetVMode(VIDMODE *)
 0001:000FF070       vidGetMemInfo(VIDMEM_INFO *)
 0001:000FF380       ddCheck(long)
 0001:000FF3F0       vidGetLastError(void)
 0001:000FF990       ccDrawCaption(HWND__ *,CUSTOMCAPTION *,int,HRGN__ *)
 0001:000FFB10       ccRenderCaption(HWND__ *,CUSTOMCAPTION *)
 0001:00100500       zCViewWindow::zCViewWindow(int,int,int,int,zTviewID)
 0001:00100580       zCViewWindow::`scalar deleting destructor'(uint)
 0001:001005A0       zCViewWindow::~zCViewWindow(void)
 0001:001005F0       GetWinVersion(void)
 0001:00100930       zTWindowsVersionInformation::~zTWindowsVersionInformation(void)
 0001:001009B0       sysKillWindowsKeys(bool)
 0001:00100D60       fn
 0001:00100F30       SetForegroundWindowEx(HWND__ *)
 0001:00101000       sysSetWindowMode(int,int)
 0001:001011E0       sysAlloc(ulong)
 0001:00101330       DialogFunc
 0001:00101A40       sysReAlloc(void *,ulong)
 0001:00101A90       sysFree(void *)
 0001:00101AA0       sysHandleExceptions(void)
 0001:00101AB0       libExit(void)
 0001:00101BD0       MasterExceptionHandler(void)
 0001:00101BE0       InputDlgProc(HWND__ *,uint,uint,long)
 0001:00101CA0       CheckPassword(void)
 0001:00101D70       WinMain(x,x,x,x)
 0001:00101ED0       HandledWinMain(HINSTANCE__ *,HINSTANCE__ *,char *,int)
 0001:00102280       initializeSystemMFC(void)
 0001:001025C0       winDoInstanceCheck(void)
 0001:00102620       winCreateMenu(void)
 0001:00102630       HandleFocusLoose(void)
 0001:00103A80       sysHardExit(char *,...)
 0001:00104130       winResizeMainWindow(void)
 0001:00104240       winCalcSizes(void)
 0001:00104280       sysGetTime(void)
 0001:001042D0       winSuspendThreads(void)
 0001:001042DE       __CxxRestoreUnhandledExceptionFilter(void)
 0001:001042F0       sysExit(void)
 0001:00104320       sysProcessIdle(void)
 0001:001043E0       sysEvent(void)
 0001:00104870       sysIdle(int)
 0001:00104880       winWaitMessage(ushort,ulong,ulong,ulong,ulong,int)
 0001:001049C0       TRACE(char *,...)
 0001:00104A20       cfgFetchTopic(char *)
 0001:00104A30       cfgSetBinary(char *,char *,void *,int)
 0001:00104A40       cfgGetBinary(char *,char *,void *,int *)
 0001:00104A50       sysParseCommandLine(char *)
 0001:00105010       sysSetFocus(void)
 0001:00105070       winDialog(ushort,int (*)(HWND__ *,uint,uint,long))
 0001:00105150       winDialogParam(ushort,int (*)(HWND__ *,uint,uint,long),ulong)
 0001:00105230       winDialogParamFinal(ushort,int (*)(HWND__ *,uint,uint,long),ulong)
 0001:00105300       ExcSpyInfo(EXCEPTION_INFO *)
 0001:001059A0       ExceptionDlgProc(HWND__ *,uint,uint,long)
 0001:00106670       ASSERTDlgProc(HWND__ *,uint,uint,long)
 0001:00107550       BoundsSpyInfo(ASSERT_FAIL_INFO *,EXCEPTION_INFO *)
 0001:00107910       BOUNDS_FAIL(char *,int,int,int,char *,int,zSTRING const &)
 0001:00107BD0       AssertSpyInfo(ASSERT_FAIL_INFO *,EXCEPTION_INFO *)
 0001:00107F90       ASSERT_FAIL(char *,char *,int,zSTRING const &)
 0001:001081E0       sysGotDebugger(void)
 0001:00108220       inCreateMouseMessage(ulong,ulong)
 0001:00108370       zOpt_Sound_ChangeFXVol(zCOptionEntry &)
 0001:001083E0       zOpt_Sound_ChangeMusicVol(zCOptionEntry &)
 0001:00108450       zOpt_Video_ChangeVidOptions(zCOptionEntry &)
 0001:00108570       zOpt_ToggleJoy(zCOptionEntry &)
 0001:00108580       zCarsten_StartUp(HWND__ * *)
 0001:00109B30       zCarsten_ShutDown(void)
 0001:00109B60       zCarsten_ShutDown_Fast(void)
 0001:00109BF0       zCMemPool<zCVertex>::~zCMemPool<zCVertex>(void)
 0001:00109C40       zCMemPool<zCVertFeature>::~zCMemPool<zCVertFeature>(void)
 0001:00109C90       zCMemPool<zCPolygon>::~zCMemPool<zCPolygon>(void)
 0001:00109CE0       zCMemPool<zCPortal>::~zCMemPool<zCPortal>(void)
 0001:00109CF0       zTEngineStats::PrintScreen(int,int)
 0001:0010A310       zCLineCache::~zCLineCache(void)
 0001:0010A320       zCLineCache::Line(int,int,int,int,zCOLOR)
 0001:0010A3B0       zCLineCache::Flush(zCViewBase *)
 0001:0010A450       zCLineCache::Line3D(zVEC3 const &,zVEC3 const &,zCOLOR,int)
 0001:0010A850       zCLineCache::LineCS3D(zVEC3 const &,zVEC3 const &,zCOLOR)
 0001:0010AB10       zCVertex::Draw(zCOLOR const &,int)
 0001:0010ABD0       zCVertex::ResetVertexTransforms(void)
 0001:0010AC00       zCVertex::CreateVertexTransform(void)
 0001:0010AC90       zCVolatileMemory<zCVertexTransform>::~zCVolatileMemory<zCVertexTransform>(void)
 0001:0010ACA0       zCMemPool<zCVertex>::zCMemPool<zCVertex>(void)
 0001:0010ACB0       zCMemPool<zCVertFeature>::zCMemPool<zCVertFeature>(void)
 0001:0010ACC0       zCMemPool<zCPolygon>::zCMemPool<zCPolygon>(void)
 0001:0010ACD0       zCMemPool<zCPortal>::zCMemPool<zCPortal>(void)
 0001:0010ACE0       zCVolatileMemory<zCVertexTransform>::zCVolatileMemory<zCVertexTransform>(uint,zTVolatileOverflowMode)
 0001:0010AD10       zCVolatileMemory<zCVertexTransform>::Destroyed(void *)
 0001:0010B120       zCAIBaseSound::RemoveSlideSound(void)
 0001:0010B140       zCAIBaseSound::CheckSlideSound(zCVob *)
 0001:0010B1D0       zCAIBaseSound::StartDefaultCollisionSound(zCVob *,zCCollisionReport const &)
 0001:0010B470       zCAIPlayer::_CreateNewInstance(void)
 0001:0010B4D0       zCAIPlayer::operator delete(void *)
 0001:0010B5C0       zCAIPlayer::zCAIPlayer(void)
 0001:0010B730       zCAIPlayer::_GetClassDef(void)
 0001:0010B740       zCAIPlayer::`scalar deleting destructor'(uint)
 0001:0010B770       zCAIPlayer::~zCAIPlayer(void)
 0001:0010B900       zCSparseArrayIterator::Reset(void)
 0001:0010B960       zCSparseArrayIterator::~zCSparseArrayIterator(void)
 0001:0010B980       zCAIPlayer::RemoveEffects(void)
 0001:0010BA60       zCAIPlayer::HostVobRemovedFromWorld(zCVob *,zCWorld *)
 0001:0010BA70       zCAIPlayer::GetJumpUpHeight(void)
 0001:0010BAB0       zCAIPlayer::SetJumpUpForceByHeight(float)
 0001:0010BAD0       zCAIPlayer::SetVob(zCVob *)
 0001:0010BC30       zCAIPlayer::DoAutoRoll(void)
 0001:0010BDF0       zCAIPlayer::ResetAutoRoll(void)
 0001:0010BE20       zCAIPlayer::CalcModelAnisInPlace(void)
 0001:0010BE80       zCAIPlayer::DoSurfaceAlignment(void)
 0001:0010C4A0       zCAIPlayer::IsSliding(void)
 0001:0010C4D0       zCAIPlayer::CheckFloorSliding(void)
 0001:0010CC40       zCAIPlayer::CheckPhysics(void)
 0001:0010D180       zCAIPlayer::PropagateCollObjectStates(zCAIPlayer::zTMovementState)
 0001:0010D390       zCAIPlayer::CalcForceModelHalt(void)
 0001:0010D440       zCAIPlayer::CalcStateVars(void)
 0001:0010D6C0       zCAIPlayer::DoProceduralMovement(void)
 0001:0010D750       zCAIPlayer::Begin(zCVob *)
 0001:0010D8F0       zCAIPlayer::End(void)
 0001:0010D980       zCAIPlayer::DoAI(zCVob *,int &)
 0001:0010D990       zCAIPlayer::UpdateEffects(void)
 0001:0010E520       zCAIPlayer::GetBloodQuadMark(void)
 0001:0010E780       zCAIPlayer::SetBloodDefaultTexture(zSTRING const &)
 0001:0010E8C0       zCAIPlayer::AddBlood(zVEC3 const &,zVEC3 const &,float,int,zSTRING *)
 0001:0010E950       zCAIPlayer::AddWeaponTrailSegment(zVEC3 const &,zVEC3 const &)
 0001:0010EC90       nullsub_18
 0001:0010ECA0       zCAIPlayer::CreateLedgeInfo(void)
 0001:0010ECC0       zCAIPlayer::GetLedgeInfo(void)
 0001:0010ED00       zCAIPlayer::GetFoundLedge(void)
 0001:0010ED20       zCAIPlayer::ClearFoundLedge(void)
 0001:0010ED40       nullsub_34
 0001:0010ED50       nullsub_35
 0001:0010ED60       nullsub_36
 0001:0010ED70       nullsub_37
 0001:0010ED80       nullsub_38
 0001:0010ED90       zCAIPlayer::DetectClimbUpLedge(zVEC3 &,int)
 0001:0010F2B0       zCDetectLedgeReport::zCDetectLedgeReport(zVEC3 const &)
 0001:00110060       zCCollObjectCharacter::IsMoveInvalid(zVEC3 const &,zVEC3 const &,zVEC3 &,zCCollObjectCharacter::zTSpatialState &,zVEC3 &)
 0001:00110070       zCAIPlayer::AlignModelToLedge(zSTRING const &)
 0001:00110170       zCAIPlayer::GetHandPositionWorld(void)
 0001:001102C0       zCAIPlayer::AlignToFloor(float)
 0001:00110300       zCAIPlayer::GetModelFloorWorld(void)
 0001:00110320       zCAIPlayer::CheckEnoughSpaceMoveDir(zVEC3 const &,int)
 0001:00110700       zCAIPlayer::CheckEnoughSpaceMoveForward(int)
 0001:00110740       zCAIPlayer::CheckEnoughSpaceMoveBackward(int)
 0001:00110790       zCAIPlayer::CheckEnoughSpaceMoveRight(int)
 0001:001107D0       zCAIPlayer::CheckEnoughSpaceMoveLeft(int)
 0001:00110820       zCAIPlayer::GetProtoYHeight(void)
 0001:00110840       zCAIPlayer::GetSurfaceAlignScanOrigin(void)
 0001:00110970       zCAIPlayer::DiveRotateX(float const &)
 0001:00110AC0       zCAIPlayer::SetCDStat(int)
 0001:00110B10       zCAIPlayer::LandAndStartAni(zSTRING const &)
 0001:00110BC0       zCAIPlayer::LandAndStartAni(zCModelAni *)
 0001:00110C20       zCAIPlayer::CheckForceModelHalt(zSTRING const &)
 0001:00110C60       zCAIPlayer::CheckForceModelHalt(zCModelAni *)
 0001:00110CA0       zCAIPlayer::ShouldCorrectFloorHeight(void)
 0001:00110CC0       zCAIPlayer::BeginStateSwitch(void)
 0001:00110D40       zCAIPlayer::SetPhysicsEnabled(int)
 0001:00110D50       zCAIPlayer::StartPhysicsWithVel(void)
 0001:00110D80       zCAIPlayer::StartStandAni(void)
 0001:00110DA0       zCAIPlayer::StartFallDownAni(void)
 0001:00110E60       zCAIPlayer::Archive(zCArchiver &)
 0001:00110F50       zCAIPlayer::Unarchive(zCArchiver &)
 0001:00111080       zCAIPlayer::Print(zSTRING const &)
 0001:00111090       zCAIPlayer::Line3D(zVEC3 const &,zVEC3 const &,int)
 0001:001110A0       zCAIPlayer::PrintScreen(int,int,zSTRING)
 0001:001110D0       zCArray<zCAIPlayer::zTBloodVobTrack>::~zCArray<zCAIPlayer::zTBloodVobTrack>(void)
 0001:001110F0       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>(ulong,ulong)
 0001:00111170       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::~zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>(void)
 0001:001112A0       zCSparseArrayIterator::Next(void)
 0001:001112D0       zCSparseArrayIterator::Register(void)
 0001:001112F0       zCSparseArrayIterator::DeRegister(void)
 0001:001113E0       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::GetDataDangerous(zCAIPlayer const * const &)
 0001:00111490       zCSparseArrayIterator::operator int(void)
 0001:001114C0       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::Delete(zCAIPlayer const * const &)
 0001:00111590       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::ClearCache(void)
 0001:001116A0       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::PurgeCache(void)
 0001:001117C0       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::~zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>(void)
 0001:00111810       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::SizeIndex(void)
 0001:00111820       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::SizeData(void)
 0001:00111830       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::SizeAll(void)
 0001:00111840       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::IndexPtr(ulong)
 0001:00111850       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::DataPtr(ulong)
 0001:00111860       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::ManDatPtr(ulong)
 0001:00111870       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::IndexIsEqual(void const *,void const *)
 0001:00111890       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::CopyIndex(void *,void const *)
 0001:001118B0       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::DestructIndex(void *)
 0001:001118C0       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::Hash(void const *,ulong &,ulong &)
 0001:001118E0       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::ConstructData(void *)
 0001:00111900       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::DestructData(void *)
 0001:00111920       zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::`scalar deleting destructor'(uint)
 0001:00111940       zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::`scalar deleting destructor'(uint)
 0001:00111960       zCArray<zCAIPlayer::zTBloodVobTrack>::AllocDelta(int)
 0001:00111A10       zVEC2::Apply(float (*)(float))
 0001:00111A30       zVEC2::GetDescription(void)
 0001:00111C70       zVEC2::SetByDescription(zSTRING const &)
 0001:00111E30       operator<<(ostream &,zVEC2 &)
 0001:00111E90       operator>>(istream &,zVEC2 &)
 0001:00111F80       Alg_Swap(zVEC2 &,zVEC2 &)
 0001:00111FC0       Alg_Min(zVEC2 const &,zVEC2 const &)
 0001:00112010       Alg_Max(zVEC2 const &,zVEC2 const &)
 0001:00112060       Alg_Prod(zVEC2 const &,zVEC2 const &)
 0001:00112080       zVEC3::Apply(float (*)(float))
 0001:001120B0       operator<<(ostream &,zVEC3 &)
 0001:00112130       operator>>(istream &,zVEC3 &)
 0001:00112240       Alg_Swap(zVEC3 &,zVEC3 &)
 0001:00112290       Alg_Min(zVEC3 const &,zVEC3 const &)
 0001:00112300       Alg_Max(zVEC3 const &,zVEC3 const &)
 0001:00112370       Alg_Prod(zVEC3 const &,zVEC3 const &)
 0001:001123A0       zVEC4::LengthApprox(void)
 0001:00112480       zVEC4::Normalize(void)
 0001:001124D0       zVEC4::Apply(float (*)(float))
 0001:00112510       operator<<(ostream &,zVEC4 &)
 0001:001125A0       operator>>(istream &,zVEC4 &)
 0001:001126D0       Alg_Swap(zVEC4 &,zVEC4 &)
 0001:00112730       Alg_Min(zVEC4 const &,zVEC4 const &)
 0001:001127B0       Alg_Max(zVEC4 const &,zVEC4 const &)
 0001:00112830       Alg_Prod(zVEC4 const &,zVEC4 const &)
 0001:00112910       zMAT3::zMAT3(zVEC3 const &,zVEC3 const &,zVEC3 const &)
 0001:00112960       zMAT3::zMAT3(float)
 0001:001129B0       zMAT3::zMAT3(zMAT3 const &)
 0001:00112A00       zMAT3::operator=(zMAT3 const &)
 0001:00112A50       zMAT3::operator+=(zMAT3 const &)
 0001:00112AB0       zMAT3::operator-=(zMAT3 const &)
 0001:00112B10       zMAT3::operator*=(float)
 0001:00112B70       zMAT3::operator=/(float)
 0001:00112BD0       zMAT3::Transpose(void)
 0001:00112C60       zMAT3::Inverse(float *)
 0001:00112DA0       zMAT3::Apply(float (*)(float))
 0001:00112E10       operator-(zMAT3 const &)
 0001:00112EC0       operator+(zMAT3 const &,zMAT3 const &)
 0001:00112F70       operator-(zMAT3 const &,zMAT3 const &)
 0001:00113020       operator*(zMAT3 const &,zMAT3 const &)
 0001:00113160       operator*(zMAT3 const &,float)
 0001:00113220       operator*(float,zMAT3 const &)
 0001:001132E0       operator/(zMAT3 const &,float)
 0001:00113390       operator==(zMAT3 const &,zMAT3 const &)
 0001:00113420       operator!=(zMAT3 const &,zMAT3 const &)
 0001:001134C0       operator<<(ostream &,zMAT3 &)
 0001:00113610       operator>>(istream &,zMAT3 &)
 0001:001136B0       Alg_Swap(zMAT3 &,zMAT3 &)
 0001:00113780       operator*(zMAT3 const &,zVEC3 const &)
 0001:001137E0       operator*(zMAT4 const &,zMAT3 const &)
 0001:00113920       operator*(zMAT3 const &,zMAT4 const &)
 0001:00113B90       zMAT4::zMAT4(zVEC4 const &,zVEC4 const &,zVEC4 const &,zVEC4 const &)
 0001:00113C10       zMAT4::zMAT4(float)
 0001:00113C80       zMAT4::operator=(zMAT3 const &)
 0001:00113D80       zMAT4::operator=(zMAT4 const &)
 0001:00113E00       zMAT4::operator+=(zMAT4 const &)
 0001:00113EA0       zMAT4::operator-=(zMAT4 const &)
 0001:00113F40       zMAT4::operator*=(float)
 0001:00113FF0       zMAT4::operator=/(float)
 0001:00114080       zMAT4::Transpose(void)
 0001:00114180       zMAT4::TransposeLinTrafo(void)
 0001:00114340       zMAT4::InverseLinTrafo(void)
 0001:00114500       zMAT4::Inverse(void)
 0001:00114960       operator*(zVEC4 const &,float)
 0001:00114990       zMAT4::Apply(float (*)(float))
 0001:00114A50       zMAT4::IsUpper3x3Orthonormal(void)
 0001:00114CA0       zMAT4::GetDescriptionRot(void)
 0001:00114EE0       zMAT4::GetDescriptionPos(void)
 0001:001150E0       zMAT4::SetByDescriptionRot(zSTRING &)
 0001:00115240       zMAT4::SetByDescriptionPos(zSTRING &)
 0001:00115390       zMAT4::GetEulerAngles(void)
 0001:001153D0       zMAT4::SetByEulerAngles(zVEC3)
 0001:00115400       operator-(zMAT4 const &)
 0001:00115520       operator+(zMAT4 const &,zMAT4 const &)
 0001:00115650       operator-(zMAT4 const &,zMAT4 const &)
 0001:00115780       operator*(zMAT4 const &,float)
 0001:001158C0       operator*(float,zMAT4 const &)
 0001:00115A00       operator/(zMAT4 const &,float)
 0001:00115B20       operator==(zMAT4 const &,zMAT4 const &)
 0001:00115C20       operator!=(zMAT4 const &,zMAT4 const &)
 0001:00115D30       operator<<(ostream &,zMAT4 &)
 0001:00115F60       operator>>(istream &,zMAT4 &)
 0001:00116040       Alg_Swap(zMAT4 &,zMAT4 &)
 0001:00116170       zMAT4::ExtractScaling(void)
 0001:001161F0       zMAT4::ExtractRotation(void)
 0001:00116330       zMAT4::MakeOrthonormal(void)
 0001:00116510       zMAT3::MakeOrthonormal(void)
 0001:001166F0       zMAT3::SetUpVector(zVEC3 const &)
 0001:00116710       zMAT3::SetRightVector(zVEC3 const &)
 0001:00116730       zMAT4::PostRotateX(float)
 0001:00116780       zMAT4::PostRotateY(float)
 0001:001167D0       zMAT4::PostRotateZ(float)
 0001:00116820       zMAT4::PostScale(zVEC3 const &)
 0001:00116840       zMAT4::PreScale(zVEC3 const &)
 0001:001168A0       Alg_Identity2D(void)
 0001:00116940       Alg_Translation2D(zVEC2 &)
 0001:001169E0       Alg_Rotation2D(zVEC2 &,float)
 0001:00116AB0       Alg_Scaling2D(zVEC2 &)
 0001:00116B50       Alg_Identity3D(void)
 0001:00116C60       Alg_Translation3D(zVEC3 const &)
 0001:00116D70       Alg_Rotation3D(zVEC3 const &,float)
 0001:00116DF0       Alg_Rotation3DN(zVEC3 const &,float)
 0001:00116E20       Alg_Rotation3DRad(zVEC3 const &,float)
 0001:00116E90       Alg_Rotation3DNRad(zVEC3 const &,float)
 0001:00117010       Alg_Scaling3D(zVEC3 const &)
 0001:00117120       Alg_Perspective3D(float)
 0001:00117230       Alg_ClipAtZ0(zVEC3 &,zVEC3 &)
 0001:00117310       zCQuat::Unit(void)
 0001:00117360       zCQuat::QuatToMatrix4(zMAT4 &)
 0001:00117460       zCQuat::QuatToMatrix3(zMAT3 &)
 0001:00117560       zCQuat::Matrix4ToQuat(zMAT4 const &)
 0001:00117820       zCQuat::Matrix3ToQuat(zMAT3 const &)
 0001:00117AC0       zCQuat::QuatToEuler(zVEC3 &)
 0001:00117BE0       zCQuat::EulerToQuat(zVEC3 const &)
 0001:00117C90       zCQuat::QuatToAxisAngle(zVEC3 &,float &)
 0001:00117D10       zCQuat::Slerp(float,zCQuat const &,zCQuat const &)
 0001:00117EF0       zCQuat::Lerp(float,zCQuat const &,zCQuat const &)
 0001:00117FF0       zCQuat::Squad(float,zCQuat const &,zCQuat const &,zCQuat const &,zCQuat const &)
 0001:001181B0       zCValueSmooth::zCValueSmooth(void)
 0001:001181D0       zCValueSmooth::Smooth(float &)
 0001:00118230       zCVEC3Smooth::zCVEC3Smooth(void)
 0001:001182B0       zCVEC3Smooth::Smooth(zVEC3 &)
 0001:00118650       zCArchiverFactory::EndOfArchive(zCBuffer *,zFILE *)
 0001:001186C0       zCArchiverFactory::ReadLine(zSTRING &,zCBuffer *,zFILE *)
 0001:001188D0       zCArchiverFactory::ReadLineArg(zSTRING &,zSTRING &,zCBuffer *,zFILE *)
 0001:00118B50       zCArchiverFactory::ReadHeader(int,zCBuffer *,zFILE *,zCArchiver * &,zTArchiveMode &,int &)
 0001:00119000       zCArchiverGeneric::operator delete(void *)
 0001:00119020       zCArchiverFactory::CreateArchiverRead(zCBuffer *,int)
 0001:001190B0       zCArchiverFactory::CreateArchiverRead(zFILE *,int)
 0001:00119120       zCArchiverFactory::CreateArchiverRead(zSTRING const &,int)
 0001:00119290       zCArchiverFactory::WriteLine(zSTRING const &,zCBuffer *,zFILE *)
 0001:00119390       zCArchiverFactory::WriteLine(char const * const,zCBuffer *,zFILE *)
 0001:00119490       zCArchiverFactory::WriteHeader(zCArchiver *,zTArchiveMode,int,int,zCBuffer *,zFILE *)
 0001:00119C80       zSTRING::zSTRING(char)
 0001:00119CD0       zCArchiverFactory::CreateArchiverFromMode(zTArchiveMode)
 0001:00119D90       zCArchiverBinSafe::operator delete(void *)
 0001:00119DB0       zCArchiverFactory::CreateArchiverWrite(zCBuffer *,zTArchiveMode,int,int)
 0001:00119F00       zCArchiverFactory::CreateArchiverWrite(zTArchiveMode,int,int)
 0001:00119F20       zCArchiverFactory::CreateArchiverWrite(zSTRING const &,zTArchiveMode,int,int)
 0001:00119FA0       zCArchiverFactory::CreateArchiverWrite(zFILE *,zTArchiveMode,int,int)
 0001:00119FF0       zCArchiver::ReadObjectAccount(char const *,int,zCObject *)
 0001:0011A020       zCArchiver::ReadObjectAccount(char const *,int,char const *,zCObject *)
 0001:0011A280       zCArchiverBinSafe::_CreateNewInstance(void)
 0001:0011A340       zCArchiverBinSafe::RestoreString(zSTRING &)
 0001:0011A350       zCArchiverBinSafe::WriteType(zTArchiveTypeID,void *,ulong)
 0001:0011A3C0       zCArchiverBinSafe::ReadType(zTArchiveTypeID,void *,ulong)
 0001:0011ABF0       zCArchiverBinSafe::ClearChunkList(void)
 0001:0011AD50       GECString::Free(void)
 0001:0011AD70       zCArchiverBinSafe::InsertChunkInList(char const *)
 0001:0011AE00       zCArchiverBinSafe::ResolveAndPosEntry(char const *)
 0001:0011AED0       zCArchiverBinSafe::zCArchiverBinSafe(void)
 0001:0011AFF0       zCArchiver::_GetClassDef(void)
 0001:0011B000       zCArchiver::~zCArchiver(void)
 0001:0011B010       zCArchiver::`scalar deleting destructor'(uint)
 0001:0011B040       zCArchiverBinSafe::_GetClassDef(void)
 0001:0011B050       zCArchiverBinSafe::SkipOpenChunk(void)
 0001:0011B060       zCArchiverBinSafe::GetFile(void)
 0001:0011B070       zCArchiverBinSafe::SetStringEOL(zSTRING const &)
 0001:0011B1F0       zCArchiverBinSafe::GetStringEOL(void)
 0001:0011B230       zCArchiverBinSafe::GetChecksumEnabled(void)
 0001:0011B240       zCArchiverBinSafe::SetChecksumEnabled(int)
 0001:0011B250       zCArchiverBinSafe::SetNoReadSearchCycles(int)
 0001:0011B260       zCArchiverBinSafe::InProperties(void)
 0001:0011B270       zCArchiverBinSafe::InSaveGame(void)
 0001:0011B280       zCArchiverBinSafe::InBinaryMode(void)
 0001:0011B290       zCArchiverBinSafe::`scalar deleting destructor'(uint)
 0001:0011B2C0       zCArchiverBinSafe::~zCArchiverBinSafe(void)
 0001:0011B3C0       zCArchiverBinSafe::DebugMessage(zSTRING const &)
 0001:0011B3E0       zCArchiverBinSafe::WriteHeaderNumObj(void)
 0001:0011B440       zCArchiverBinSafe::Close(void)
 0001:0011B820       GECString::~GECString(void)
 0001:0011B840       GECString::Copy(char const *)
 0001:0011B890       zCArchiverBinSafe::EndOfArchive(void)
 0001:0011B900       zCArchiverBinSafe::DeleteBuffer(void)
 0001:0011B920       zCArchiverBinSafe::GetBufferString(zSTRING &)
 0001:0011BA90       zCArchiverBinSafe::GetBuffer(void)
 0001:0011BAA0       zCArchiverBinSafe::OpenWriteBuffer(zCBuffer *,zTArchiveMode,int,int,int)
 0001:0011BC60       zCArchiverBinSafe::OpenWriteFile(zFILE *,zTArchiveMode,int,int,int)
 0001:0011BCC0       zCArchiverBinSafe::StoreBuffer(void *,ulong)
 0001:0011BCF0       zCArchiverBinSafe::StoreString(char const *)
 0001:0011BD20       zCArchiverBinSafe::StoreGetPos(void)
 0001:0011BD40       zCArchiverBinSafe::StoreSeek(ulong)
 0001:0011BD70       zCArchiverBinSafe::StoreStringEOL(char const *)
 0001:0011BD80       zCArchiverBinSafe::WriteHeader(int)
 0001:0011BE00       zCArchiverBinSafe::IsStringValid(char const *)
 0001:0011BE40       zCArchiverBinSafe::WriteASCIILine(char const *,char const *,zSTRING const &)
 0001:0011C020       zCArchiverBinSafe::WriteInt(char const *,int)
 0001:0011C100       zCArchiverBinSafe::WriteByte(char const *,uchar)
 0001:0011C1E0       zCArchiverBinSafe::WriteWord(char const *,ushort)
 0001:0011C2C0       zCArchiverBinSafe::WriteFloat(char const *,float)
 0001:0011C3A0       zCArchiverBinSafe::WriteBool(char const *,int)
 0001:0011C480       zCArchiverBinSafe::WriteString(char const *,zSTRING const &)
 0001:0011C5B0       zCArchiverBinSafe::WriteVec3(char const *,zVEC3 const &)
 0001:0011C8E0       zCArchiverBinSafe::WriteColor(char const *,zCOLOR const &)
 0001:0011C9C0       zCArchiverBinSafe::WriteRaw(char const *,void *,ulong)
 0001:0011CAA0       zCArchiverBinSafe::WriteRawFloat(char const *,void *,ulong)
 0001:0011CCC0       zCArchiverBinSafe::WriteEnum(char const *,char const *,int)
 0001:0011CEC0       zCArchiverBinSafe::WriteGroupBegin(char const *)
 0001:0011CED0       zCArchiverBinSafe::WriteGroupEnd(char const *)
 0001:0011CEE0       zCArchiverBinSafe::WriteChunkStart(char const *,char const *,ushort,ulong)
 0001:0011D280       zCArchiver::zTChunkRecord::~zTChunkRecord(void)
 0001:0011D300       zCArchiverBinSafe::WriteChunkStart(char const *,ushort)
 0001:0011D320       zCArchiverBinSafe::WriteChunkEnd(void)
 0001:0011D560       zCArchiverBinSafe::WriteObject(char const *,zCObject &)
 0001:0011D7A0       zCArchiverBinSafe::WriteObject(char const *,zCObject *)
 0001:0011D830       zCArchiverBinSafe::WriteObject(zCObject *)
 0001:0011D840       zCArchiverBinSafe::OpenReadBuffer(zCBuffer &,zTArchiveMode,int,int)
 0001:0011DA10       zCArchiverBinSafe::OpenReadFile(zFILE *,zTArchiveMode,int,int,int)
 0001:0011DA70       zCArchiverBinSafe::RestoreBuffer(void *,ulong)
 0001:0011DAA0       zCArchiverBinSafe::RestoreStringEOL(zSTRING &)
 0001:0011DAB0       zCArchiverBinSafe::RestoreString0(zSTRING &)
 0001:0011DAC0       zCArchiverBinSafe::RestoreGetPos(void)
 0001:0011DAE0       zCArchiverBinSafe::RestoreSeek(ulong)
 0001:0011DB20       zCArchiverBinSafe::ReadHeader(void)
 0001:0011DEC0       zCArchiverBinSafe::CheckObjectListSize(int)
 0001:0011DF60       zCArchiverBinSafe::CreateObject(zSTRING const &)
 0001:0011E030       zCArchiverBinSafe::GetClassDefByString(zSTRING const &)
 0001:0011E1D0       zCArchiverBinSafe::ReadChunkStartASCII(char const *,zSTRING &)
 0001:0011E430       zCArchiverBinSafe::ReadChunkStart(char const *)
 0001:0011E770       zCArchiver::zTChunkRecord::operator=(zCArchiver::zTChunkRecord const &)
 0001:0011E9D0       zCArchiverBinSafe::ReadChunkStart(zSTRING &,ushort &)
 0001:0011EAF0       zCArchiverBinSafe::ReadChunkStartNamed(char const *,ushort &)
 0001:0011EB20       zCArchiverBinSafe::GetCurrentChunkVersion(void)
 0001:0011EB40       zCArchiverBinSafe::ReadChunkEnd(void)
 0001:0011EB50       zCArchiverBinSafe::ReadObject(char const *,zCObject *)
 0001:0011F1D0       zCArchiverBinSafe::ReadObject(zCObject *)
 0001:0011F1E0       zCArchiverBinSafe::SkipChunk(int)
 0001:0011F3B0       zCArchiverBinSafe::ReadEntryASCII(char const *,zSTRING &)
 0001:0011F9F0       zCArchiverBinSafe::ReadFloat(char const *)
 0001:0011FA10       zCArchiverBinSafe::ReadVec3(char const *)
 0001:0011FA50       zCArchiverBinSafe::ReadInt(char const *)
 0001:0011FA70       zCArchiverBinSafe::ReadByte(char const *)
 0001:0011FA90       zCArchiverBinSafe::ReadWord(char const *)
 0001:0011FAB0       zCArchiverBinSafe::ReadBool(char const *)
 0001:0011FAD0       zCArchiverBinSafe::ReadString(char const *)
 0001:0011FB90       zCArchiverBinSafe::ReadColor(char const *)
 0001:0011FBB0       zCArchiverBinSafe::ReadEnum(char const *)
 0001:0011FBD0       zCArchiverBinSafe::ReadRaw(char const *,void *,ulong)
 0001:0011FC00       zCArchiverBinSafe::ReadRawFloat(char const *,void *,ulong)
 0001:0011FC30       zCArchiverBinSafe::ReadFloat(char const *,float &)
 0001:0011FC60       zCArchiverBinSafe::ReadVec3(char const *,zVEC3 &)
 0001:0011FC90       zCArchiverBinSafe::ReadInt(char const *,int &)
 0001:0011FCC0       zCArchiverBinSafe::ReadByte(char const *,uchar &)
 0001:0011FCF0       zCArchiverBinSafe::ReadWord(char const *,ushort &)
 0001:0011FD20       zCArchiverBinSafe::ReadBool(char const *,int &)
 0001:0011FD50       zCArchiverBinSafe::ReadString(char const *,zSTRING &)
 0001:0011FD80       zCArchiverBinSafe::ReadColor(char const *,zCOLOR &)
 0001:0011FDB0       zCArchiverBinSafe::ReadEnum(char const *,int &)
 0001:0011FDE0       zCArchiverBinSafe::GetParentObject(void)
 0001:0011FE70       zCArray<zCObject *>::~zCArray<zCObject *>(void)
 0001:0011FE90       zCArray<zCArchiver::zTChunkRecord>::~zCArray<zCArchiver::zTChunkRecord>(void)
 0001:0011FEC0       zCArray<zCArchiver::zTChunkRecord>::InsertEnd(zCArchiver::zTChunkRecord const &)
 0001:00120100       zCArchiver::zTChunkRecord::`vector deleting destructor'(uint)
 0001:00120160       zCArray<zCObject *>::AllocDelta(int)
 0001:001201C0       zCArray<zCArchiver::zTChunkRecord>::AllocDelta(int)
 0001:001203C0       zCArchiver::zTChunkRecord::zTChunkRecord(void)
 0001:00120400       GETStringMap<ulong>::SetAt(char const *,ulong *)
 0001:001205B0       GETStringMap<ulong>::SetAtForce(char const *,ulong *,ulong,ulong)
 0001:00120700       GETStringMap<ulong>::RemoveAll(bool)
 0001:00120800       GETStringMap<ulong>::Lookup(char const *,ulong * &,ulong)
 0001:00120880       GETStringMap<ulong>::GetNextElement(ulong &,GECString &,ulong * &,ulong &)
 0001:00120990       GETStringMap<ulong>::GESNextEntry::`scalar deleting destructor'(uint)
 0001:001209E0       GETStringMap<ulong>::GESNextEntry::~GESNextEntry(void)
 0001:00120A20       GETStringMap<ulong>::GetElement(char const *,ulong &,ulong)
 0001:00120CC0       zCArchiverGeneric::_CreateNewInstance(void)
 0001:00120E30       zCArchiverGeneric::zCArchiverGeneric(void)
 0001:00120F50       zCArchiverGeneric::_GetClassDef(void)
 0001:00120F60       zCArchiverGeneric::SkipOpenChunk(void)
 0001:00120F70       zCArchiverGeneric::GetFile(void)
 0001:00120F80       zCArchiverGeneric::SetStringEOL(zSTRING const &)
 0001:00121100       zCArchiverGeneric::GetStringEOL(void)
 0001:00121140       zCArchiverGeneric::GetChecksumEnabled(void)
 0001:00121150       zCArchiverGeneric::SetChecksumEnabled(int)
 0001:00121160       zCArchiverGeneric::SetNoReadSearchCycles(int)
 0001:00121170       zCArchiverGeneric::InProperties(void)
 0001:00121180       zCArchiverGeneric::InSaveGame(void)
 0001:00121190       zCArchiverGeneric::InBinaryMode(void)
 0001:001211B0       zCArchiverGeneric::`scalar deleting destructor'(uint)
 0001:001211E0       zCArchiverGeneric::~zCArchiverGeneric(void)
 0001:001212F0       zCArchiverGeneric::DebugMessage(zSTRING const &)
 0001:00121310       zCArchiverGeneric::WriteHeaderNumObj(void)
 0001:00121470       zCArchiverGeneric::Close(void)
 0001:00121650       zCArchiverGeneric::EndOfArchive(void)
 0001:001216C0       zCArchiverGeneric::DeleteBuffer(void)
 0001:001216E0       zCArchiverGeneric::GetBufferString(zSTRING &)
 0001:00121850       zCArchiverGeneric::GetBuffer(void)
 0001:00121860       zCArchiverGeneric::OpenWriteBuffer(zCBuffer *,zTArchiveMode,int,int,int)
 0001:00121A30       zCArchiverGeneric::OpenWriteFile(zFILE *,zTArchiveMode,int,int,int)
 0001:00121AA0       zCArchiverGeneric::StoreBuffer(void *,ulong)
 0001:00121AD0       zCArchiverGeneric::StoreString(char const *)
 0001:00121B10       zCArchiverGeneric::StoreGetPos(void)
 0001:00121B30       zCArchiverGeneric::StoreSeek(ulong)
 0001:00121B60       zCArchiverGeneric::StoreStringEOL(char const *)
 0001:00121B90       zCArchiverGeneric::WriteHeader(int)
 0001:00121C00       zCArchiverGeneric::IsStringValid(char const *)
 0001:00121C40       zCArchiverGeneric::WriteASCIILine(char const *,char const *,zSTRING const &)
 0001:00121E30       zCArchiverGeneric::WriteInt(char const *,int)
 0001:00121FD0       zCArchiverGeneric::WriteByte(char const *,uchar)
 0001:00122170       zCArchiverGeneric::WriteWord(char const *,ushort)
 0001:00122310       zCArchiverGeneric::WriteFloat(char const *,float)
 0001:001224D0       zCArchiverGeneric::WriteBool(char const *,int)
 0001:00122670       zCArchiverGeneric::WriteString(char const *,zSTRING const &)
 0001:001226D0       zCArchiverGeneric::WriteVec3(char const *,zVEC3 const &)
 0001:00122A10       zCArchiverGeneric::WriteColor(char const *,zCOLOR const &)
 0001:00122D80       zCArchiverGeneric::WriteRaw(char const *,void *,ulong)
 0001:00122F50       zCArchiverGeneric::WriteRawFloat(char const *,void *,ulong)
 0001:00123220       zCArchiverGeneric::WriteEnum(char const *,char const *,int)
 0001:00123490       zCArchiverGeneric::WriteChunkStart(char const *,char const *,ushort,ulong)
 0001:00123950       zCArchiverGeneric::WriteChunkStart(char const *,ushort)
 0001:00123970       zCArchiverGeneric::WriteChunkEnd(void)
 0001:00123C10       zCArchiverGeneric::WriteObject(char const *,zCObject &)
 0001:00123E20       zCArchiverGeneric::WriteObject(char const *,zCObject *)
 0001:00123EC0       zCArchiverGeneric::WriteObject(zCObject *)
 0001:00123ED0       zCArchiverGeneric::WriteGroupBegin(char const *)
 0001:00123FB0       zCArchiverGeneric::WriteGroupEnd(char const *)
 0001:00124090       zCArchiverGeneric::OpenReadBuffer(zCBuffer &,zTArchiveMode,int,int)
 0001:00124260       zCArchiverGeneric::OpenReadFile(zFILE *,zTArchiveMode,int,int,int)
 0001:001242D0       zCArchiverGeneric::RestoreBuffer(void *,ulong)
 0001:00124300       zCArchiverGeneric::RestoreStringEOL(zSTRING &)
 0001:001246E0       zCArchiverGeneric::RestoreString0(zSTRING &)
 0001:001246F0       zCArchiverGeneric::RestoreGetPos(void)
 0001:00124710       zCArchiverGeneric::RestoreSeek(ulong)
 0001:00124750       zCArchiverGeneric::ReadHeader(void)
 0001:00124A50       zCArchiverGeneric::CheckObjectListSize(int)
 0001:00124AF0       zCArchiverGeneric::CreateObject(zSTRING const &)
 0001:00124BC0       zCArchiverGeneric::GetClassDefByString(zSTRING const &)
 0001:00124D60       zCArchiverGeneric::ReadChunkStartASCII(char const *,zSTRING &)
 0001:00124FB0       zCArchiverGeneric::ReadChunkStart(char const *)
 0001:001253E0       zCArchiverGeneric::ReadChunkStart(zSTRING &,ushort &)
 0001:00125500       zCArchiverGeneric::ReadChunkStartNamed(char const *,ushort &)
 0001:00125530       zCArchiverGeneric::GetCurrentChunkVersion(void)
 0001:00125550       zCArchiverGeneric::ReadChunkEnd(void)
 0001:00125560       zCArchiverGeneric::ReadObject(char const *,zCObject *)
 0001:00125DF0       zCArchiverGeneric::ReadObject(zCObject *)
 0001:00125E00       zCArchiverGeneric::SkipChunk(int)
 0001:00126000       zCArchiverGeneric::ReadEntryASCII(char const *,zSTRING &)
 0001:00126460       zCArchiverGeneric::ReadFloat(char const *)
 0001:00126480       zCArchiverGeneric::ReadVec3(char const *)
 0001:001264C0       zCArchiverGeneric::ReadInt(char const *)
 0001:001264E0       zCArchiverGeneric::ReadByte(char const *)
 0001:00126500       zCArchiverGeneric::ReadWord(char const *)
 0001:00126520       zCArchiverGeneric::ReadBool(char const *)
 0001:00126540       zCArchiverGeneric::ReadString(char const *)
 0001:00126600       zCArchiverGeneric::ReadColor(char const *)
 0001:00126620       zCArchiverGeneric::ReadEnum(char const *)
 0001:00126640       zCArchiverGeneric::ReadRaw(char const *,void *,ulong)
 0001:001268D0       zCArchiverGeneric::ReadRawFloat(char const *,void *,ulong)
 0001:00126AD0       zCArchiverGeneric::ReadFloat(char const *,float &)
 0001:00126B20       zCArchiverGeneric::ReadVec3(char const *,zVEC3 &)
 0001:00126B80       zCArchiverGeneric::ReadInt(char const *,int &)
 0001:00126BD0       zCArchiverGeneric::ReadByte(char const *,uchar &)
 0001:00126C20       zCArchiverGeneric::ReadWord(char const *,ushort &)
 0001:00126C70       zCArchiverGeneric::ReadBool(char const *,int &)
 0001:00126CD0       zCArchiverGeneric::ReadString(char const *,zSTRING &)
 0001:00126D00       zCArchiverGeneric::ReadColor(char const *,zCOLOR &)
 0001:00126D90       zCArchiverGeneric::ReadEnum(char const *,int &)
 0001:00126DE0       zCArchiverGeneric::TestClassIntegrity(void (*)(zCObject *,int,zCClassDef *,int &))
 0001:00127800       zCArchiverGeneric::GetParentObject(void)
 0001:00127890       zCArray<zCObject *>::AllocAbs(int)
 0001:001278F0       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::~zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>(void)
 0001:00127940       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::SizeIndex(void)
 0001:00127950       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::SizeData(void)
 0001:00127960       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::SizeAll(void)
 0001:00127970       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::IndexPtr(ulong)
 0001:00127980       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::DataPtr(ulong)
 0001:00127990       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::ManDatPtr(ulong)
 0001:001279A0       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::IndexIsEqual(void const *,void const *)
 0001:001279C0       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::CopyIndex(void *,void const *)
 0001:001279E0       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::DestructIndex(void *)
 0001:001279F0       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::Hash(void const *,ulong &,ulong &)
 0001:00127A10       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::ConstructData(void *)
 0001:00127A20       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::DestructData(void *)
 0001:00127A30       zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::`vector deleting destructor'(uint)
 0001:00127A80       nullsub_39
 0001:00127A90       nullsub_40
 0001:00127B40       nullsub_41
 0001:00127BE0       zCRndAlphaSortObject_Vob::zCRndAlphaSortObject_Vob(void)
 0001:00127C00       zCRndAlphaSortObject::IsAlphaPoly(void)
 0001:00127C10       zCRndAlphaSortObject_Vob::~zCRndAlphaSortObject_Vob(void)
 0001:00127C80       zCRndAlphaSortObject::~zCRndAlphaSortObject(void)
 0001:00127C90       zCRndAlphaSortObject::`scalar deleting destructor'(uint)
 0001:00127CB0       zCRndAlphaSortObject_Vob::`scalar deleting destructor'(uint)
 0001:00127D00       zCRndAlphaSortObject_Vob::GetFreeAlphaVob(void)
 0001:00127DF0       zCRndAlphaSortObject_Vob::ResetFreeList(void)
 0001:00127E00       zCRndAlphaSortObject_Vob::Draw(int)
 0001:00127F70       zCRndAlphaSortObject_Vob::ClearList(void)
 0001:00127FD0       zCBspBase::ReleaseStaticReferences(void)
 0001:001280D0       zCBspSector::CompareOutdoorPortalBBox2D(void const *,void const *)
 0001:00128110       zCBspSector::InitHorizonByOutdoorPortals(void)
 0001:001282B0       zCBspSector::CalcCenterByPortals(void)
 0001:00128350       zCBspSector::HasManyBigPortals(void)
 0001:00128390       zCPortal::RemoveFromBsp(void)
 0001:001283B0       zCPortal::zCPortal(zTPlane const &,zCMesh *)
 0001:00128A10       zCBspBase::DescribeTree(int)
 0001:00128DD0       zCPolygon::RenderPoly(int)
 0001:00129420       zCPolygon::ApplyMorphing(void)
 0001:00129D30       nullsub_19
 0001:00129D40       zCPolygon::LightClippedPoly(int)
 0001:0012A640       nullsub_20
 0001:0012A650       zCPolygon::TransformProjectLight(void)
 0001:0012A820       zCPolygon::TransformProject(void)
 0001:0012A9E0       zCBspTree::zCBspTree(void)
 0001:0012AA50       zCBspTree::~zCBspTree(void)
 0001:0012AB10       zCBspLeaf::`vector deleting destructor'(uint)
 0001:0012AB70       zCBspTree::InitTree(void)
 0001:0012AC50       zCBspLeaf::zCBspLeaf(void)
 0001:0012ACD0       zCBspTree::DisposeTree(void)
 0001:0012AF10       zCBspSector::~zCBspSector(void)
 0001:0012AFB0       zCBspTree::BuildRecursive(zCCBspNode *)
 0001:0012B290       zCBspTree::Build(zCCBspTree *)
 0001:0012B6A0       zCBspNode::zCBspNode(void)
 0001:0012B6C0       zCBspTree::OptimizeLight(void)
 0001:0012BBC0       zCBspBase::CountNodes(void)
 0001:0012BC00       zCBspTree::UpdateVertexDependencies(zCVertex *)
 0001:0012BD90       zTBBox3D::AddPoint(zVEC3 const &)
 0001:0012BE10       zCBspTree::CollectPolysInBBox3DAngle(zTBBox3D const &,zVEC3 const &,float,float,zCPolygon * * &,int &)
 0001:0012BF80       zCBspTree::RenderLightList(void)
 0001:0012C0A0       zCBspTree::RenderVobList(void)
 0001:0012CC90       zCVob::GetPositionWorld(void)
 0001:0012CCB0       zCVob::GetAtVectorWorld(void)
 0001:0012CCD0       zCVob::GetUpVectorWorld(void)
 0001:0012CCF0       zCVob::GetRightVectorWorld(void)
 0001:0012CD60       zCBspLeaf::~zCBspLeaf(void)
 0001:0012CFB0       zCBspLeaf::PolyPlueckerAddRef(void)
 0001:0012D2A0       zCBspLeaf::PolyPlueckerRelease(void)
 0001:0012D2D0       zCBspLeaf::AddVobsToRenderList(zTBBox2D *)
 0001:0012D4D0       zCBspLeaf::AddVobsToRenderListOutdoor(void)
 0001:0012D840       zCBspLeaf::AddVobsToRenderListOutdoor(zCBspSector *,zTBBox2D const &)
 0001:0012DA40       zCBspBase::AddVobsToRenderListSubtree(int)
 0001:0012DB10       zCBspBase::GetScreenBBox2D(void)
 0001:0012DD60       zVEC2::zVEC2(zVEC2 const &)
 0001:0012DD80       zCBspBase::CollectNodeLights(void)
 0001:0012DFF0       zCBspLeaf::RenderLeafIndoor(int)
 0001:0012E0A0       zCBspBase::RenderTrivInIndoor(void)
 0001:0012E0E0       zCBspBase::RenderIndoor(int)
 0001:0012E180       zCBspBase::RenderNodeOutdoor(int)
 0001:0012E490       zCBspBase::RenderOutdoor(zCBspBase *,zTBBox3D,int,int)
 0001:0012E6B0       zTBBox3D::zTBBox3D(zTBBox3D const &)
 0001:0012F030       zCCamera::Project(zVEC3 const * const,float &,float &)
 0001:0012F080       zCBspTree::Render(void)
 0001:0012FAD0       zCBspNode::CalcPlaneSignbits(zCBspTree *)
 0001:0012FB10       zCBspBase::AddVobToLeafs(zCVob *)
 0001:0012FC50       zCBspBase::AddVobLightToLeafs(zCVobLight *)
 0001:0012FF60       zCBspBase::RemoveVobFromLeafs(zCVob *)
 0001:00130030       zCBspTree::RemoveVob(zCVob *)
 0001:00130040       zCBspTree::AddVob(zCVob *)
 0001:001300A0       zCBspTree::AdjustVob(zCVob *)
 0001:00130100       zCBspBase::CollectVobsSubtree(zCArray<zCVob *> &)
 0001:00130110       zCBspBase::CollectVobsInBBox3D(zCArray<zCVob *> &,zTBBox3D const &)
 0001:00130120       zCBspBase::CollectVobsSubtree_I(zCArray<zCVob *> &)
 0001:00130300       zCBspBase::CollectLightVobsSubtree(zCArray<zCVob *> &)
 0001:00130310       zCBspBase::CollectLightVobsSubtree_I(zCArray<zCVob *> &)
 0001:001304F0       zCBspBase::CollectVobsInBBox3D_I(zCArray<zCVob *> &,zTBBox3D const &)
 0001:00130720       zCBspLeaf::TraceRayCollectVobs(zCArray<zCVob *> &,zTBBox3D const &,int)
 0001:00130930       zCBspBase::FindLeaf(zVEC3 const &)
 0001:00130990       zCBspTree::CalcLeafRealBBox3D(zVEC3 const &)
 0001:00130A90       nullsub_42
 0001:00130AA0       zCBspBase::CheckRayAgainstPolys(zVEC3 const &,zVEC3 const &,zVEC3 &,zCRayTurbo *)
 0001:00130D30       zCBspBase::CheckRayAgainstPolysNearestHit(zVEC3 const &,zVEC3 const &,zVEC3 &,zCRayTurbo *)
 0001:00131040       zCBspBase::CheckRayAgainstPolysCache(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:001311F0       zCBspBase::RayIntersection(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:00131550       zCBspTree::TraceRay(zVEC3 const &,zVEC3 const &,int,zVEC3 &,zCPolygon * &,zCArray<zCVob *> *)
 0001:001317D0       zCBspTree::SetRayCache(zCRayCache *)
 0001:001317E0       zCCBspNode::CheckRayAgainstPolysNearestHit(zVEC3 const &,zVEC3 const &,zVEC3 &,zCRayTurbo *)
 0001:00131900       zCCBspNode::RayIntersectionOctree(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:00131C10       zCCBspNode::TraceRay(zVEC3 const &,zVEC3 const &,zCPolygon * &,zVEC3 &)
 0001:00131C40       zCCBspNode::TraceRay(zVEC3 const &,zVEC3 const &,zCPolygon * &)
 0001:00131C80       zCBspBase::CollectPolysInBBox3DRec(void)
 0001:00131EB0       zCBspBase::CollectPolysInBBox3D(zTBBox3D const &,zCPolygon * * &,int &)
 0001:00131F00       zCCBspNode::CollectPolysInBBox3DRec(void)
 0001:00132090       zCCBspNode::CollectPolysInBBox3D(zTBBox3D const &,zCPolygon * * &,int &)
 0001:001320E0       zCBspTree::FindLeaks(zCArray<zCPolygon *> &)
 0001:00132430       zCBspTree::MarkOccluderPolys(void)
 0001:00133210       zCBspTree::GetOccluderAreaRec(zCPolygon const *,zCArray<zCPolygon *> &)
 0001:001334C0       zCBspBase::SortNodePolys(zCBspTree *)
 0001:00133510       zCBspSector::RenderSector(void)
 0001:001335E0       zCBspSector::ActivateSectorRec(zTBBox2D const &,zCBspSector *,int)
 0001:00133B70       zCBspSector::ActivateSectorRecIndoor(zTBBox2D const &,zCBspSector *,int)
 0001:00134090       zCBspSector::RenderActiveSectorList(void)
 0001:001340D0       zCCBspTree::GetBspSectorByName(zSTRING const &)
 0001:00134180       zCBspTree::GetSectorNameVobIsIn(zCVob const *)
 0001:001341A0       zCCBspTree::GetPolyNeighbours(zCPolygon *,zCPolygon * * &,int &)
 0001:00134280       zCCBspTree::MarkGhostOccluder(void)
 0001:001344B0       zCCBspTree::CreateBspSectors(void)
 0001:001365B0       zVEC3::zVEC3(float)
 0001:001365D0       zVEC3::GetString(void)
 0001:00136910       zCPolygon::SetMaterial(zCMaterial *)
 0001:00136950       zTBBox2D::zTBBox2D(void)
 0001:00136960       zCBspTree::GetBspSectorByName(zSTRING const &)
 0001:00136A10       zCBspTree::CreateBspSectors2(zCCBspTree *)
 0001:00136D90       zCBspTree::GetFileVersion(void)
 0001:00136DA0       zCBspBase::SaveBINRec(zCFileBIN &)
 0001:00136E90       zCBspBase::LoadBINRec(zCFileBIN &)
 0001:00137010       zCBspTree::SaveBIN(zCFileBIN &)
 0001:00137AA0       zCBspTree::ConnectMaterialsToSectors(void)
 0001:00137E10       zCBspTree::LoadBIN(zCFileBIN &,int)
 0001:00138D00       zCMesh::operator delete(void *)
 0001:00138D20       zCBspTree::CalcStaticLeafLightData(void)
 0001:00139170       DrawBox(zTBBox3D const &)
 0001:00139650       zCRayTurboAdmin::zCRayTurboAdmin(void)
 0001:001397C0       zCRayTurboAdmin::~zCRayTurboAdmin(void)
 0001:00139970       zCRayTurboAdmin::GetInstance(void)
 0001:001399C0       zCRayTurboAdmin::GetRayTurboItem(zCBspNode const *)
 0001:00139A00       zCRayTurboAdmin::CreateRayTurboItem(zCBspNode const *)
 0001:00139B70       zTBBox3D::Init(void)
 0001:00139B90       zCRayTurboAdmin::GetOrCreate(zCBspNode const *)
 0001:00139C00       zCRayTurboAdmin::CanHaveSpatialInfo(zCBspNode const *)
 0001:00139C1E       type_info::operator=(type_info const &)
 0001:00139C30       zCRayTurboAdmin::ReleaseSpatialDatabase(void)
 0001:00139DC0       zCRayTurboAdmin::SetPolyTreshold(int)
 0001:00139DD0       zCRayTurboAdmin::GetPolyTreshold(void)
 0001:00139DE0       zCRayTurbo::zCRayTurbo(zCBspNode const &)
 0001:00139F50       zCRayTurbo::~zCRayTurbo(void)
 0001:00139FD0       zCRayTurbo::CalculateOptimizedPolyList(zCArray<zCPolygon *> &)
 0001:00139FF0       zCRayTurbo::TraverseTree(zCArray<zCPolygon *> &,zCMeshOctreeNode const &)
 0001:0013A190       zCMeshOctreeNode::zCMeshOctreeNode(int)
 0001:0013A1E0       zCMeshOctreeNode::~zCMeshOctreeNode(void)
 0001:0013A260       zCMeshOctreeNode::`scalar deleting destructor'(uint)
 0001:0013A280       zCMeshOctreeNode::EnlargeBox(zCArray<zCPolygon *> const &)
 0001:0013A3F0       zCMeshOctreeNode::CopyPolys(zCArray<uchar> const &,zCArray<zCPolygon *> const &,int,zCArray<zCPolygon *> &)
 0001:0013A550       zCMeshOctreeNode::Build(zCArray<zCPolygon *> const &,int)
 0001:0013AA80       zCArray<zCPolygon *>::zCArray<zCPolygon *>(void)
 0001:0013AA90       zCArray<zCPolygon *>::~zCArray<zCPolygon *>(void)
 0001:0013AAB0       zCArray<zCPolygon *>::AllocAbs(int)
 0001:0013AB10       zCArray<zCPolygon *>::InsertEnd(zCPolygon * const &)
 0001:0013ABE0       zCArray<zCPolygon *>::IsInList(zCPolygon * const &)
 0001:0013AC20       zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::GetAt(zCBspNode * const &,zCRayTurbo * &)
 0001:0013AC70       zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::~zTRayTurboValMap<zCBspNode *,zCRayTurbo *>(void)
 0001:0013AD50       zCArray<zCVobLight *>::~zCArray<zCVobLight *>(void)
 0001:0013AD70       zCArray<zCVobLight *>::InsertEnd(zCVobLight * const &)
 0001:0013AE40       zCArray<zCVobLight *>::InsertAtPos(zCVobLight * const &,int)
 0001:0013AF30       zCArray<zCBspSector *>::~zCArray<zCBspSector *>(void)
 0001:0013AF50       zCArray<zCBspSector *>::AllocAbs(int)
 0001:0013AFB0       zCArray<zCBspBase *>::zCArray<zCBspBase *>(void)
 0001:0013AFC0       zCArray<zCBspBase *>::~zCArray<zCBspBase *>(void)
 0001:0013AFE0       zCArray<zCBspSector::zTPortalInfo>::zCArray<zCBspSector::zTPortalInfo>(int)
 0001:0013B010       zCArray<zCBspSector::zTPortalInfo>::~zCArray<zCBspSector::zTPortalInfo>(void)
 0001:0013B030       zCArray<zCBspSector::zTPortalInfo>::AllocAbs(int)
 0001:0013B0A0       zCArraySort<zCPolygon *>::~zCArraySort<zCPolygon *>(void)
 0001:0013B0C0       zCSparseArray<void const *,int>::~zCSparseArray<void const *,int>(void)
 0001:0013B110       zCSparseArray<void const *,int>::SizeIndex(void)
 0001:0013B120       zCSparseArray<void const *,int>::SizeData(void)
 0001:0013B130       zCSparseArray<void const *,int>::SizeAll(void)
 0001:0013B140       zCSparseArray<void const *,int>::IndexPtr(ulong)
 0001:0013B150       zCSparseArray<void const *,int>::DataPtr(ulong)
 0001:0013B160       zCSparseArray<void const *,int>::ManDatPtr(ulong)
 0001:0013B170       zCSparseArray<void const *,int>::IndexIsEqual(void const *,void const *)
 0001:0013B190       zCSparseArray<void const *,int>::CopyIndex(void *,void const *)
 0001:0013B1B0       zCSparseArray<void const *,int>::DestructIndex(void *)
 0001:0013B1C0       zCSparseArray<void const *,int>::Hash(void const *,ulong &,ulong &)
 0001:0013B1E0       zCSparseArray<void const *,int>::ConstructData(void *)
 0001:0013B1F0       zCSparseArray<void const *,int>::DestructData(void *)
 0001:0013B200       zCArraySort<zTLightScore>::~zCArraySort<zTLightScore>(void)
 0001:0013B220       zCArray<uchar>::~zCArray<uchar>(void)
 0001:0013B240       zCSparseArray<void const *,int>::`scalar deleting destructor'(uint)
 0001:0013B260       zCArray<zCPolygon *>::AllocDelta(int)
 0001:0013B2C0       zCArraySort<zCPolygon::zSVertexSavedValues>::AllocDelta(int)
 0001:0013B330       zCArraySort<zCPolygon::zSVertexSavedValues>::Search(zCPolygon::zSVertexSavedValues const &)
 0001:0013B3A0       zCArraySort<zCPolygon::zSFeatureSavedValues>::AllocDelta(int)
 0001:0013B410       zCArraySort<zCPolygon::zSFeatureSavedValues>::Search(zCPolygon::zSFeatureSavedValues const &)
 0001:0013B480       zCArray<zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode *>::~zCArray<zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode *>(void)
 0001:0013B4A0       zCArray<zCVobLight *>::AllocDelta(int)
 0001:0013B500       zCArray<zCBspSector *>::AllocDelta(int)
 0001:0013B560       zCArray<zCBspSector *>::InsertEnd(zCBspSector * const &)
 0001:0013B630       zCArray<zCBspBase *>::AllocDelta(int)
 0001:0013B690       zCArray<zCBspBase *>::InsertEnd(zCBspBase * const &)
 0001:0013B760       zCArray<zCBspSector::zTPortalInfo>::AllocDelta(int)
 0001:0013B7C0       zCArray<zCBspLeaf *>::InsertEnd(zCBspLeaf * const &)
 0001:0013B890       zTRayTurboValMap<zCPolygon *,int>::GetNode(zCPolygon * const &,ulong &)
 0001:0013B8D0       zCArray<zCMaterial *>::InsertEnd(zCMaterial * const &)
 0001:0013B9A0       zCArraySort<zCPolygon *>::AllocDelta(int)
 0001:0013BA00       zCArraySort<zCPolygon *>::Search(zCPolygon * const &)
 0001:0013BA70       zCArraySort<zTLightScore>::InsertEnd(zTLightScore const &)
 0001:0013BB50       zCArray<uchar>::AllocDelta(int)
 0001:0013BBB0       zCArray<uchar>::InsertEnd(uchar const &)
 0001:0013BC70       zCArray<zTBBox2D>::AllocDelta(int)
 0001:0013BCF0       zCArray<zCBspLeaf *>::AllocDelta(int)
 0001:0013BD50       zCArray<zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode *>::AllocAbs(int)
 0001:0013BDB0       zCArray<zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode *>::AllocDelta(int)
 0001:0013BE10       zCArray<zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode *>::InsertEnd(zTRayTurboValMap<zCBspNode *,zCRayTurbo *>::zSNode * const &)
 0001:0013BF10       zCCBspTree::zCCBspTree(void)
 0001:0013BFC0       zCCBspNode::~zCCBspNode(void)
 0001:0013C030       zCCBspTree::SetBspTreeMode(zTBspTreeMode const &)
 0001:0013C0B0       zCCBspTree::~zCCBspTree(void)
 0001:0013C190       zCCBspTree::DeleteTree(void)
 0001:0013C270       zCCBspNode::`scalar deleting destructor'(uint)
 0001:0013C2E0       zCCBspTree::AddMesh(zCMesh *)
 0001:0013C310       zCCBspTree::AddMesh(zCMesh *,zMAT4 const &)
 0001:0013C610       zCCBspTree::BuildTree(float)
 0001:0013CF70       zCCBspNode::RemovePoly(zCPolygon *)
 0001:0013D050       zCCBspNode::DoesNodeContainPoly(zCPolygon *)
 0001:0013D120       zCCBspNode::CheckPortalConsistency(void)
 0001:0013D890       zCCBspNode::SplitPortals(void)
 0001:0013DD70       zCPortal::operator delete(void *)
 0001:0013DD80       zCPortal::Init(void)
 0001:0013DDA0       zCCBspNode::SplitPortalByAllPortals(zCPortal *)
 0001:0013E030       zCCBspNode::EnumeratePortals(void)
 0001:0013E160       zCCBspNode::ClassifyPortals(void)
 0001:0013E1E0       zCPortal::~zCPortal(void)
 0001:0013E1F0       zCCBspNode::Portalize(void)
 0001:0013E5E0       zCCBspNode::SelectPlane(zTPlane &,zTPolyNode * &,int &)
 0001:0013E830       zCCBspNode::SelectPlaneOctree(zCCBspTree *,zTPlane &,int)
 0001:0013EA50       zCCBspNode::ClassifyRayToNode(zVEC3 const &,zVEC3 const &)
 0001:0013ED10       zCCBspNode::ClassifyPolyToNode2(zCPolygon *)
 0001:0013EF80       zCCBspNode::OutdoorKillRedundantLeafs(void)
 0001:0013F1D0       zCCBspNode::AddPoly(zCPolygon *)
 0001:0013F210       zCCBspNode::BuildTree(int)
 0001:0013FE40       zCPolygon::operator delete(void *)
 0001:0013FE50       zTBBox3D::zTBBox3D(void)
 0001:0013FE60       zCCBspNode::zCCBspNode(zCCBspNode *)
 0001:0013FE80       zCCBspNode::PushPolyFront(zTPolyNode *)
 0001:0013FF10       zCCBspNode::CalcBBox3D(void)
 0001:00140010       zCCBspNode::CalcSubtreeBBox3D(void)
 0001:00140200       zCCBspNode::CalcSubtreeBBox3DCell(void)
 0001:001402F0       zCCBspNode::CountNodes(void)
 0001:00140320       zCCBspNode::CountLeafs(void)
 0001:00140360       zCCBspNode::CountPolys(void)
 0001:00140390       zCCBspNode::CountDepthRec(int,int &,int &,int &)
 0001:00140400       zCCBspNode::CountDepth(int &,int &,int &)
 0001:001404B0       zCCBspNode::DescribeTree(int)
 0001:00140B80       zCList2<zTPolyNode>::DeleteList(void)
 0001:00140BC0       zCList2<zTPolyNode>::Insert(zTPolyNode *)
 0001:00140BE0       zCList2<zTPolyNode>::Remove(zTPolyNode *)
 0001:00140C20       zCList2<zTPolyNode>::Delete(zTPolyNode *)
 0001:00140C80       zCList2<zTPolyNode>::Get(int)
 0001:00140CE0       zCBuildPortal::zCBuildPortal(void)
 0001:00140D60       zCBuildPortal::~zCBuildPortal(void)
 0001:00140DF0       zCBspTree::PreprocessIndoorPortals(zCMesh *,zCArray<zCBuildPortal *> &)
 0001:001411A0       zCBspTree::GetPolyNeighbours(zCPolygon *,zCPolygon * * &,int &)
 0001:00141250       zCBspTree::PostprocessIndoorPortals(zCArray<zCBuildPortal *> &)
 0001:00142CC0       zCArray<int>::~zCArray<int>(void)
 0001:00142CE0       zCArray<zCBuildPortal *>::zCArray<zCBuildPortal *>(void)
 0001:00142CF0       zCArray<zCBuildPortal *>::~zCArray<zCBuildPortal *>(void)
 0001:00142D10       zCArray<zCBuildPortal *>::InsertEnd(zCBuildPortal * const &)
 0001:00142E10       zTBCylinder3D::IsIntersecting(zTBCylinder3D const &)
 0001:00142E80       zTBCylinder3D::Draw(zCOLOR const &)
 0001:00142F30       zTBCylinder3D::SetByBBox3D(zTBBox3D)
 0001:00142FD0       zTBSphere3D::IsIntersecting(zVEC3 const &,zVEC3 const &)
 0001:001430E0       zTBSphere3D::IsIntersecting(zTBSphere3D const &)
 0001:001431A0       zTBSphere3D::ClassifyPlane(zTPlane)
 0001:001431F0       zTBSphere3D::Draw(zCOLOR const &)
 0001:00143510       zTBBox3D::SetMaximumBox(void)
 0001:00143530       zTBBox3D::GetVolume(void)
 0001:00143550       zTBBox3D::CalcGreaterBBox3D(zTBBox3D const &)
 0001:001435B0       zTBBox3D::ClipToBBox3D(zTBBox3D const &)
 0001:00143630       zTBBox3D::GetDescription(void)
 0001:00143C40       zTBBox3D::SetByDescription(zSTRING &)
 0001:00143F10       zTBBox3D::Transform(zMAT4 const &,zTBBox3D &)
 0001:00144020       zTBBox3D::UnTransform(zMAT4 const &,zTBBox3D &)
 0001:00144370       zTBBox3D::IsIntersecting(zVEC3 const &,zVEC3 const &,float &,float &)
 0001:001444E0       zTBBox3D::IsIntersectingSweep(zVEC3 const &,zTBBox3D const &,float &)
 0001:00144680       zTBBox3D::IsIntersectingSweep(zTBBox3D const &,zTBBox3D const &,zTBBox3D const &,float &)
 0001:00144700       zTBBox3D::IsTrivIn(zTBBox3D const &)
 0001:00144760       zTBBox3D::IsTrivInLine(zVEC3 const &,zVEC3 const &)
 0001:00144840       zTBBox3D::Classify(zTBBox3D const &)
 0001:00144900       zTBBox3D::GetNearestPoint(zTPlane const * const)
 0001:00144BF0       zTBBox3D::Scale(float)
 0001:00144C30       zTBBox3D::Scale(zVEC3 const &)
 0001:00144C80       zTBBox3D::GetMinExtent(void)
 0001:00144CC0       zTBBox3D::GetSphere3D(void)
 0001:00144D40       zTBBox3D::TraceRay(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:00144EE0       zTBBox3D::Draw(zCOLOR const &)
 0001:00145240       zTBBox3D::GetCornerPoints(zVEC3 *)
 0001:001453B0       zTBBox3D::GetScreenSize(void)
 0001:001454D0       zTBBox3D::ClassifyToPlane(zTPlane const &)
 0001:001455C0       zTBBox3D::ClassifyToPlane(zTPlane const &,int)
 0001:001457E0       zTBBox3D::ClassifyToPlaneSides(zTPlane const &)
 0001:001458B0       zTBBox3D::ClassifyToPlaneSides(zTPlane const &,int)
 0001:00145AD0       zTBBox3D::SaveBIN(zCFileBIN &)
 0001:00145AF0       zTBBox3D::LoadBIN(zCFileBIN &)
 0001:00145B10       zTBBox2D::Classify(zTBBox2D const &)
 0001:00145BC0       zTBBox2D::ClipToBBox2D(zTBBox2D const &)
 0001:00145C10       zTBBox2D::Draw(void)
 0001:00145CE0       zCOBBox3D::~zCOBBox3D(void)
 0001:00145D70       zCOBBox3D::Draw(int,zCOLOR)
 0001:001469C0       zCOBBox3D::BuildOBB(int,zCPolygon * *,int)
 0001:001473F0       zCOBBox3D::BuildRec(int,zCPolygon * *,int)
 0001:00147720       zCOBBox3D::BuildOBBTree(zCMesh *,int)
 0001:00147760       zCOBBox3D::BuildOBBTree(int,zCPolygon * *,int)
 0001:00147770       zCOBBox3D::TestIntersectionOBB(zCOBBox3D const *)
 0001:00148010       zCOBBox3D::TestIntersectionTreeRec(zCOBBox3D const *)
 0001:001480E0       nullsub_43
 0001:001480F0       zCOBBox3D::TestIntersectionTree(zCOBBox3D const *,zMAT4 const &)
 0001:00148120       zCOBBox3D::TraceRay(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:00148290       zMAT4::Rotate(zVEC3 const &)
 0001:001482F0       zCOBBox3D::CheckOBBPolyIntersection(zCPolygon *,zMAT4 const &)
 0001:00148590       zCOBBox3D::GetBBox3D(void)
 0001:00148790       zCOBBox3D::SetByBBox3D(zTBBox3D const &)
 0001:00148890       zCOBBox3D::Transform(zMAT4 const &)
 0001:001489F0       zCOBBox3D::operator=(zCOBBox3D const &)
 0001:00148B40       zCOBBox3D::SaveBIN(zCFileBIN &)
 0001:00148BD0       zCOBBox3D::LoadBIN(zCFileBIN &)
 0001:00148DE0       zCList<zCOBBox3D>::~zCList<zCOBBox3D>(void)
 0001:00148E60       zCCamera::zCCamera(void)
 0001:00149290       zCCamera::~zCCamera(void)
 0001:00149370       zCCamera::PushTransform(zTCamTrafoType)
 0001:00149400       zCCamera::PopTransform(zTCamTrafoType)
 0001:00149540       zCCamera::SetTransform(zTCamTrafoType,zMAT4 const &)
 0001:001496A0       zCCamera::GetTransform(zTCamTrafoType)
 0001:00149700       zCCamera::Activate(void)
 0001:00149810       zCCamera::CreateProjectionMatrix(zMAT4 &,float,float,float,float)
 0001:00149890       zCCamera::UpdateProjectionMatrix(void)
 0001:001498E0       zCCamera::GetFOV(void)
 0001:001498F0       zCCamera::GetFOV(float &,float &)
 0001:00149920       zCCamera::SetFOV(float)
 0001:00149960       zCCamera::SetFOV(float,float)
 0001:00149A90       zCCamera::UpdateViewport(void)
 0001:00149BD0       zCCamera::SetRenderTarget(zCViewBase *)
 0001:00149BF0       zCCamera::SetRenderScreenFadeTex(zSTRING)
 0001:00149D20       zCCamera::SetUpFrustum(void)
 0001:0014A130       operator*(zVEC3 const &,zMAT4 const &)
 0001:0014A1A0       zTPlane::CalcSignbits(void)
 0001:0014A200       zCCamera::SetFarClipZ(float)
 0001:0014A3B0       zCCamera::BBox3DInFrustum(zTBBox3D const &)
 0001:0014A410       zCCamera::BBox3DInFrustum(zTBBox3D const &,int &)
 0001:0014A650       zCCamera::StopTremor(void)
 0001:0014A660       zCCamera::AddTremor(zVEC3 const &,float,float,zVEC3 const &)
 0001:0014A7D0       zCCamera::PreRenderProcessing(void)
 0001:0014A920       zCCamera::PostRenderProcessing(void)
 0001:0014A960       zCCamera::GetCamPos(zVEC3 &)
 0001:0014A990       zCCamera::InitDrawPolySimple(void)
 0001:0014AA50       zCCamera::CleanupDrawPolySimple(void)
 0001:0014AAB0       zCCamera::DrawPolySimple(zCCamera::zTCamVertSimple *,int,zCMaterial *,int)
 0001:0014ABC0       zCCamera::SetRenderScreenFade(zCOLOR)
 0001:0014ABE0       zCCamera::SetRenderScreenFadeTexAniFPS(float)
 0001:0014AC10       zCCamera::SetRenderScreenFadeTexBlendFunc(zTRnd_AlphaBlendFunc)
 0001:0014AC20       zCCamera::SetRenderCinemaScope(zCOLOR)
 0001:0014AC40       zCCamera::RenderScreenFade(void)
 0001:0014AD30       zCCamera::RenderCinemaScope(void)
 0001:0014AE80       zCCamera::ScreenProjectionTouchesPortalRough(zTBBox3D const &,zTBBox2D const &)
 0001:0014B100       zCCamera::ScreenProjectionTouchesPortal(zTBBox3D const &,zTBBox2D const &)
 0001:0014B550       zCCollisionReport::zCCollisionReport(void)
 0001:0014B570       zCCollisionReport::~zCCollisionReport(void)
 0001:0014B580       zCCollisionReport::`scalar deleting destructor'(uint)
 0001:0014B5E0       zCCollisionDetector::zCCollisionDetector(void)
 0001:0014B640       zCCollisionDetector::`scalar deleting destructor'(uint)
 0001:0014B690       zCCollisionDetector::~zCCollisionDetector(void)
 0001:0014B6C0       zCCollisionDetector::GetTestFuncIndex(zCCollisionObjectDef *,zCCollisionObjectDef *)
 0001:0014B6E0       zCCollisionDetector::GetStaticTestFunc(zCCollisionObjectDef *,zCCollisionObjectDef *)
 0001:0014B700       zCCollisionDetector::GetDynamicTestFunc(zCCollisionObjectDef *,zCCollisionObjectDef *)
 0001:0014B720       zCCollisionDetector::RegisterStaticIntersectionTest(zCCollisionObjectDef *,zCCollisionObjectDef *,int (*)(float,zCCollisionObject *,zMAT4 const &,zCCollisionObject *,zMAT4 const &,zCCollisionReport * *))
 0001:0014B750       zCCollisionDetector::RegisterDynamicIntersectionTest(zCCollisionObjectDef *,zCCollisionObjectDef *,int (*)(zCCollisionObject *,zCCollisionObject *,zCCollisionReport * *))
 0001:0014B780       zCCollisionDetector::CanCollide(zCCollisionObjectDef *,zCCollisionObjectDef *)
 0001:0014B7C0       zCCollisionDetector::S_ResetFreeCollReportList(void)
 0001:0014B7D0       zCCollisionDetector::S_GetNextFreeCollReport(void)
 0001:0014B8B0       zCCollisionDetector::DoDynamicIntersectionTests(zCCollisionObject *,zCArray<zCCollisionObject *> &,zCArray<zCCollisionReport *> &)
 0001:0014BAA0       zCCollisionDetector::DoStaticIntersectionTests(zCCollisionObject *,zCArray<zCCollisionObject *> &,zCArray<zCCollisionReport *> &)
 0001:0014BE50       zCCollisionDetector::DetectCollisions(zCCollisionObject *,zCArray<zCCollisionObject *> const &,zCArray<zCCollisionReport *> &)
 0001:0014BF70       zCArray<zCCollisionObject *>::~zCArray<zCCollisionObject *>(void)
 0001:0014BF90       zCArray<zCCollisionObject *>::AllocDelta(int)
 0001:0014BFF0       zCArray<zCCollisionReport *>::InsertEnd(zCCollisionReport * const &)
 0001:0014C1A0       zCCollisionObject::_CreateNewInstance(void)
 0001:0014C1E0       zCCollisionObject::GetCollObjClass(void)
 0001:0014C1F0       zCCollisionObject::DetectCollisionsSelf(zCArray<zCCollisionObject *> const &,zCArray<zCCollisionReport *> &)
 0001:0014C200       zCCollisionObject::CollisionResponse(zCArray<zCCollisionReport *> const &,int &)
 0001:0014C210       zCCollisionObject::GetAdaptiveStepSize(void)
 0001:0014C220       zCCollisionObject::SuppressCollisionResponse(void)
 0001:0014C230       zCCollisionObject::`scalar deleting destructor'(uint)
 0001:0014C250       zCCollisionObjectDef::zCCollisionObjectDef(int,zCCollisionObject * (*)(void))
 0001:0014C380       zCCollisionObjectDef::~zCCollisionObjectDef(void)
 0001:0014C400       zCCollisionObject::CalcIntermediateTrafo(float,zMAT4 &)
 0001:0014C520       zCCollisionObject::GetLargestBBox3DLocal(zTBBox3D &)
 0001:0014C600       zCCollObjectUndef::_CreateNewInstance(void)
 0001:0014C640       zCCollObjectUndef::GetCollObjClass(void)
 0001:0014C650       zCCollObjectUndef::`scalar deleting destructor'(uint)
 0001:0014C670       zCCollObjectUndef::~zCCollObjectUndef(void)
 0001:0014C6C0       zCCollObjectLevelPolys::_CreateNewInstance(void)
 0001:0014C710       zCCollObjectLevelPolys::GetCollObjClass(void)
 0001:0014C720       zCCollObjectLevelPolys::`scalar deleting destructor'(uint)
 0001:0014C740       zCCollObjectLevelPolys::~zCCollObjectLevelPolys(void)
 0001:0014C7A0       zCCollObjectBase::~zCCollObjectBase(void)
 0001:0014C7F0       zCCollObjectCharacter::_CreateNewInstance(void)
 0001:0014C890       zCCollObjectPoint::_CreateNewInstance(void)
 0001:0014C8D0       zCCollObjectPoint::GetCollObjClass(void)
 0001:0014C8E0       zCCollObjectPoint::`scalar deleting destructor'(uint)
 0001:0014C900       zCCollObjectPoint::~zCCollObjectPoint(void)
 0001:0014C950       zCCollObjectProjectile::_CreateNewInstance(void)
 0001:0014C990       zCCollObjectProjectile::GetCollObjClass(void)
 0001:0014C9A0       zCCollObjectProjectile::`scalar deleting destructor'(uint)
 0001:0014C9C0       zCCollObjectProjectile::~zCCollObjectProjectile(void)
 0001:0014CA10       zCCollObjectComplex::_CreateNewInstance(void)
 0001:0014CA50       zCCollObjectComplex::GetCollObjClass(void)
 0001:0014CA60       zCCollObjectComplex::`scalar deleting destructor'(uint)
 0001:0014CA80       zCCollObjectComplex::~zCCollObjectComplex(void)
 0001:0014CAD0       zCCollObjectBoxBlocker::_CreateNewInstance(void)
 0001:0014CB10       zCCollObjectBoxBlocker::GetCollObjClass(void)
 0001:0014CB20       zCCollObjectBoxBlocker::`scalar deleting destructor'(uint)
 0001:0014CB40       zCCollObjectBoxBlocker::~zCCollObjectBoxBlocker(void)
 0001:0014CB90       zCCollObjectBoxPassThrough::_CreateNewInstance(void)
 0001:0014CBD0       zCCollObjectBoxPassThrough::GetCollObjClass(void)
 0001:0014CBE0       zCCollObjectBoxPassThrough::SuppressCollisionResponse(void)
 0001:0014CBF0       zCCollObjectBoxPassThrough::`scalar deleting destructor'(uint)
 0001:0014CC10       zCCollObjectBoxPassThrough::~zCCollObjectBoxPassThrough(void)
 0001:0014CC20       zCCollObjectPoint::GetLargestBBox3DLocal(zTBBox3D &)
 0001:0014CCC0       zCCollObjectPoint::CollisionResponse(zCArray<zCCollisionReport *> const &,int &)
 0001:0014CE60       zMAT4::Translate(zVEC3 const &)
 0001:0014CE90       zCCollObjectPoint::GetCenterOffsetLocal(void)
 0001:0014CF10       zCCollObjectPoint::GetCenterOffsetNew(void)
 0001:0014D040       zTBBox3D::GetCenterFloor(void)
 0001:0014D070       zCCollObjectPoint::SetUpVectorNew(zVEC3 const &)
 0001:0014D290       zCCollObjectPoint::DetectCollisionsSelf(zCArray<zCCollisionObject *> const &,zCArray<zCCollisionReport *> &)
 0001:0014D2A0       zCCollObjectComplex::GetAdaptiveStepSize(void)
 0001:0014D320       zCCollObjectComplex::CollisionResponse(zCArray<zCCollisionReport *> const &,int &)
 0001:0014D440       TestDynamic_Projectile_Char(zCCollisionObject *,zCCollisionObject *,zCCollisionReport * *)
 0001:0014D750       zVEC3::NormalizeApprox(void)
 0001:0014D7A0       zTBBox3D::GetCenter(void)
 0001:0014D7E0       TestDynamic_XXX_BoxPassThrough(zCCollisionObject *,zCCollisionObject *,zCCollisionReport * *)
 0001:0014D9D0       zCCollObjectBase::S_CalcAdaptiveCollStepFromVisualBBox(zCVisual *)
 0001:0014DA50       zCCollObjectBase::S_CalcGeneric_CollNormal_ContactPoint(zCVob const *,zCVob const *,zCCollisionReport &)
 0001:0014DBD0       zCCollObjectBase::GetLargestBBox3DLocal(zTBBox3D &)
 0001:0014DC60       zCCollObjectBase::S_RegisterCollisionTestFuncs(zCCollisionDetector *)
 0001:0014E730       zCCollObjectCharacter::zCCollObjectCharacter(void)
 0001:0014E8C0       zCCollObjectBase::`scalar deleting destructor'(uint)
 0001:0014E8E0       zCCollObjectCharacter::GetCollObjClass(void)
 0001:0014E8F0       zCCollObjectCharacter::IsDead(void)
 0001:0014E900       zCCollObjectCharacter::DontLetHimComeNearer(zCVob const *)
 0001:0014E910       zCCollObjectCharacter::TurnSpeed(void)
 0001:0014E920       zCCollObjectCharacter::PushAround(zVEC3 const &)
 0001:0014E930       zCCollObjectCharacter::`scalar deleting destructor'(uint)
 0001:0014E950       zCCollObjectCharacter::~zCCollObjectCharacter(void)
 0001:0014EA10       zCCollObjectCharacter::GetPrimitiveCC(void)
 0001:0014EAF0       zCCollObjectCharacter::GetFallbackTrafoCC(zMAT4 const &,zMAT4 const &,zVEC3 const &,int,zMAT4 &)
 0001:0014EF10       zCCollObjectCharacter::S_SlideCC(zVEC3 const &,float,zVEC3 const &)
 0001:0014F1F0       TestStatic_Char_Char(float,zCCollisionObject *,zMAT4 const &,zCCollisionObject *,zMAT4 const &,zCCollisionReport * *)
 0001:0014F840       zCCollObjectCharacter::GetCollisionPoleYDims(float &,float &)
 0001:0014F870       zCCollObjectCharacter::CalcSlideVector(zVEC3 const &,zVEC3 const &,zVEC3 &,zVEC3 &,float &)
 0001:0014FCF0       Alg_AngleUnitRad(zVEC3 const &,zVEC3 const &)
 0001:0014FD50       zCCollObjectCharacter::DoWallSlidingLatentRotation(zMAT4 &)
 0001:0014FE20       zCCollObjectCharacter::FindFloorWaterCeiling(zVEC3 const &,zCCollObjectCharacter::zTSpatialState &)
 0001:00150100       zCCollObjectCharacter::MarkSpatialStateAsUninited(int)
 0001:00150150       zCCollObjectCharacter::TestHardCollisions(zVEC3 const &,zVEC3 const &,zVEC3 &,zCCollObjectCharacter::zTSpatialState &,zVEC3 &)
 0001:00151060       zCCollObjectCharacter::GetSurfaceAlignScanOrigin(zVEC3 const &)
 0001:00151180       zCCollObjectCharacter::TestSoftCollisions(zVEC3 const &,zVEC3 const &,zVEC3 &,zVEC3 &)
 0001:00152230       zCCollObjectCharacter::DetectCollisionsSelf(zCArray<zCCollisionObject *> const &,zCArray<zCCollisionReport *> &)
 0001:001527A0       zCCollObjectCharacter::CollisionResponse(zCArray<zCCollisionReport *> const &,int &)
 0001:00152C00       zCCollObjectCharacter::GetLargestBBox3DLocal(zTBBox3D &)
 0001:00152C20       zCCollObjectCharacter::GetAdaptiveStepSize(void)
 0001:00152C60       zCCollObjectCharacter::PrintDebugInfos(void)
 0001:00152CA0       zArraySortDefaultCompare(void const *,void const *)
 0001:00152CC0       insertionsort(void *,uint,uint,int (*)(void const *,void const *),bool)
 0001:00152F20       zCMemPool<zCConvexCollisionCache>::~zCMemPool<zCConvexCollisionCache>(void)
 0001:00152F60       zCConvexPrimitive::PointNearestToPlane(zVEC3 &,zVEC3 const &,zMAT4 const &,zMAT3 const &)
 0001:00153010       zCConvexPrimitive::CheckCollision(zCConvexPrimitive const *,zCConvexPrimitive const *,zMAT4 const &,zMAT4 const &,zCConvexCollisionCache *,zVEC3 &,float &,zVEC3 &)
 0001:00153A00       zVEC3::operator-=(zVEC3 const &)
 0001:00153A30       zVEC3::operator*=(float)
 0001:00153A60       zCConvexPrimitive::Distance(zCConvexPrimitive const *,zCConvexPrimitive const *,zMAT4 const &,zMAT4 const &,zVEC3 const &,zVEC3 &,zVEC3 &)
 0001:00153C20       zCConvexPrimitive::GetCache(void const *,void const *)
 0001:00153E10       zCConvexCollisionCache::operator delete(void *)
 0001:00153E20       zCConvexCollisionCache::zCConvexCollisionCache(zCCacheIndex const &)
 0001:00153E40       nullsub_44
 0001:00153E50       nullsub_45
 0001:00153E60       nullsub_46
 0001:00153E70       zCConvexPrimitive::Draw(zMAT4 const &,zCOLOR,zCCamera const *)
 0001:00153F50       zCConvexPrimitive::DrawLine(zVEC3 const &,zVEC3 const &)
 0001:00154090       zCConvexPrimitive::DrawLineStrip(zVEC3 const &)
 0001:00154150       zCConvexPrimitive::DrawVirtual(void)
 0001:00154380       zCConvexPrimitiveUnitSphere::zCConvexPrimitiveUnitSphere(void)
 0001:001543D0       zCConvexPrimitive::GetCenterLocal(zVEC3 &)
 0001:00154410       zCConvexPrimitiveUnitSphere::PointNearestToPlaneLocal(zVEC3 const &,zVEC3 &)
 0001:00154430       zCConvexPrimitiveUnitSphere::SymetrySphere(void)
 0001:00154440       zCConvexPrimitiveUnitSphere::SymetryRotation(zVEC3 &)
 0001:00154480       zCConvexPrimitiveUnitSphere::UpdateBBox(void)
 0001:001544F0       zCConvexPrimitiveUnitSphere::`vector deleting destructor'(uint)
 0001:00154510       zCConvexPrimitiveUnitSphere::~zCConvexPrimitiveUnitSphere(void)
 0001:00154520       zCConvexPrimitive::SymetrySphere(void)
 0001:00154530       zCConvexPrimitive::SymetryRotation(zVEC3 &)
 0001:00154540       zCConvexPrimitive::UpdateBBox(void)
 0001:00154590       zCConvexPrimitive::`scalar deleting destructor'(uint)
 0001:001545D0       zCConvexPrimitiveUnitSphere::DrawVirtual(void)
 0001:001546F0       zCConvexPrimitiveUnitSphere::PointIsInLocal(zVEC3 const &)
 0001:00154730       zCConvexPrimitiveScaleTrans::zCConvexPrimitiveScaleTrans(zCConvexPrimitive *,zVEC3 const &,zVEC3 const &)
 0001:001547C0       zCConvexPrimitiveScaleTrans::`vector deleting destructor'(uint)
 0001:001547E0       zCConvexPrimitiveScaleTrans::~zCConvexPrimitiveScaleTrans(void)
 0001:001547F0       zCConvexPrimitiveScaleTrans::PointNearestToPlaneLocal(zVEC3 const &,zVEC3 &)
 0001:001548B0       zCConvexPrimitiveScaleTrans::PointIsInLocal(zVEC3 const &)
 0001:00154900       zCConvexPrimitiveScaleTrans::GetCenterLocal(zVEC3 &)
 0001:00154940       zCConvexPrimitiveScaleTrans::UpdateBBox(void)
 0001:00154990       zCConvexPrimitiveScaleTrans::DrawVirtual(void)
 0001:00154A40       zCConvexPrimitiveEllipsoid::zCConvexPrimitiveEllipsoid(zTBBox3D const &,int)
 0001:00154B90       zCConvexPrimitiveEllipsoid::SymetryRotation(zVEC3 &)
 0001:00154BE0       zCConvexPrimitiveEllipsoid::`scalar deleting destructor'(uint)
 0001:00154C00       zCConvexPrimitiveEllipsoid::~zCConvexPrimitiveEllipsoid(void)
 0001:00154C10       zCConvexPrimitiveEllipsoid::Snap(void)
 0001:00154C50       zCMemPool<zCConvexCollisionCache>::zCMemPool<zCConvexCollisionCache>(uint,uint)
 0001:00154C70       zCCache<zCCacheIndex,zCConvexCollisionCache>::zCCache<zCCacheIndex,zCConvexCollisionCache>(ulong,ulong)
 0001:00154CF0       zCCache<zCCacheIndex,zCConvexCollisionCache>::~zCCache<zCCacheIndex,zCConvexCollisionCache>(void)
 0001:00154E20       zCCache<zCCacheIndex,zCConvexCollisionCache>::ClearCache(void)
 0001:00154F40       zCCache<zCCacheIndex,zCConvexCollisionCache>::PurgeCache(void)
 0001:00155060       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::~zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>(void)
 0001:001550B0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::SizeIndex(void)
 0001:001550C0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::SizeData(void)
 0001:001550D0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::SizeAll(void)
 0001:001550E0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::IndexPtr(ulong)
 0001:001550F0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::DataPtr(ulong)
 0001:00155100       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::ManDatPtr(ulong)
 0001:00155110       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::IndexIsEqual(void const *,void const *)
 0001:00155140       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::CopyIndex(void *,void const *)
 0001:00155160       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::DestructIndex(void *)
 0001:00155170       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::Hash(void const *,ulong &,ulong &)
 0001:00155190       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::ConstructData(void *)
 0001:001551B0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::DestructData(void *)
 0001:001551D0       zCCache<zCCacheIndex,zCConvexCollisionCache>::`scalar deleting destructor'(uint)
 0001:001551F0       zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::`scalar deleting destructor'(uint)
 0001:00155440       zCDecal::_CreateNewInstance(void)
 0001:00155530       zCDecal::operator delete(void *)
 0001:00155550       zCDecal::_GetClassDef(void)
 0001:00155560       zCDecal::IsBBox3DLocal(void)
 0001:00155570       zCDecal::zCDecal(void)
 0001:00155610       zCDecal::`scalar deleting destructor'(uint)
 0001:00155640       zCDecal::~zCDecal(void)
 0001:001556B0       zCDecal::CleanupDecals(void)
 0001:00155730       zCDecal::CreateDecalMeshes(void)
 0001:001557A0       zCDecal::GetFileExtension(int)
 0001:00155800       zCDecal::LoadVisualVirtual(zSTRING const &)
 0001:00155940       zCDecal::GetRenderSortKey(void)
 0001:00155950       zCDecal::SetTexture(zSTRING &)
 0001:00155960       zCDecal::SetTexture(zCTexture *)
 0001:00155970       zCDecal::SetDecalDim(float,float)
 0001:00155990       zCDecal::Render(zTRenderContext &)
 0001:00155B10       zCDecal::SetVisualUsedBy(zCVob *)
 0001:00155B30       zCDecal::GetBBox3D(void)
 0001:00155B80       zCDecal::GetVisualName(void)
 0001:00155BE0       zCDecal::GetAlphaTestingEnabled(void)
 0001:00155C60       zCDecal::DynLightVisual(zCArray<zCVobLight *> const &,zMAT4 *)
 0001:00155D70       zCDecal::Archive(zCArchiver &)
 0001:00155E60       zCDecal::Unarchive(zCArchiver &)
 0001:00156080       zCMgcEigenD::zCMgcEigenD(int)
 0001:00156120       zCMgcEigenD::~zCMgcEigenD(void)
 0001:00156170       zCMgcEigenD::Tridiagonal2(double * *,double *,double *)
 0001:001561E0       zCMgcEigenD::Tridiagonal3(double * *,double *,double *)
 0001:001563A0       zCMgcEigenD::Tridiagonal4(double * *,double *,double *)
 0001:00156A90       zCMgcEigenD::TridiagonalN(int,double * *,double *,double *)
 0001:00156E80       zCMgcEigenD::QLAlgorithm(int,double *,double *,double * *)
 0001:00157150       zCMgcEigenD::DecreasingSort(int,double *,double * *)
 0001:00157200       zCMgcEigenD::IncreasingSort(int,double *,double * *)
 0001:001572B0       zCMgcEigenD::Matrix(double * *)
 0001:00157300       zCMgcEigenD::EigenStuff2(void)
 0001:00157380       zCMgcEigenD::EigenStuff3(void)
 0001:001573B0       zCMgcEigenD::EigenStuff4(void)
 0001:001573E0       zCMgcEigenD::EigenStuffN(void)
 0001:00157420       zCMgcEigenD::EigenStuff(void)
 0001:001574F0       zCMgcEigenD::DecrSortEigenStuff2(void)
 0001:00157580       zCMgcEigenD::DecrSortEigenStuff3(void)
 0001:001575C0       zCMgcEigenD::DecrSortEigenStuff4(void)
 0001:00157600       zCMgcEigenD::DecrSortEigenStuffN(void)
 0001:00157650       zCMgcEigenD::DecrSortEigenStuff(void)
 0001:00157730       zCMgcEigenD::IncrSortEigenStuff2(void)
 0001:001577C0       zCMgcEigenD::IncrSortEigenStuff3(void)
 0001:00157800       zCMgcEigenD::IncrSortEigenStuff4(void)
 0001:00157840       zCMgcEigenD::IncrSortEigenStuffN(void)
 0001:00157890       zCMgcEigenD::IncrSortEigenStuff(void)
 0001:00157970       zCMgcEigenD::Number(uint)
 0001:00157990       zCMgcEigenD::Report(uint)
 0001:00157AB0       ostream::operator<<(ostream & (*)(ostream &))
 0001:00157AD0       flush(ostream &)
 0001:00157AE0       ofstream::`vbase destructor(void)
 0001:00157B00       zCMgcEigenD::Report(ostream &)
 0001:00157BA0       zCEngine::zCEngine(void)
 0001:00157BB0       zCEngine::`scalar deleting destructor'(uint)
 0001:00157BD0       zCEngine::~zCEngine(void)
 0001:00157BE0       zCEngine::Init(HWND__ * *)
 0001:001581E0       zCObjectFactory::operator delete(void *)
 0001:00158200       zCEngine::Shutdown(void)
 0001:001587D0       zCFFT::S_CalcWave2D(float,float,float,zTFFT)
 0001:00158B60       Alg_ArcTan2Approx(float,float)
 0001:00158BD0       zComplex::Mag(void)
 0001:00158C40       zComplex::Phase(void)
 0001:00158CC0       zCFFT::S_Init(void)
 0001:00158DD0       zCFFT::S_SetFrameCtr(int)
 0001:00158DF0       zCFFT::S_AnimateWaveMap(float)
 0001:00158E40       zCFFT::zCFFT(void)
 0001:00158E70       zCFFT::`scalar deleting destructor'(uint)
 0001:00158F20       zCFFT::~zCFFT(void)
 0001:00158FC0       zCFFT::CalcWave2D(float,float,float)
 0001:00159160       zCFFT::IsPowerOfTwo(uint)
 0001:00159180       zCFFT::NumberOfBitsNeeded(uint)
 0001:001591D0       zCFFT::ReverseBits(uint,uint)
 0001:00159200       zCFFT::Index_to_frequency(uint,uint)
 0001:00159270       zCFFT::CreateWaveMap(float,zVEC3 &)
 0001:001592B0       zCFFT::FillH0Array(float,zVEC3 &)
 0001:00159520       zCFFT::AnimateWaveMap(float)
 0001:00159710       zCFFT::fft_float(uint,int,zComplex *,zComplex *)
 0001:00159970       zCFFT::SetFrameCtr(int)
 0001:00159980       zCFFT::SetSpeed(float)
 0001:00159990       zCFFT::GetWaveHeight(int,int)
 0001:001599E0       zCFFT::GetWaveHeight(float,float,float)
 0001:00159A80       zCFFT::GetWaveHeightSmooth(float,float,float)
 0001:00159AC4       __cfltcvt_init_9
 0001:00159BF0       nullsub_24
 0001:00159C00       zCFFT::CreateArray(void)
 0001:00159CA0       zCFFT::FreeArray(zComplex * *)
 0001:00159CE0       zRandom_Gauss::zRandom_Gauss(int,int)
 0001:00159E20       zRandom_Gauss::~zRandom_Gauss(void)
 0001:00159E30       zRandom_Gauss::RandomUniform(void)
 0001:00159EB0       zRandom_Gauss::GetGaussian(float,float)
 0001:00159FA0       zRandom_Gauss::GetInt(int,int)
 0001:00159FD0       zRandom_Gauss::GetFloat(float,float)
 0001:00159FF0       zRandom_Gauss::StepForward(long)
 0001:0015A070       zRandom_Gauss::UnRandomUniform(void)
 0001:0015A140       zRandom_Gauss::StepBack(long)
 0001:0015A200       zRandom_Gauss::rand24(void)
 0001:0015A210       zRandom_Gauss::unRand24(void)
 0001:0015A220       zRandom_Gauss::GetGaussAt(long)
 0001:0015A2A0       nullsub_47
 0001:0015A2B0       TPoly3ds::CheckForWrap(void)
 0001:0015BBB0       nullsub_2
 0001:0015C660       zCFile3DS::Load3DS(zSTRING const &,zCMesh *)
 0001:0015CA90       zPATH::GetFilename(void)
 0001:0015CAB0       zPATH::GetExt(void)
 0001:0015CAD0       zCBinTree3DS::zCBinTree3DS(void)
 0001:0015CE60       zCBinTree3DS::~zCBinTree3DS(void)
 0001:0015CF00       zCBinTree3DS::GetMatListComplete(zCArray<zCMaterial *> &)
 0001:0015D040       zCBinTree3DS::CalcNumPolyVertSubtree(int,int &,int &)
 0001:0015D0A0       zCBinTree3DS::CalcNum3DSObject(void)
 0001:0015D170       zCBinTree3DS::GetPolyListFor3DSObj(int,zCArray<int> &,zCArray<int> &)
 0001:0015D2F0       zCBinTree3DS::BuildMesh3DS(int,int,zCMesh3DS *)
 0001:0015D580       zCBinTree3DS::CreateNodeList(int,int)
 0001:0015D640       zCBinTree3DS::GetLeafIndex(zVEC3 const &)
 0001:0015D6D0       zCBinTree3DS::GetVert3DSIndex(zVEC3 const &,zVEC2 const &)
 0001:0015D8B0       zCBinTree3DS::DropMesh(zCMesh *)
 0001:0015E010       zCFile3DS::Save3DS(zSTRING const &,zCMesh *)
 0001:0015E3D0       zTBBox3D::InitZero(void)
 0001:0015EF10       zCMaterial::GetName(void)
 0001:0015F570       zCMesh3DS::`scalar deleting destructor'(uint)
 0001:0015F590       zCMesh3DS::~zCMesh3DS(void)
 0001:0015F690       zCArray<int>::zCArray<int>(void)
 0001:0015F6A0       zCArray<zCMesh3DS::zTMatEntry *>::zCArray<zCMesh3DS::zTMatEntry *>(void)
 0001:0015F6B0       zCArray<zCMesh3DS::zTMatEntry *>::~zCArray<zCMesh3DS::zTMatEntry *>(void)
 0001:0015F6E0       zCArraySort<TVertex3ds>::zCArraySort<TVertex3ds>(void)
 0001:0015F700       zCArraySort<TVertex3ds>::~zCArraySort<TVertex3ds>(void)
 0001:0015F720       zCArray<zTBinTreeNode>::~zCArray<zTBinTreeNode>(void)
 0001:0015F750       zCArray<zTBinTreeNode>::AllocAbs(int)
 0001:0015F770       zCArray<zTBinTreeNode>::DeleteList(void)
 0001:0015F7B0       zCArray<zCMaterial *>::~zCArray<zCMaterial *>(void)
 0001:0015F7D0       zCArray<zCMaterial *>::IsInList(zCMaterial * const &)
 0001:0015F810       zTBinTreeNode::`vector deleting destructor'(uint)
 0001:0015F870       zTBinTreeNode::~zTBinTreeNode(void)
 0001:0015F8D0       zCArraySort<TVertex3ds>::AllocDelta(int)
 0001:0015F980       zCArray<zTBinTreeNode>::AllocDelta(int)
 0001:0015FB10       zTBinTreeNode::zTBinTreeNode(void)
 0001:0015FB30       zCArray<zCMesh3DS::zTMatEntry *>::AllocDelta(int)
 0001:0015FB90       zClamp(int &,int,int)
 0001:0015FBE0       zCFileQuakeBSP::zCFileQuakeBSP(void)
 0001:0015FBF0       zCFileQuakeBSP::~zCFileQuakeBSP(void)
 0001:0015FC10       zCFileQuakeBSP::LoadQuakeBSP(zSTRING const &,zCMesh *,zCWorld *)
 0001:001614C0       zCLensFlareFX::_CreateNewInstance(void)
 0001:001615F0       zCLensFlareFX::operator delete(void *)
 0001:00161610       zCLensFlareFX::_GetClassDef(void)
 0001:00161620       zCLensFlareFX::`scalar deleting destructor'(uint)
 0001:00161650       zCLensFlareFX::LoadLensFlareScript(void)
 0001:00161940       zCLensFlareFX::ReleaseLensFlareScript(void)
 0001:001619F0       zCLensFlareFX::~zCLensFlareFX(void)
 0001:00161AA0       zCLensFlareFX::Archive(zCArchiver &)
 0001:00161BF0       zCLensFlareFX::Unarchive(zCArchiver &)
 0001:00162020       zCLensFlareFX::zTVobLightLensFlare::zTVobLightLensFlare(void)
 0001:00162040       zCLensFlareFX::RenderLensFlares(zCVob *)
 0001:00162880       zCLensFlareFX::RenderLensFlares(zVEC2 &)
 0001:00162A10       zCLensFlareFX::SetAlpha(int)
 0001:00162A40       zCArray<zCLensFlareFX::zTVobLightLensFlare>::~zCArray<zCLensFlareFX::zTVobLightLensFlare>(void)
 0001:00162A60       zCArray<zCLensFlareFX::zTVobLightLensFlare>::AllocDelta(int)
 0001:00162D20       zCMaterial::_CreateNewInstance(void)
 0001:00162DF0       zCMaterial::_GetClassDef(void)
 0001:00162E00       zCMaterial::zCMaterial(void)
 0001:00162EB0       zCMaterial::`scalar deleting destructor'(uint)
 0001:00162EE0       zCMaterial::zCMaterial(zSTRING const &)
 0001:00162FA0       zCMaterial::zCMaterial(zCMaterial const &)
 0001:00163050       zCMaterial::operator=(zCMaterial const &)
 0001:00163070       zCMaterial::~zCMaterial(void)
 0001:00163130       zCMaterial::InitThisByMaterial(zCMaterial const &)
 0001:00163260       zCMaterial::InitValues(void)
 0001:00163370       zCMaterial::SetDetailObjectVisual(zSTRING const &)
 0001:001634F0       zCMaterial::GetDetailObjectVisual(void)
 0001:00163500       zCMaterial::ApplyTexAniMapping(zCPolygon *)
 0001:00163590       zCMaterial::GetTexAniVector(zCPolygon *)
 0001:00163880       zVEC3::IsEqualEps(zVEC3 const &)
 0001:001638D0       zCMaterial::IsPortalMaterial(void)
 0001:001639C0       zCMaterial::SetTexAniMappingDir(zVEC2 const &)
 0001:001639E0       zCMaterial::SetTexture(zSTRING &)
 0001:00163B20       zCMaterial::SetTexture(zCTexture *)
 0001:00163CD0       zCMaterial::SetDetailTexture(zSTRING &)
 0001:00163DD0       zCMaterial::SetDetailTexture(zCTexture *)
 0001:00163E20       zCMaterial::AutoAssignDetailTexture(void)
 0001:00163FC0       zCMaterial::GetTexScale(void)
 0001:00164020       zCMaterial::SetTexScale(zVEC2)
 0001:00164040       zCMaterial::RemoveTexture(void)
 0001:00164110       zCMaterial::GetMatGroupString(zTMat_Group)
 0001:00164170       zCMaterial::GetMatGroupString(void)
 0001:001641D0       zCMaterial::SetMatGroupByString(zSTRING const &)
 0001:001643D0       zCMaterial::RefreshAvgColorFromTexture(void)
 0001:00164420       zCMaterial::Archive(zCArchiver &)
 0001:00164780       zCMaterial::Unarchive(zCArchiver &)
 0001:00164D30       zCTexAniCtrl::zCTexAniCtrl(void)
 0001:00164D50       zCTexAniCtrl::AdvanceAni(zCTexture *)
 0001:00164E30       zCMaterial::SearchName(zSTRING &)
 0001:00164EA0       zCMallocGeneric::~zCMallocGeneric(void)
 0001:00164EB0       zCMalloc::GetStats(zTMallocStats &)
 0001:00164EC0       zCMalloc::GetProcessStats(zTMallocProcessStats &)
 0001:00164ED0       zCMalloc::DumpHeap(zTMallocDumpHeapMode)
 0001:00164EE0       zCMalloc::CheckHeap(void)
 0001:00164EF0       zCMalloc::CheckPtr(void *)
 0001:00164F00       zCMalloc::`scalar deleting destructor'(uint)
 0001:00164F20       zCMallocGeneric::zCMallocGeneric(void)
 0001:00164F30       zCMallocGeneric::`scalar deleting destructor'(uint)
 0001:00164F50       operator new(uint)
 0001:00164F60       operator delete(void *)
 0001:00164F90       operator new(uint,char const *,char const *,int)
 0001:00164FA0       operator delete(void *,char const *,char const *,int)
 0001:00164FD0       zCMallocGeneric::Malloc(uint)
 0001:00164FE0       zCMallocGeneric::Malloc(uint,char const *,char const *,int)
 0001:00164FF0       zCMallocGeneric::Realloc(void *,uint)
 0001:00165010       zCMallocGeneric::Free(void *)
 0001:00165020       zCMallocGeneric::GetStats(zTMallocStats &)
 0001:00165040       zCMallocGeneric::Init(int)
 0001:00165050       zCMallocGeneric::Shutdown(void)
 0001:00165070       zCVolatileMemoryBase::zCVolatileMemoryBase(uint,uint,zTVolatileOverflowMode)
 0001:001650C0       zCVolatileMemoryBase::Destroyed(void *)
 0001:001650D0       zCVolatileMemoryBase::zCVolatileMemoryBase(uint,zTVolatileOverflowMode)
 0001:00165110       zCVolatileMemoryBase::~zCVolatileMemoryBase(void)
 0001:00165140       zCVolatileMemoryBase::Init(uint)
 0001:00165160       zCVolatileMemoryBase::Alloc(void)
 0001:00165300       zCVolatileMemoryBase::Mark(void)
 0001:00165310       zCVolatileMemoryBase::Restore(uint)
 0001:001653C0       zCVolatileMemoryBase::MaxFillPercentage(int)
 0001:001653D0       zCMemPoolBase::zCMemPoolBase(uint)
 0001:00165400       zCMemPoolBase::zCMemPoolBase(uint,uint,uint)
 0001:00165440       zCMemPoolBase::~zCMemPoolBase(void)
 0001:001654A0       zCMemPoolBlock::`scalar deleting destructor'(uint)
 0001:001654E0       zCMemPoolBase::Alloc(void)
 0001:00165670       zCMemPoolBlock::operator delete(void *)
 0001:00165680       zCMemPoolBase::Free(void *)
 0001:001656C0       zCMemPoolBase::PreAlloc(uint,int)
 0001:001658C0       zCMemPoolBase::PoolAdd(void *,int,int)
 0001:00165A80       zCMemPoolBase::SetMemDebug(char const *,char const *,int)
 0001:00165AA0       zCMemPoolBase::DisablePools(int)
 0001:00165CD0       zCMesh::_CreateNewInstance(void)
 0001:00165D90       zCMesh::zCMesh(void)
 0001:00165FF0       zCVisual::IsBBox3DLocal(void)
 0001:00166000       zCVisual::SetVisualUsedBy(zCVob *)
 0001:00166010       zCMesh::_GetClassDef(void)
 0001:00166020       zCMesh::GetVisualName(void)
 0001:00166070       zCMesh::GetBBox3D(void)
 0001:001660A0       zCMesh::GetOBBox3D(void)
 0001:001660B0       zCMesh::CanTraceRay(void)
 0001:001660C0       zCMesh::GetAlphaTestingEnabled(void)
 0001:001660D0       zCMesh::SetAlphaTestingEnabled(int)
 0001:001660E0       zCMesh::`scalar deleting destructor'(uint)
 0001:00166110       zCMesh::~zCMesh(void)
 0001:00166250       zCMesh::GetFileExtension(int)
 0001:00166270       zCMesh::LoadVisualVirtual(zSTRING const &)
 0001:00166290       zCMesh::DeleteAll(void)
 0001:001664A0       zCVertex::~zCVertex(void)
 0001:001664C0       zCVertex::`vector deleting destructor'(uint)
 0001:00166530       zCPolygon::`vector deleting destructor'(uint)
 0001:00166590       zCMesh::SearchName(zSTRING const &)
 0001:00166600       zCMesh::Load(zSTRING const &,int)
 0001:00166F30       zPATH::GetDir(void)
 0001:00166F50       zCFileBIN::zCFileBIN(void)
 0001:00166F70       zCFileBIN::~zCFileBIN(void)
 0001:00166FF0       zCFileBIN::BinCreate(zSTRING const &)
 0001:00167020       zCFileBIN::BinClose(void)
 0001:001670A0       zCMesh::S_InitVertexMergeCache(zCMesh *)
 0001:00167320       zCMesh::S_DeleteVertexMergeCache(void)
 0001:00167350       zCMesh::VertexInMesh(zVEC3 const &)
 0001:00167500       zCMesh::AllocVerts(int)
 0001:001675F0       zCMesh::AllocPolys(int)
 0001:001676B0       zCMesh::AddVertex(zCVertex *)
 0001:001678F0       zCMesh::AddVertex(zVEC3 &)
 0001:00167B80       zCMesh::AddVertexSmart(zVEC3 &)
 0001:00167C10       zCMesh::AddPoly(zVEC3 &,zVEC3 &,zVEC3 &,zVEC2 &,zVEC2 &,zVEC2 &)
 0001:00167EA0       zCMesh::AddPoly(zCVertex *,zCVertex *,zCVertex *)
 0001:00167FB0       zCMesh::AddPoly(zCVertex *,zCVertex *,zCVertex *,zCVertex *)
 0001:001680C0       zCMesh::AddPoly(zCPolygon *)
 0001:00168170       zCMesh::AddPoly(void)
 0001:00168250       zCMesh::DeletePoly(zCPolygon *)
 0001:00168330       zCMesh::DynLightVisual(zCArray<zCVobLight *> const &,zMAT4 *)
 0001:00168340       zCMesh::DynLightScalePrelit(zCOLOR)
 0001:00168350       zCMesh::PrelightMesh(zMAT4 *)
 0001:00168760       zCMesh::SharePoly(int)
 0001:00168780       zCMesh::CheckRayPolyIntersection(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:001687E0       zCMesh::CheckRayPolyIntersection(zCCamera &,int,int,zVEC3 &)
 0001:00168990       zCMesh::PickPolygon(zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:00168A60       zCMesh::PickPolygon(zCCamera &,int,int,zVEC3 &)
 0001:00168C60       zCMesh::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:00168DE0       zCMesh::CalcVertexNormals(zCMesh::zTCalcVertNormalMode,zCBspTree *)
 0001:001694E0       zCMesh::UnSmoothMesh(void)
 0001:00169580       zCMesh::SetDefaultPlanarMapping(float,float)
 0001:00169610       zCMesh::CalcBBox3D(int)
 0001:001697A0       zCMesh::Center(void)
 0001:001698F0       zCMesh::TransformAllVerts(zMAT4 const &,int)
 0001:001699B0       zCMesh::MergeMesh(zCMesh *,zMAT4 const &)
 0001:00169E90       zCMesh::CalcNormals(void)
 0001:00169EC0       zCMesh::SetMaterial(zCMaterial *)
 0001:00169F20       zCMesh::ScaleXZ(float,float)
 0001:00169F90       zCMesh::Scale(float,float,float)
 0001:0016A050       zCMesh::CheckForMaterials(void)
 0001:0016A190       zCMesh::Render(zTRenderContext &)
 0001:0016A210       zCMesh::Render(zTRenderContext &,zCOLOR *)
 0001:0016A4F0       zCMesh::RenderHorizon(zTRenderContext &,float)
 0001:0016A7A0       zCMesh::RenderDecal(float,float,float,int)
 0001:0016A960       zMAT4::SetAtVector(zVEC3 const &)
 0001:0016A980       zCMesh::RenderDecalHorizon(float,float,float,float)
 0001:0016AD00       zCCamera::ProjectClamp(zCVertexTransform *,float)
 0001:0016ADA0       zCMesh::RenderDecal(zTRenderContext &,int)
 0001:0016B000       zCMesh::ResetStaticLight(void)
 0001:0016B040       zCMesh::SetStaticLight(zCOLOR)
 0001:0016B080       zCMesh::SetLightDyn(zCOLOR)
 0001:0016B0C0       zCMesh::SetLightStatAlpha(uchar)
 0001:0016B100       zCMesh::ResetLightDynToLightStat(void)
 0001:0016B140       zCMesh::AddToLightDyn(zCOLOR)
 0001:0016B180       zCMesh::CreateQuadMesh(int)
 0001:0016B4D0       zCMesh::CreateTriMesh(void)
 0001:0016B6A0       zCMesh::CheckTexUVOnPlane(zCArray<zCVertex *> const &,zCArray<zCVertFeature> const &)
 0001:0016BB80       operator+(zVEC2 const &,zVEC2 const &)
 0001:0016BBA0       zCMesh::ConvertTrisToNPolys(zCPolygon * *,int,zCMesh *,int)
 0001:0016C760       zCVertFeature::zCVertFeature(void)
 0001:0016C780       zCMesh::GetFileVersion(void)
 0001:0016C790       zCMesh::SaveMSH(zCFileBIN &)
 0001:0016C7B0       zCMesh::SaveMSH(zSTRING const &)
 0001:0016C940       zCMesh::SaveMSH(zCFileBIN &,zCPolygon * *,int,zCMesh *)
 0001:0016EFE0       zCFileBIN::BinStartChunk(ushort)
 0001:0016F080       zCFileBIN::BinEndChunk(void)
 0001:0016F0E0       zCMesh::LoadMSH(zCFileBIN &,int)
 0001:00170680       zCLightMap::operator delete(void *)
 0001:001706A0       zCVertex::zCVertex(void)
 0001:001706B0       zCMesh::LoadMSH(zSTRING const &,int)
 0001:00170980       zCMesh::CreateListsFromArrays(void)
 0001:00170A50       zCMesh::ClearLists(void)
 0001:00170AB0       zCMesh::ArraysToLists(void)
 0001:00170B20       S_FeaturesAreEqual(zCVertFeature const &,zCVertFeature const &)
 0001:00170B90       zCMesh::ShareFeatures(void)
 0001:00171900       zCOLOR::Reset(void)
 0001:00171910       zCArray<zCVertFeature *>::`vector deleting destructor'(uint)
 0001:00171970       zCMesh::UnshareFeatures(void)
 0001:00171A90       zCMesh::FlipPolys(void)
 0001:00171D10       zCMesh::SortPolysByMaterial(void)
 0001:00171DC0       zCMesh::SortPolysByList(zCPolygon * *,int)
 0001:00172650       zCMesh::DeletePolyAndVerts(zCPolygon *)
 0001:001726E0       zCMesh::DeletePolyAndVerts(ulong)
 0001:00172860       zCMesh::RemoveDegeneratePolys(void)
 0001:00172A90       zCMesh::CombineLightmaps(void)
 0001:00173D10       zCCombine::zCCombine(void)
 0001:00173D60       zCCombine::CombineWith(zCLightMap *)
 0001:00173E20       zCCombine::CombineWith(zCLightMap *,int,int)
 0001:00173FE0       zCCombine::~zCCombine(void)
 0001:00174800       zCMemPool<zCVertex>::PoolAdd(zCVertex *,int,int)
 0001:00174810       zCMemPool<zCVertFeature>::PoolAdd(zCVertFeature *,int,int)
 0001:00174820       zCMemPool<zCPolygon>::PoolAdd(zCPolygon *,int,int)
 0001:00174830       zCArraySort<zCVertex *>::InsertSort(zCVertex * const &)
 0001:00174980       zCArraySort<zCVertex *>::DeleteList(void)
 0001:001749A0       zCArray<zCMaterial *>::Search(zCMaterial * const &)
 0001:001749D0       zCArray<zVEC3>::~zCArray<zVEC3>(void)
 0001:001749F0       zCArray<zCVertex *>::~zCArray<zCVertex *>(void)
 0001:00174A10       zCArray<zCVertex *>::InsertEnd(zCVertex * const &)
 0001:00174AE0       zCArray<zCVertFeature>::~zCArray<zCVertFeature>(void)
 0001:00174B00       zCArray<zCVertFeature *>::zCArray<zCVertFeature *>(void)
 0001:00174B10       zCArray<zCVertFeature *>::~zCArray<zCVertFeature *>(void)
 0001:00174B30       zCArray<zCVertFeature *>::InsertEnd(zCVertFeature * const &)
 0001:00174C00       zCArraySort<zCLightMap *>::~zCArraySort<zCLightMap *>(void)
 0001:00174C20       zCArraySort<zCLightMap *>::Search(zCLightMap * const &)
 0001:00174C90       zCArraySort<zCTexture *>::~zCArraySort<zCTexture *>(void)
 0001:00174CB0       zCArraySort<zCTexture *>::Search(zCTexture * const &)
 0001:00174D20       zCSparseArray<void const *,int>::zCSparseArray<void const *,int>(ulong)
 0001:00174D80       zCArray<zCCombine::zCCItem *>::zCArray<zCCombine::zCCItem *>(void)
 0001:00174D90       zCArray<zCCombine::zCCItem *>::~zCArray<zCCombine::zCCItem *>(void)
 0001:00174DB0       zCArray<zCCombine *>::~zCArray<zCCombine *>(void)
 0001:00174DD0       zCArraySort<zCVertex *>::AllocDelta(int)
 0001:00174E30       zCArray<zVEC3>::AllocDelta(int)
 0001:00174EB0       zCArray<zCVertex *>::AllocDelta(int)
 0001:00174F10       zCArray<zCVertFeature>::InsertEnd(zCVertFeature const &)
 0001:00174F60       zCArray<zCVertFeature *>::AllocDelta(int)
 0001:00174FC0       zCArraySort<zCLightMap *>::AllocDelta(int)
 0001:00175020       zCArraySort<zCTexture *>::AllocDelta(int)
 0001:00175080       zCArray<zCCombine::zCCItem *>::AllocDelta(int)
 0001:001750E0       zCArray<zCCombine *>::AllocDelta(int)
 0001:00175140       zCArray<zCVertFeature>::AllocDelta(int)
 0001:00175420       zCModel::_CreateNewInstance(void)
 0001:00175580       zCVisualAnimate::_GetClassDef(void)
 0001:00175590       zCModel::operator delete(void *)
 0001:001755B0       zCModel::_GetClassDef(void)
 0001:001755C0       zCModel::IsBBox3DLocal(void)
 0001:001755D0       zCModel::CanTraceRay(void)
 0001:001755E0       zCModel::StartAnimation(zSTRING const &)
 0001:001755F0       zCModel::StopAnimation(zSTRING const &)
 0001:00175690       zCModel::IsAnimationActive(zSTRING const &)
 0001:00175720       zCModel::`scalar deleting destructor'(uint)
 0001:00175750       zCVisualAnimate::~zCVisualAnimate(void)
 0001:00175760       zCVisualAnimate::`scalar deleting destructor'(uint)
 0001:00175980       zCModelAni::_CreateNewInstance(void)
 0001:001759E0       zCModelAni::operator delete(void *)
 0001:00175B00       zCModelAniActive::zCModelAniActive(void)
 0001:00175BF0       zCModelAniActive::~zCModelAniActive(void)
 0001:00175C10       zCModelAniActive::SetDirection(zTMdl_AniDir)
 0001:00175C60       zCModelAniActive::GetProgressPercent(void)
 0001:00175CA0       zCModelAniActive::SetProgressPercent(float)
 0001:00175CF0       zCModelAniActive::SetActFrame(float)
 0001:00175D40       zCModelTexAniState::zCModelTexAniState(void)
 0001:00175D60       zCModelTexAniState::~zCModelTexAniState(void)
 0001:00175D80       zCModelTexAniState::DeleteTexList(void)
 0001:00175DA0       zCModelTexAniState::UpdateTexList(void)
 0001:00175DE0       zCModelTexAniState::SetChannelVariation(int,int,zSTRING *)
 0001:00175E50       zCModelTexAniState::BuildTexListFromMeshLib(zCModelMeshLib *)
 0001:00175ED0       zCModelTexAniState::BuildTexListFromMesh(zCMesh *)
 0001:00176060       zCModelTexAniState::BuildTexListFromProgMesh(zCProgMeshProto *)
 0001:001761D0       zCModelTexAniState::AddTexListFromMeshLib(zCModelMeshLib *,zCArray<zCTexture *> &)
 0001:00176430       zCModelTexAniState::AddTexListFromMesh(zCMesh *,zCArray<zCTexture *> &)
 0001:00176590       zCModelTexAniState::AddTexListFromProgMesh(zCProgMeshProto *,zCArray<zCTexture *> &)
 0001:001766E0       zCModelTexAniState::FinishTexList(zCArray<zCTexture *> &)
 0001:00176870       zCModelNodeInst::zCModelNodeInst(void)
 0001:00176940       zCModelNodeInst::zCModelNodeInst(zCModelNode *)
 0001:00176A30       zCModelNodeInst::~zCModelNodeInst(void)
 0001:00176AB0       zCModelNodeInst::Init(void)
 0001:00176B40       zCModelNodeInst::InitByModelProtoNode(zCModelNode *)
 0001:00176BF0       zCModelNodeInst::SetNodeVisualS(zCVisual *,int)
 0001:00176CC0       zCModel::~zCModel(void)
 0001:00176F70       zCModelNodeInst::`vector deleting destructor'(uint)
 0001:00176FD0       zCModel::Init(void)
 0001:00177240       zCModel::zCModel(zCModelPrototype *)
 0001:00177400       zCModel::CopyProtoNodeList(void)
 0001:001776C0       zCModel::SetVisualUsedBy(zCVob *)
 0001:00177740       zCModel::GetFileExtension(int)
 0001:00177760       zCModel::LoadVisualVirtual(zSTRING const &)
 0001:001777F0       zCModel::ApplyModelProtoOverlay(zSTRING const &)
 0001:00177840       zCModel::ApplyModelProtoOverlay(zCModelPrototype *)
 0001:00177A90       zCModel::HasAppliedModelProtoOverlay(zCModelPrototype *)
 0001:00177AC0       zCModel::HasAppliedModelProtoOverlay(zSTRING const &)
 0001:00177C40       zCModel::RemoveModelProtoOverlay(zSTRING const &)
 0001:00177E40       zCModel::RemoveModelProtoOverlay(zCModelPrototype *)
 0001:00177FC0       zCModel::CalcNodeListBBoxWorld(void)
 0001:001780F0       zCModel::GetBBox3DNodeWorld(zCModelNodeInst *)
 0001:00178140       zCModel::GetNodePositionWorld(zCModelNodeInst *)
 0001:00178170       zCModel::CalcModelBBox3DWorld(void)
 0001:001782A0       zCModel::SetNodeVisual(zCModelNodeInst *,zCVisual *,int)
 0001:001782D0       zCModel::SetDynLightMode(int)
 0001:001782F0       zCModel::SetupLowestLOD(zTRenderContext &)
 0001:00178490       zCModel::GetLowestLODNumPolys(void)
 0001:001784B0       zCModel::GetLowestLODPoly(int,zVEC3 * &)
 0001:001784F0       zCModel::GetMaterial(int)
 0001:00178530       zCModel::GetNumMaterials(void)
 0001:00178560       zCModel::RenderNodeList(zTRenderContext &,zCArray<zMAT4 *> &,zCRenderLightContainer &,zTPMLightingMode)
 0001:00179440       zCCamera::Project(zVEC3 const * const,int &,int &)
 0001:001794E0       zCModel::Render(zTRenderContext &)
 0001:001797A0       zCRenderLightContainer::~zCRenderLightContainer(void)
 0001:001797C0       zCRenderLight::zCRenderLight(void)
 0001:001797D0       zCModel::CheckNodeCollisionList(zCOBBox3D const &,zMAT4 &)
 0001:00179870       zCModel::CheckNodeCollision(zCModel *,zCModelNodeInst *,zMAT4 &,zCList<zCModelNodeInst> &)
 0001:001799C0       zCModel::GetTrafoNodeToModel(zCModelNodeInst *)
 0001:00179AF0       zCModel::SetRandAnisEnabled(int)
 0001:00179B60       zCModel::GetActiveAni(int)
 0001:00179BA0       zCModel::GetActiveAni(zCModelAni *)
 0001:00179BE0       zCModel::StopAni(int)
 0001:00179C60       zCModel::StopAni(zCModelAni *)
 0001:00179CB0       zCModel::StopAni(zCModelAniActive *)
 0001:00179E20       zCModel::GetAnyAnimation(void)
 0001:00179E70       zCModel::GetAniTransLerp(zCModelAni *,float,int)
 0001:00179F70       zCModel::StartAni(zSTRING const &,int)
 0001:0017A070       zCModel::StartAni(int,int)
 0001:0017A0C0       zCModel::StartAni(zCModelAni *,int)
 0001:0017A770       zCModel::AssertActiveAniListAlloced(void)
 0001:0017A7E0       zCModel::HostVobRemovedFromWorld(zCVob *,zCWorld *)
 0001:0017A890       zCModel::DoAniEvents(zCModelAniActive *)
 0001:0017B7D0       zCModel::AdvanceAni(zCModelAniActive *,int &)
 0001:0017BA90       zCModel::AdvanceAnis(void)
 0001:0017CC30       zCModel::SetModelScale(zVEC3 const &)
 0001:0017CDA0       zCModel::IsStateActive(zCModelAni const *)
 0001:0017CF20       zCModel::GetBBox3D(void)
 0001:0017CF60       zCModel::GetVisualName(void)
 0001:0017CFF0       zCModel::SearchNode(zSTRING const &)
 0001:0017D0A0       zCModel::SetNodeMeshTexture(zSTRING const &,int,int,zSTRING *)
 0001:0017D1D0       zCModel::SetMeshLibTexture(zSTRING const &,int,int,zSTRING *)
 0001:0017D3D0       zCModel::RemoveMeshLibAll(void)
 0001:0017D400       zCModel::RemoveMeshLib(zSTRING const &)
 0001:0017D610       zCModel::ApplyMeshLib(zSTRING const &)
 0001:0017DA10       zCModelMeshLib::operator delete(void *)
 0001:0017DA30       zCModelMeshLib::_GetClassDef(void)
 0001:0017DA40       zCModelMeshLib::`scalar deleting destructor'(uint)
 0001:0017DA70       zCModel::UpdateMeshLibTexAniState(void)
 0001:0017DAF0       zCModelNodeInst::AddNodeAni(zCModelAniActive *)
 0001:0017DD20       zCModelNodeInst::RemoveAllNodeAnis(void)
 0001:0017DD30       zCModelNodeInst::RemoveNodeAni(zCModelAniActive *)
 0001:0017DE20       zCModelNodeInst::FindMasterAni(void)
 0001:0017DE90       zCModelNodeInst::FadeOutNodeAni(zCModelAniActive *)
 0001:0017DF50       zCModel::FadeOutAni(int)
 0001:0017DFE0       zCModel::FadeOutAni(zCModelAni *)
 0001:0017E020       zCModel::FadeOutAni(zCModelAniActive *)
 0001:0017E1F0       zCModel::FadeOutAnisLayerRange(int,int)
 0001:0017E240       zCModel::StopAnisLayerRange(int,int)
 0001:0017E290       zCModel::GetProgressPercent(zSTRING const &)
 0001:0017E340       zCModel::GetProgressPercent(int)
 0001:0017E3B0       zCModel::SetCombineAniXY(int,float,float)
 0001:0017E400       zCModel::GetCombineAniXY(int,float &,float &)
 0001:0017E470       zCModelNodeInst::CalcWeights(zCModel *)
 0001:0017E6B0       zCModelNodeInst::AddToNodeAniWeight(int,float)
 0001:0017E720       zCModelNodeInst::CalcBlending(zCModel *)
 0001:0017E880       zCModel::CalcNodeListAniBlending(void)
 0001:0017E8B0       zCModelNodeInst::GetNodeAniListIndex(zCModelAniActive const *)
 0001:0017E8E0       zCModel::CalcTransBlending(void)
 0001:0017EDB0       zCModelAniActive::DoCombineAni(zCModel *,int,int)
 0001:0017F6A0       zCModel::AttachChildVobToNode(zCVob *,zCModelNodeInst *)
 0001:0017F7F0       zCModel::RemoveChildVobFromNode(zCVob *)
 0001:0017F870       zCModel::GetAttachedNodeVob(zCModelNodeInst *)
 0001:0017F8B0       zCModel::RemoveAllChildVobsFromNode(void)
 0001:0017F900       zCModel::UpdateAttachedVobs(void)
 0001:0017FA50       zCModel::RemoveStartedVobFX(zCVob *)
 0001:0017FB00       zCModel::GetVelocityRing(void)
 0001:0017FB60       zCModel::ResetVelocity(void)
 0001:0017FBF0       zCModel::GetAniMinMaxWeight(zCModelAniActive *,float &,float &)
 0001:0017FE90       zCModel::PrintStatus(int,int)
 0001:001805E0       zCModel::CorrectAniFreezer(void)
 0001:00180850       zCModel::psb_WriteAniBlock(zCBuffer &,int,int)
 0001:001809E0       zCModel::psb_ReadAniBlock(zCBuffer &,int,zCModelAniActive *)
 0001:00180C30       zCModel::PackStateBinary(zCBuffer &)
 0001:00180F80       zCModel::UnpackStateBinary(zCBuffer &)
 0001:00181700       zCModel::ShowAniListAdd(zCModelAni *)
 0001:00181770       zCModel::ShowAniList(int)
 0001:001817E0       zCModel::GetRenderSortKey(void)
 0001:00181800       zCModel::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:00182340       zTAniAttachment::~zTAniAttachment(void)
 0001:00182360       zTAniAttachment::zTAniAttachment(void)
 0001:00182370       zCModel::AniAttachmentCompare(void const *,void const *)
 0001:001823A0       zCModel::SearchAniAttachList(int)
 0001:00182420       zCModel::RemoveAniAttachment(int)
 0001:00182550       zTAniAttachment::`scalar deleting destructor'(uint)
 0001:00182570       zCModel::RemoveAllAniAttachments(void)
 0001:001825C0       zCModel::RemoveAllVobFX(void)
 0001:00182650       zCModel::GetCreateAniAttachment(int)
 0001:001828A0       zCModel::DeleteRandAniList(int)
 0001:00182930       zCModel::InsertRandAni(int,int,int)
 0001:00182A30       zCModel::GetRandAniFreq(int)
 0001:00182AC0       zCModel::SetRandAniFreq(int,float)
 0001:00182AE0       zCModel::RecalcRootPosLocal(int)
 0001:00182C50       zCArray<zCModelMeshLib::zTNodeMesh>::zCArray<zCModelMeshLib::zTNodeMesh>(void)
 0001:00182C60       zCArray<zCModelMeshLib::zTNodeMesh>::~zCArray<zCModelMeshLib::zTNodeMesh>(void)
 0001:00182C80       zCArray<zCMeshSoftSkin *>::zCArray<zCMeshSoftSkin *>(void)
 0001:00182C90       zCArray<zCMeshSoftSkin *>::~zCArray<zCMeshSoftSkin *>(void)
 0001:00182CB0       zCArray<zCModelAniEvent *>::~zCArray<zCModelAniEvent *>(void)
 0001:00182CD0       zCArray<zCMesh *>::~zCArray<zCMesh *>(void)
 0001:00182CF0       zCArray<zCModelPrototype *>::~zCArray<zCModelPrototype *>(void)
 0001:00182D10       zCArray<zCModelPrototype *>::InsertEnd(zCModelPrototype * const &)
 0001:00182DE0       zCArray<zCModelPrototype *>::RemoveOrderIndex(int)
 0001:00182E10       zCArray<zCModelNodeInst *>::~zCArray<zCModelNodeInst *>(void)
 0001:00182E30       zCArraySort<zTAniAttachment *>::~zCArraySort<zTAniAttachment *>(void)
 0001:00182E50       zCArraySort<zTAniAttachment *>::Search(zTAniAttachment * const &)
 0001:00182EC0       zCArray<zCModel::zTMdl_NodeVobAttachment>::~zCArray<zCModel::zTMdl_NodeVobAttachment>(void)
 0001:00182EE0       zCArray<zCModel::zTMdl_NodeVobAttachment>::RemoveIndex(int)
 0001:00182F10       zCArray<zCModel::zTMdl_StartedVobFX>::~zCArray<zCModel::zTMdl_StartedVobFX>(void)
 0001:00182F30       zCArray<zCModel::zTAniMeshLibEntry>::~zCArray<zCModel::zTAniMeshLibEntry>(void)
 0001:00182F50       zCArray<zCModel::zTMeshLibEntry *>::~zCArray<zCModel::zTMeshLibEntry *>(void)
 0001:00182F70       zCArray<zCModel::zTMeshLibEntry *>::InsertEnd(zCModel::zTMeshLibEntry * const &)
 0001:00183040       zCList<zCModelNodeInst>::Insert(zCModelNodeInst *)
 0001:00183090       zCArray<zCTexture *>::~zCArray<zCTexture *>(void)
 0001:001830B0       zCArray<zCTexture *>::IsInList(zCTexture * const &)
 0001:001830F0       zCArray<zMAT4 *>::~zCArray<zMAT4 *>(void)
 0001:00183110       zCArray<zCMeshSoftSkin *>::AllocDelta(int)
 0001:00183170       zCArray<zCModelAniEvent *>::InsertEnd(zCModelAniEvent * const &)
 0001:00183240       zCArray<zCModelPrototype *>::AllocDelta(int)
 0001:001832A0       zCArray<zCModelNodeInst *>::AllocDelta(int)
 0001:00183300       zCArray<zCModel::zTMdl_NodeVobAttachment>::InsertEnd(zCModel::zTMdl_NodeVobAttachment const &)
 0001:001833E0       zCArray<zCModel::zTMdl_StartedVobFX>::InsertEnd(zCModel::zTMdl_StartedVobFX const &)
 0001:001834C0       zCArray<zCTexture *>::InsertEnd(zCTexture * const &)
 0001:00183590       zCArray<zMAT4 *>::AllocDelta(int)
 0001:001835F0       zCArray<zCTexture *>::AllocDelta(int)
 0001:00183870       zCModelMeshLib::_CreateNewInstance(void)
 0001:001839C0       zCModelNode::zCModelNode(void)
 0001:00183B00       zCModelNode::zCModelNode(zCModelNode const &)
 0001:00183C90       zCModelNode::~zCModelNode(void)
 0001:00183D30       zCModelNode::SetNodeVisualS(zCVisual *)
 0001:00183DD0       zTMdl_AniSample::CalcSamplePosConstants(float,float)
 0001:00183DF0       zTMdl_AniSample::SetSamplePosConstants(float,float)
 0001:00183E10       zTMdl_AniSample::Pack(zCQuat const &,zVEC3 const &)
 0001:00183ED0       zTMdl_AniSample::Unpack(zCQuat &,zVEC3 &)
 0001:00183F40       zTMdl_AniSample::PackTrans(zVEC3 const &)
 0001:00183F90       zTMdl_AniSample::UnpackTrans(zVEC3 &)
 0001:00183FF0       zTMdl_AniSample::PackQuat(zCQuat const &)
 0001:00184070       zTMdl_AniSample::UnpackQuat(zCQuat &)
 0001:00184120       zCModelAni::zCModelAni(void)
 0001:001842C0       zCModelAni::_GetClassDef(void)
 0001:001842D0       zCModelAni::`scalar deleting destructor'(uint)
 0001:00184300       zCModelAni::~zCModelAni(void)
 0001:001844D0       zCModelAniEvent::`vector deleting destructor'(uint)
 0001:00184530       zCModelAni::PrecacheAniEventData(void)
 0001:00184600       zCModelAni::GetAniVelocity(void)
 0001:00184780       zCModelAni::GetAniTranslation(void)
 0001:001848C0       zCModelAni::AddTrafoMatrix(zMAT4 * *)
 0001:00184D60       zCModelAni::GetQuat(int,int)
 0001:00184DC0       zCModelAni::GetTrans(int,int)
 0001:00184E60       zCModelAni::SetTrans(int,int,zVEC3 const &)
 0001:00184EE0       zCModelAni::SetQuat(int,int,zCQuat const &)
 0001:00184F80       zCModelAni::AddNodeList(zCTree<zCModelNode> * *)
 0001:00184FF0       zCModelAni::SetFlags(zSTRING const &)
 0001:001850A0       zCModelAni::SetBlendingSec(float,float)
 0001:00185100       zCModelAni::GetBlendingSec(float &,float &)
 0001:00185160       zCModelAni::CorrectRootNodeIdleMovement(void)
 0001:001852C0       zCModelAni::CalcInPlaceFlag(void)
 0001:001854A0       zCModelAni::ResolveAlias(zCModelPrototype *)
 0001:00185780       zCModelAni::ResolveComb(zCModelPrototype *)
 0001:00185E80       zCModelAni::SaveMAN(zCModelPrototype *,zSTRING const &)
 0001:001865A0       zCFileBIN::BinWriteSrcFileStats(zSTRING &)
 0001:00186740       zCModelAni::LoadMAN(zSTRING const &,zCModelPrototype *,zSTRING const &)
 0001:00187270       zPATH::SearchFile(zSTRING const &,zSTRING const &,int)
 0001:00187280       zCModelAniEvent::zCModelAniEvent(void)
 0001:00187320       zCModelAniEvent::~zCModelAniEvent(void)
 0001:00187400       zCModelAniEvent::Save(zCFileBIN &)
 0001:001874C0       zCFileBIN::BinWriteString(zSTRING const &)
 0001:00187560       zCModelAniEvent::Load(zCFileBIN &)
 0001:00187610       zCModelPrototype::zCModelPrototype(void)
 0001:00187850       zCModelPrototype::Init(void)
 0001:00187A10       zCModelPrototype::~zCModelPrototype(void)
 0001:00187C50       zCModelPrototype::Clear(void)
 0001:00187DF0       zCModelPrototype::ReleaseMeshSoftSkinList(void)
 0001:00187E50       zCModelPrototype::ReleaseMeshes(void)
 0001:00187EE0       zCModelPrototype::Release(void)
 0001:00187F10       zCModelPrototype::NumInList(void)
 0001:00187F30       zCModelPrototype::GetModelProtoFileName(void)
 0001:00187F40       zCModelPrototype::SetModelProtoName(zSTRING const &)
 0001:001880D0       zCModelPrototype::SetFileSourceType(zCModelPrototype::zTFileSourceType)
 0001:00188250       zCModelPrototype::Load(zSTRING const &,zCModelPrototype *)
 0001:00188480       zPATH::GetFile(void)
 0001:001884A0       zCModelPrototype::PrepareAsModelProtoOverlay(zCModelPrototype *)
 0001:00188870       zCModelPrototype::CalcNodeListChecksum(void)
 0001:001888D0       zCModelPrototype::CollectNodeMeshes(zCArray<zCModelNode *> &)
 0001:00188A30       zCModelPrototype::SearchName(zSTRING)
 0001:00188AF0       zCModelPrototype::SearchNode(zSTRING const &)
 0001:00188BA0       zCModelPrototype::FindMeshTreeNode(zSTRING const &,zCTree<zCModelNode> *)
 0001:00188C50       zCModelPrototype::FindMeshTreeNodeIndex(zSTRING const &,zCTree<zCModelNode> *)
 0001:00188D10       zCModelPrototype::FindNodeListIndex(zSTRING const &)
 0001:00188DB0       zCModelPrototype::AddAni(zCModelAni *)
 0001:00188FC0       zCModelPrototype::SearchAniIndex(zSTRING const &)
 0001:00189090       zCModelPrototype::SearchAni(zSTRING const &)
 0001:001890B0       zCModelPrototype::DescribeTree(zCTree<zCModelNode> *,int)
 0001:001892F0       zCModelPrototype::GetMDHFileVersion(void)
 0001:00189300       zCModelPrototype::LoadMDH(zSTRING const &)
 0001:00189560       zCModelPrototype::LoadMDH(zCFileBIN &)
 0001:00189970       zCFileBIN::BinReadCompareSrcFileStats(void)
 0001:00189BC0       zCModelPrototype::SaveMDH(void)
 0001:00189DC0       zCModelPrototype::SaveMDH(zCFileBIN &)
 0001:0018A2D0       nullsub_48
 0001:0018A2E0       zCModelPrototype::ConvertVec3(zVEC3 &)
 0001:0018A300       zCModelPrototype::ConvertAngle(float &)
 0001:0018A310       zCModelPrototype::SkipBlock(void)
 0001:0018A390       zCModelPrototype::SkipBlockCmt(void)
 0001:0018A460       zCModelPrototype::ReadComment(void)
 0001:0018A470       zCModelPrototype::ReadScene(float &)
 0001:0018A810       zCModelPrototype::ReadTriple(void)
 0001:0018AA00       zCModelPrototype::ReadNodeTM(zCModelNode *)
 0001:0018AEA0       zCModelPrototype::ReadVertexList(zCMesh *,int)
 0001:0018B0D0       zCModelPrototype::ReadFaceList(zCMesh *,int)
 0001:0018B5D0       zCModelPrototype::ReadTVertexList(int)
 0001:0018B7D0       zCModelPrototype::ReadTFaceList(zCMesh *,zVEC2 *,int)
 0001:0018BA40       zCModelPrototype::ReadSoftSkinVertList(void)
 0001:0018CA10       zCMeshSoftSkin::operator delete(void *)
 0001:0018CBE0       `zCModelPrototype::ReadSoftSkinVertList(void)'::`2'::zTControlerWeight::zTControlerWeight(void)
 0001:0018CBF0       zCMeshSoftSkin::zTWeightEntry::zTWeightEntry(void)
 0001:0018CC00       zCModelPrototype::ReadMesh(int,zCModelNode *,int)
 0001:0018CFE0       zCModelPrototype::ReadMeshAnimation(zCModelNode *,int)
 0001:0018D160       zCModelPrototype::ReadPosTrack(zMAT4 *)
 0001:0018D340       zCModelPrototype::ReadRotTrack(zMAT4 *)
 0001:0018D5F0       zCModelPrototype::ReadTMAnimation(zCModelNode *,zMAT4 * &)
 0001:0018DC30       zCModelPrototype::LocalizeTrafos(zCTree<zCModelNode> *,zCTree<zCModelNode> *)
 0001:0018DD60       zCModelPrototype::ReadMapDiffuse(zCMaterial *)
 0001:0018E1D0       zCModelPrototype::ReadMaterial(void)
 0001:0018E840       zCModelPrototype::ReadWireframeColor(void)
 0001:0018EAE0       zCModelPrototype::AssignMeshNodeMaterials(zCMesh *,zCModelPrototype::zTMatIDList *,int)
 0001:0018EBD0       zCModelPrototype::TransformNodeVisual(zCModelNode *,zMAT4 const &)
 0001:0018EC30       zCModelPrototype::ProcessMeshNode(zCModelNode *,zCTree<zCModelNode> *,int,int,int &)
 0001:0018F020       zCProgMeshProto::operator delete(void *)
 0001:0018F040       zCModelPrototype::ReadGeomobject(zMAT4 * &,zCTree<zCModelNode> * &)
 0001:001905A0       zCModelNode::`scalar deleting destructor'(uint)
 0001:001905C0       zCModelPrototype::ReadMaterialList(void)
 0001:00190850       zCModelPrototype::Load3DSMAXAsc(zCModelAni * &,zSTRING const &,zSTRING const &,int,int,int,float)
 0001:001918D0       zCModelPrototype::CalcAniBBox(zCModelAni *)
 0001:00191E00       zCModelPrototype::ResolveReferences(void)
 0001:001920F0       zCModelPrototype::GetMDSFileVersion(void)
 0001:00192100       zCModelPrototype::SkipBlockMDS(int)
 0001:00192180       zCModelPrototype::ReadMeshAndTreeMSB(int &,zCFileBIN &)
 0001:001925C0       zCModelPrototype::ReadMeshAndTree(int &,zCFileBIN &)
 0001:00192B30       zCModelMeshLib::zCModelMeshLib(void)
 0001:00192C40       zCModelPrototype::RegisterMesh(zCFileBIN &)
 0001:00192ED0       zCModelPrototype::ReadAniEnumMSB(int,zCFileBIN &)
 0001:00195C00       zCModelPrototype::ReadAniEnum(int,zCFileBIN &)
 0001:0019BEB0       zSTRING::operator=(zSTRING const &)
 0001:0019C010       zSTRING::Clear(void)
 0001:0019C0E0       zSTRING::Length(void)
 0001:0019C0F0       zSTRING::ToInt(void)
 0001:0019C110       zSTRING::Search(char const *,uint)
 0001:0019C130       zERROR::GetFilterLevel(void)
 0001:0019C140       zMin(float,float)
 0001:0019C160       zCModelAni::GetAniName(void)
 0001:0019C170       zCModelAni::GetAniType(void)
 0001:0019C180       zCFileBIN::BinWriteFloat(float)
 0001:0019C1A0       zCFileBIN::BinWriteInt(int)
 0001:0019C250       zCModelPrototype::ReadModelMSB(zCFileBIN &)
 0001:0019C4C0       zCModelPrototype::ReadModel(zCFileBIN &)
 0001:0019C7B0       zCModelPrototype::LoadModelScriptMSB(zSTRING const &)
 0001:0019CDA0       zCFileBIN::BinSkipChunk(void)
 0001:0019CDD0       zCModelPrototype::LoadModelScript(zSTRING const &)
 0001:0019D760       zCModelPrototype::LoadModelASC(zSTRING const &)
 0001:0019DFC0       zCModelMeshLib::~zCModelMeshLib(void)
 0001:0019E090       zCModelMeshLib::ReleaseData(void)
 0001:0019E100       zCModelMeshLib::AllocNumNodeVisuals(int)
 0001:0019E170       zCModelMeshLib::AddMeshSoftSkin(zCMeshSoftSkin *)
 0001:0019E250       zCModelMeshLib::AddNodeVisual(int,zCVisual *)
 0001:0019E350       zCModelMeshLib::ApplyToModel(zCModel *)
 0001:0019E4C0       zCModelMeshLib::ApplyToModel(zCModelPrototype *)
 0001:0019E620       zCModelMeshLib::RemoveFromModel(zCModel *)
 0001:0019E710       zCModelMeshLib::BuildFromModel(zCModelPrototype *)
 0001:0019E900       zCModelMeshLib::BuildFromModel(zCModel *)
 0001:0019EB00       zCModelMeshLib::GetMDMFileVersion(void)
 0001:0019EB30       zCModelMeshLib::SaveMDM(zCModelPrototype *)
 0001:0019ED40       zCModelMeshLib::SaveMDM(zCFileBIN &,zCModelPrototype *)
 0001:0019F1D0       zCModelMeshLib::LoadMDM(zSTRING const &,zCModelPrototype *,zCModel *,zCModelMeshLib * *)
 0001:0019F5A0       zCModelMeshLib::LoadMDM_Try(zSTRING const &,zCModelPrototype *,zCModel *,zCModelMeshLib * *)
 0001:0019F7A0       zCModelMeshLib::LoadMDM(zCFileBIN &,zCModelPrototype *,zCModel *,zCModelMeshLib * *)
 0001:001A02E0       zCModelMeshLib::ConvertMDM(zSTRING const &,zCModelPrototype *)
 0001:001A0610       zCModelConvertFileHandler::zCModelConvertFileHandler(void)
 0001:001A0720       zCModelConvertFileHandler::`scalar deleting destructor'(uint)
 0001:001A0740       zCModelConvertFileHandler::HandleFile(zSTRING const &,char const *,_finddata_t)
 0001:001A0960       zCArray<zCModelMeshLib::zTNodeMesh>::AllocAbs(int)
 0001:001A09D0       zCArray<zCMeshSoftSkin *>::InsertEnd(zCMeshSoftSkin * const &)
 0001:001A0AA0       zCArray<zCMeshSoftSkin *>::DeleteList(void)
 0001:001A0AC0       zCArray<zCSoundFX *>::zCArray<zCSoundFX *>(int)
 0001:001A0AF0       zCArray<zCSoundFX *>::~zCArray<zCSoundFX *>(void)
 0001:001A0B10       zCArray<zCSoundFX *>::AllocAbs(int)
 0001:001A0B70       zCArray<zCSoundFX *>::InsertEnd(zCSoundFX * const &)
 0001:001A0C40       zCArray<zCSoundFX *>::Insert(zCSoundFX * const &)
 0001:001A0D10       zCArray<zCParticleEmitter *>::zCArray<zCParticleEmitter *>(int)
 0001:001A0D40       zCArray<zCParticleEmitter *>::~zCArray<zCParticleEmitter *>(void)
 0001:001A0D60       zCArray<zCParticleEmitter *>::Insert(zCParticleEmitter * const &)
 0001:001A0E30       zCList<zCModelAni>::~zCList<zCModelAni>(void)
 0001:001A0E60       zCTree<zCModelNode>::zCTree<zCModelNode>(void)
 0001:001A0E80       zCTree<zCModelNode>::~zCTree<zCModelNode>(void)
 0001:001A0EE0       zCTree<zCModelNode>::DeleteDataSubtree(void)
 0001:001A0F30       zCTree<zCModelNode>::AddChild(zCModelNode *)
 0001:001A0F80       zCArraySort<zCModelAni *>::~zCArraySort<zCModelAni *>(void)
 0001:001A0FA0       zCArraySort<zCModelAni *>::InsertSort(zCModelAni * const &)
 0001:001A10F0       zCArraySort<zCModelAni *>::GetNumInList(void)
 0001:001A1100       zCArray<zCModelNode *>::~zCArray<zCModelNode *>(void)
 0001:001A1120       zCArray<zCModelNode *>::InsertEnd(zCModelNode * const &)
 0001:001A11F0       zCArray<zCMaterial *>::AllocAbs(int)
 0001:001A1250       zCArray<zCMaterial *>::GetSafe(int)
 0001:001A1410       zCArray<zCMaterial *>::DeleteList(void)
 0001:001A1430       zCArray<zCMaterial *>::`vector deleting destructor'(uint)
 0001:001A1490       zCArray<zCModelMeshLib::zTNodeMesh>::InsertEnd(zCModelMeshLib::zTNodeMesh const &)
 0001:001A1570       zCArray<zCSoundFX *>::AllocDelta(int)
 0001:001A15D0       zCArray<zCParticleEmitter *>::InsertEnd(zCParticleEmitter * const &)
 0001:001A16A0       zCTree<zCModelNode>::operator delete(void *)
 0001:001A16B0       zCTree<zCModelNode>::RemoveChild(void)
 0001:001A16E0       zCArraySort<zCModelAni *>::AllocDelta(int)
 0001:001A1740       zCArraySort<zCModelAni *>::InsertEnd(zCModelAni * const &)
 0001:001A1810       zCArray<zCModelNode *>::AllocDelta(int)
 0001:001A1870       zCArray<zCArray<zCMaterial *>>::AllocDelta(int)
 0001:001A1A00       zCArray<zCMaterial *>::zCArray<zCMaterial *>(void)
 0001:001A1A10       zCArray<zCMaterial *>::AllocDelta(int)
 0001:001A1A70       zDYNAMIC_CAST(zCObject const *)
 0001:001A1CC0       zCMorphMesh::_CreateNewInstance(void)
 0001:001A1D80       zCMorphMesh::operator delete(void *)
 0001:001A1DA0       zCMorphMesh::_GetClassDef(void)
 0001:001A1DB0       zCMorphMesh::IsBBox3DLocal(void)
 0001:001A1DC0       zCMorphMesh::GetOBBox3D(void)
 0001:001A1DD0       zCMorphMesh::GetRenderSortKey(void)
 0001:001A1DE0       zCMorphMesh::GetAlphaTestingEnabled(void)
 0001:001A1DF0       zCMorphMesh::SetAlphaTestingEnabled(int)
 0001:001A1E00       zCMorphMesh::CanTraceRay(void)
 0001:001A1E10       zCMorphMesh::StartAnimation(zSTRING const &)
 0001:001A1ED0       zCMorphMesh::StopAnimation(zSTRING const &)
 0001:001A1FF0       zCMorphMesh::IsAnimationActive(zSTRING const &)
 0001:001A20D0       zCMorphMesh::`scalar deleting destructor'(uint)
 0001:001A2100       zCMorphMeshAni::zCMorphMeshAni(void)
 0001:001A2160       zCMorphMeshAni::~zCMorphMeshAni(void)
 0001:001A2220       zCMorphMeshAni::SetBlending(float,float)
 0001:001A2290       zCMorphMeshAni::Load(zCFileBIN &)
 0001:001A23A0       zCMorphMeshAni::Save(zCFileBIN &)
 0001:001A24B0       zCMorphMeshProto::zCMorphMeshProto(void)
 0001:001A2600       zCMorphMeshProto::~zCMorphMeshProto(void)
 0001:001A2860       zCMorphMeshProto::Release(void)
 0001:001A2890       zCMorphMeshProto::SearchName(zSTRING const &)
 0001:001A2900       zCMorphMeshProto::Load(zSTRING const &)
 0001:001A2AE0       zCMorphMeshProto::SearchAni(zSTRING const &)
 0001:001A2B90       zCMorphMeshProto::LoadMMB(zSTRING const &)
 0001:001A32E0       zCMorphMeshProto::SaveMMB(zSTRING const &)
 0001:001A36F0       zCMorphMeshProto::GenerateMorphAni(zCMesh *,zCArray<int> const &,int)
 0001:001A3BF0       zCMorphMeshProto::Load3DSMAXAsc(zSTRING const &,float &,int,int)
 0001:001A3E50       zCMorphMeshProto::ReadMorphRef(zCArray<int> &)
 0001:001A40B0       zCMorphMeshAni::SetFlagsByString(zSTRING const &)
 0001:001A4160       zCMorphMeshProto::ReadMorphAni(zCArray<int> const &)
 0001:001A49C0       zCMorphMeshProto::LoadMorphScript(zSTRING const &)
 0001:001A4F10       zPATH::GetDrive(void)
 0001:001A4F30       zCMorphMesh::Init(void)
 0001:001A4F50       zCMorphMesh::zCMorphMesh(zCMorphMeshProto *)
 0001:001A5030       zCMorphMesh::~zCMorphMesh(void)
 0001:001A5120       zCMorphMesh::Load(zSTRING const &)
 0001:001A51E0       zCMorphMesh::GetFileExtension(int)
 0001:001A5240       zCMorphMesh::LoadVisualVirtual(zSTRING const &)
 0001:001A5250       zCMorphMesh::GetBBox3D(void)
 0001:001A5290       zCMorphMesh::GetVisualName(void)
 0001:001A52C0       zCMorphMesh::SearchAni(zSTRING const &)
 0001:001A5370       zCMorphMesh::Render(zTRenderContext &)
 0001:001A53F0       zCMorphMesh::Render(zTRenderContext &,zCRenderLightContainer *,float,float)
 0001:001A5480       zCMorphMesh::CalcVertPositions(void)
 0001:001A5830       zCMorphMesh::AdvanceAnis(void)
 0001:001A5A40       zCMorphMesh::IsAniActive(zSTRING const &)
 0001:001A5B20       zCMorphMesh::IsAniActive(zCMorphMeshAni *)
 0001:001A5B60       zCMorphMesh::StopAni(zSTRING const &)
 0001:001A5C80       zCMorphMesh::StopAni(zCMorphMeshAni *)
 0001:001A5D00       zCMorphMesh::FadeOutAni(zSTRING const &)
 0001:001A5DF0       zCMorphMesh::FadeOutAni(zCMorphMeshAni *)
 0001:001A5E40       zCMorphMesh::GetAnyAnimation(void)
 0001:001A5E60       zCMorphMesh::StartAni(zSTRING const &,float,float)
 0001:001A5F30       zCMorphMesh::StartAni(zCMorphMeshAni *,float,float)
 0001:001A60F0       zCMorphMesh::RemoveRandAni(zCMorphMeshAni *)
 0001:001A6160       zCMorphMesh::AddRandAni(zCMorphMeshAni *,float,float,float,float,float)
 0001:001A62D0       zCMorphMesh::ProcessRandAnis(void)
 0001:001A63E0       zCMorphMesh::SetTextureVar(int,int,zSTRING *)
 0001:001A63F0       zCMorphMesh::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:001A6410       zCMorphMesh::PrintStatus(int,int)
 0001:001A6B60       zCMorphMeshConvertFileHandler::zCMorphMeshConvertFileHandler(void)
 0001:001A6C20       zCMorphMeshConvertFileHandler::`scalar deleting destructor'(uint)
 0001:001A6C40       zCMorphMeshConvertFileHandler::HandleFile(zSTRING const &,char const *,_finddata_t)
 0001:001A6E40       zCMorphMeshProto::`scalar deleting destructor'(uint)
 0001:001A6E60       zCArraySort<zCMorphMeshAni *>::~zCArraySort<zCMorphMeshAni *>(void)
 0001:001A6E80       zCArraySort<zCMorphMeshAni *>::InsertEnd(zCMorphMeshAni * const &)
 0001:001A6F50       zCArraySort<zCMorphMesh::zTMorphAniEntry *>::~zCArraySort<zCMorphMesh::zTMorphAniEntry *>(void)
 0001:001A6F70       zCArray<zCMorphMesh::zTRandAni>::~zCArray<zCMorphMesh::zTRandAni>(void)
 0001:001A6F90       zCArraySort<zCMorphMeshAni *>::AllocDelta(int)
 0001:001A7020       CMov_Movement::CMov_Movement(zCVob *)
 0001:001A7060       CMov_Movement::IncreaseSpeed(double)
 0001:001A70F0       CMov_Movement::Movement(void)
 0001:001A7B00       zCObjectFactory::_CreateNewInstance(void)
 0001:001A7C50       zCObject::~zCObject(void)
 0001:001A7E00       zCObject::CheckInheritance(zCObject const *,zCObject const *)
 0001:001A7E40       zCObject::CheckInheritance(zSTRING const &,zSTRING const &)
 0001:001A7F70       zCObject::CreateNewInstance(zSTRING const &)
 0001:001A80A0       zCObject::CreateCopy(void)
 0001:001A8160       zCObject::PrintClassHierarchy(int,zCClassDef *,int,int)
 0001:001A8C60       zCObject::GetMemStats(int &,int &,zCClassDef *)
 0001:001A8CD0       zCObject::GetObjectName(void)
 0001:001A8CE0       zCObject::SetObjectName(zSTRING const &)
 0001:001A8F80       zCClassDef::CompareClassDefNames(void const *,void const *)
 0001:001A8FE0       zCClassDef::GetClassDef(zSTRING const &)
 0001:001A9100       zCClassDef::GetClassDefTypeInsensitive(zSTRING const &)
 0001:001A92E0       zCClassDef::zCClassDef(void)
 0001:001A9470       zCClassDef::Init(void)
 0001:001A9620       zCClassDef::~zCClassDef(void)
 0001:001A97A0       zCClassDef::EndStartup(void)
 0001:001A98E0       zCClassDef::zCClassDef(zSTRING const &,zSTRING const &,zCObject * (*)(void),ulong,ulong,ushort,zSTRING const &)
 0001:001A9B80       zCClassDef::CreateNewInstance(void)
 0001:001A9C40       zCClassDef::OverwriteCreateNewInstance(zCClassDef *)
 0001:001A9C60       zCClassDef::ResetCreateNewInstance(void)
 0001:001A9C70       zCClassDef::GetClassID(void)
 0001:001A9CE0       zCClassDef::CreateNewInstanceID(ushort)
 0001:001A9D00       zCClassDef::GetHashIndex(zSTRING const &)
 0001:001A9D30       zCClassDef::GetHashIndex(zCObject *)
 0001:001A9D60       zCClassDef::InsertHashTable(zCObject *)
 0001:001A9DA0       zCClassDef::RemoveHashTable(zCObject *)
 0001:001A9DE0       zCClassDef::SearchHashTable(zSTRING const &)
 0001:001A9E70       zCClassDef::CalcHashTableSpread(void)
 0001:001A9EB0       zCClassDef::ObjectCreated(zCObject *,zCClassDef *)
 0001:001A9FD0       zCClassDef::ObjectDeleted(zCObject *,zCClassDef *)
 0001:001AA070       zCClassDef::ObjectCreated(zCObject *,int,zCClassDef *)
 0001:001AA0B0       zCClassDef::ObjectDeleted(zCObject *,int,zCClassDef *)
 0001:001AA170       zCClassDef::ReportLeaks(void)
 0001:001AA590       zCClassDef::GetLivingObjectsState(zCLivingObjectsState &)
 0001:001AA630       zCClassDef::CompareLivingObjectsState(zCLivingObjectsState const &)
 0001:001AA940       zCObjectFactory::CreateZFile(zSTRING const &)
 0001:001AA9B0       zCObjectFactory::CreateEventManager(zCVob *)
 0001:001AAA80       zCEventManager::operator delete(void *)
 0001:001AAB30       zCObjectFactory::CreateNetVobControl(zCVob *)
 0001:001AAC00       zCObjectFactory::CreateWaypoint(void)
 0001:001AACC0       zCWaypoint::operator delete(void *)
 0001:001AAD70       zCObjectFactory::CreateWay(void)
 0001:001AADD0       zCObjectFactory::CreateSession(void)
 0001:001AAE30       zCObjectFactory::CreateCSManager(void)
 0001:001AAEF0       zCObjectFactory::CreateWorld(void)
 0001:001AAFB0       zCWorld::operator delete(void *)
 0001:001AB060       zCArray<zCObject *>::zCArray<zCObject *>(void)
 0001:001AB070       zCArraySort<zCClassDef *>::Search(zCClassDef * const &)
 0001:001AB0E0       zCArray<zCObject *>::InsertEnd(zCObject * const &)
 0001:001AB1B0       zCArraySort<zCClassDef *>::AllocDelta(int)
 0001:001AB430       zCParticleFX::_CreateNewInstance(void)
 0001:001AB560       zCParticleFX::ParseParticleFXScript(void)
 0001:001ABB50       zCParticleFX::InitParticleFX(void)
 0001:001ABEA0       zSParticle::zSParticle(void)
 0001:001ABEB0       zCParticleFX::CleanupParticleFX(void)
 0001:001ABF70       zCParticleFX::zCParticleFX(void)
 0001:001AC070       zCParticleFX::_GetClassDef(void)
 0001:001AC080       zCParticleFX::IsBBox3DLocal(void)
 0001:001AC090       zCParticleFX::GetVisualDied(void)
 0001:001AC0A0       zCParticleFX::GetRenderSortKey(void)
 0001:001AC0B0       zCParticleFX::`scalar deleting destructor'(uint)
 0001:001AC0E0       zCParticleFX::~zCParticleFX(void)
 0001:001AC240       zCPFXPerFrameCallback::DoWorldPerFrameCallback(zCWorld *,zCCamera *)
 0001:001AC250       zCParticleFX::HostVobAddedToWorld(zCVob *,zCWorld *)
 0001:001AC270       zCParticleFX::HostVobRemovedFromWorld(zCVob *,zCWorld *)
 0001:001AC280       zCParticleFX::zCStaticPfxList::InsertPfxHead(zCParticleFX *)
 0001:001AC2C0       zCParticleFX::zCStaticPfxList::RemovePfx(zCParticleFX *)
 0001:001AC330       zCParticleFX::zCStaticPfxList::TouchPfx(zCParticleFX *)
 0001:001AC3F0       zCParticleFX::zCStaticPfxList::ProcessList(void)
 0001:001ACB70       zCParticleFX::zCStaticPfxList::IsInList(zCParticleFX *)
 0001:001ACBA0       zCParticleFX::GetFileExtension(int)
 0001:001ACC00       zCParticleFX::LoadVisualVirtual(zSTRING const &)
 0001:001ACC10       zCParticleFX::InitEmitterVars(void)
 0001:001ACC30       zCParticleFX::FreeParticles(void)
 0001:001ACC80       zCParticleFX::SetVisualUsedBy(zCVob *)
 0001:001ACD30       zCParticleFX::GetVisualName(void)
 0001:001ACDE0       zCParticleFX::SearchParticleEmitter(zSTRING const &)
 0001:001ACFA0       zCParticleFX::RemoveEmitter(void)
 0001:001ACFE0       zCParticleFX::SetEmitter(zCParticleEmitter *,int)
 0001:001AD140       zCParticleEmitter::zCParticleEmitter(zCParticleEmitter const &)
 0001:001ADB40       zCParticleFX::SetEmitter(zSTRING const &,int)
 0001:001ADD40       zCParticleFX::SetAndStartEmitter(zSTRING const &,int)
 0001:001ADD70       zCParticleFX::SetAndStartEmitter(zCParticleEmitter *,int)
 0001:001ADDA0       zCParticleFX::StopEmitterOutput(void)
 0001:001ADDB0       zCParticleFX::RestoreEmitterOutput(void)
 0001:001ADDF0       zCParticleFX::Load(zSTRING const &)
 0001:001ADFA0       zCParticleFX::GetBBox3D(void)
 0001:001AE0D0       zCParticleFX::CalcIsDead(void)
 0001:001AE140       zCParticleFX::PartRand(void)
 0001:001AE160       zCParticleFX::UpdateParticleFX(void)
 0001:001AE240       zCParticleFX::CreateParticlesUpdateDependencies(void)
 0001:001AE500       zCParticleFX::UpdateParticle(zSParticle *)
 0001:001AF2F0       zVEC2::operator+=(zVEC2 const &)
 0001:001AF310       zCParticleFX::Render(zTRenderContext &)
 0001:001B0920       zCParticleFX::GetShapeScaleThisFrame(void)
 0001:001B0A90       zCParticleFX::GetNumParticlesThisFrame(void)
 0001:001B0C30       zCParticleFX::CheckDependentEmitter(void)
 0001:001B0DD0       zCParticleFX::CreateParticles(void)
 0001:001B1860       zCParticleEmitter::zCParticleEmitter(void)
 0001:001B1B80       zCParticleEmitter::~zCParticleEmitter(void)
 0001:001B1EE0       zCParticleEmitter::UpdateVelocity(void)
 0001:001B1EF0       zCParticleEmitter::AddCompoundReferences(void)
 0001:001B1F50       zCParticleEmitter::ResetStrings(void)
 0001:001B21F0       zCParticleEmitter::Reset(void)
 0001:001B2210       zCParticleEmitter::String2Vec3(zSTRING const &)
 0001:001B2490       zCParticleEmitter::String2Vec2(zSTRING const &)
 0001:001B26B0       zCParticleEmitter::UpdateInternals(void)
 0001:001B35F0       zCParticleEmitter::SetOutputDir(zVEC3 const &)
 0001:001B3830       zCParticleEmitter::ConvertAnglesIntoBox(void)
 0001:001B3880       zCParticleEmitter::GetPosition(void)
 0001:001B4040       zRandF2(void)
 0001:001B4060       zCParticleEmitter::GetVelocity(zSParticle *,zCParticleFX *)
 0001:001B4390       zCArray<float>::zCArray<float>(void)
 0001:001B43A0       zCArray<float>::~zCArray<float>(void)
 0001:001B43C0       zCArraySort<zCParticleEmitter *>::Search(zCParticleEmitter * const &)
 0001:001B4430       zCArray<float>::AllocDelta(int)
 0001:001B4490       zCArray<float>::InsertEnd(float const &)
 0001:001B4560       zCArraySort<zCParticleEmitter *>::InsertEnd(zCParticleEmitter * const &)
 0001:001B4660       zCRigidBody::zCRigidBody(void)
 0001:001B4730       zCRigidBody::ComputeForceTorque(float)
 0001:001B4740       zCRigidBody::Star(zVEC3 const &)
 0001:001B47C0       zCRigidBody::SetSliding(zVEC3 const &)
 0001:001B4A50       zCRigidBody::Integrate(float)
 0001:001B4CF0       zCRigidBody::RunSimulation(void)
 0001:001B4D20       zCRigidBody::SetInertiaTensorBlock(float,float,float)
 0001:001B4DB0       zCRigidBody::ApplyForceCM(zVEC3 const &)
 0001:001B4DF0       zCRigidBody::ApplyForce(zVEC3 const &,zVEC3 const &)
 0001:001B4E30       zCRigidBody::GetPointVelocity(zVEC3 const &)
 0001:001B4EB0       zCRigidBody::ApplyImpulseCM(zVEC3 const &)
 0001:001B4F20       zCRigidBody::ApplyImpulse(zVEC3 const &,zVEC3 const &)
 0001:001B4F90       zCRigidBody::CollisionImpulseStatic(zVEC3 const &,zVEC3 const &,float)
 0001:001B50A0       zCRigidBody::CollisionImpulseCenterStatic(zVEC3 const &,float)
 0001:001B5290       zCRigidBody::CollisionImpulse(zVEC3 const &,zVEC3 const &,float,zCRigidBody *)
 0001:001B5450       zCRigidBody::StopRotation(void)
 0001:001B54F0       zCRigidBody::StopTranslation(void)
 0001:001B5590       zCRigidBody::StopTransRot(void)
 0001:001B56D0       zCRigidBody::SetVelocity(zVEC3 const &)
 0001:001B5770       zCRigidBody::SetMode(zTRigidBodyMode const &)
 0001:001B5790       zCRigidBody::ShouldSlide(zVEC3 const &)
 0001:001B5930       zCRigidBody::Archive(zCArchiver &)
 0001:001B59B0       zCRigidBody::Unarchive(zCArchiver &)
 0001:001B5B00       zCPluecker::zCPluecker(zVEC3 const &,zVEC3 const &)
 0001:001B5B50       zCPluecker::zCPluecker(void)
 0001:001B5B70       zCPluecker::Length2(void)
 0001:001B5BA0       zCPluecker::Normalize(void)
 0001:001B5EC0       zCPolygon::S_AllocPointers(int)
 0001:001B5EE0       zCPolygon::S_DeletePointers(int,void *)
 0001:001B5F10       zCPolygon::S_AllocVertFeatures(int)
 0001:001B5F70       zCPolygon::S_DeleteVertFeatures(int,zCVertFeature *)
 0001:001B5FA0       zCPolygon::zCPolygon(void)
 0001:001B5FE0       zCPolygon::~zCPolygon(void)
 0001:001B60B0       Compare_Verts(void const *,void const *)
 0001:001B60D0       Compare_Features(void const *,void const *)
 0001:001B60F0       zCPolygon::S_InitMorph(void)
 0001:001B6110       zCPolygon::S_EmptyMorphedVerts(void)
 0001:001B6130       zCPolygon::S_ResetMorphedVerts(void)
 0001:001B6260       zCPolygon::S_DeleteMorphedVerts(void)
 0001:001B62F0       zCPolygon::ClipToPlane(zCVertex * *,zCVertFeature * *,int,zCVertex * *,zCVertFeature * *,int &,zTPlane const &)
 0001:001B6790       zCPolygon::ClipToPlane_Occluder(zCVertex * *,int,zCVertex * *,int &,zTPlane const &)
 0001:001B69F0       zCPolygon::PrepareRendering(void)
 0001:001B6A10       zCPolygon::Unclip(void)
 0001:001B6A90       zCPolygon::Unclip_Occluder(void)
 0001:001B6AB0       zCPolygon::CopyClipFeaturesForTexAniMapping(void)
 0001:001B6B20       zCPolygon::ClipToFrustum(int)
 0001:001B6E60       zCPolygon::ClipToFrustum_Occluder(int)
 0001:001B7040       zCPolygon::ClassifyPlane(zTPlane const &)
 0001:001B70F0       zCPolygon::ClassifyPlaneBSPBuild(zTPlane const &)
 0001:001B7180       zCPolygon::CalcNormal(void)
 0001:001B7580       zVEC4::zVEC4(zVEC3 const &,float)
 0001:001B75A0       zCPolygon::CalcNormalApprox(void)
 0001:001B78D0       Alg_FindPlaneCoeffApprox(zVEC3 const &,zVEC3 const &,zVEC3 const &)
 0001:001B79D0       zCPolygon::GetScreenBBox2D(zTBBox2D &)
 0001:001B7A70       zCPolygon::DrawWire(zCOLOR)
 0001:001B7B30       zCPolygon::LightPolyList(zCArray<zCVobLight *> const &,zCPolygon * *,int,zMAT4 *)
 0001:001B8250       zCPolygon::LightDynCamSpace(zVEC3 const &,int)
 0001:001B8410       zCPolygon::GetLightStatAtPos(zVEC3 const &)
 0001:001B8B20       zCPolygon::CheckRayPolyIntersection(zVEC3 const &,zVEC3 const &,zVEC3 &,float &)
 0001:001B8EB0       zCPolygon::CheckRayPolyIntersection2Sided(zVEC3 const &,zVEC3 const &,zVEC3 &,float &)
 0001:001B9220       zCPolygon::GetBBox3D(void)
 0001:001B92F0       zCPolygon::GetCenter(void)
 0001:001B9370       zCPolygon::SetMapping(zVEC2 const &,zVEC2 const &,zVEC2 const &)
 0001:001B93C0       zCPolygon::SetMapping(int,zVEC2 const &)
 0001:001B93E0       zCPolygon::Flip(void)
 0001:001B9420       zCPolygon::VertPartOfPoly(zCVertex *)
 0001:001B9450       zCPolygon::EdgePartOfPoly(zCVertex *,zCVertex *)
 0001:001B94A0       zCPolygon::EdgePositionsPartOfPoly(zCVertex *,zCVertex *)
 0001:001B94F0       zCPolygon::TexTranslate(zVEC2 const &)
 0001:001B9530       zCPolygon::TexSetTranslation(zVEC2 const &)
 0001:001B9570       zCPolygon::TexScale(float,float)
 0001:001B95B0       zCPolygon::TexScale(zVEC2 &,float,float)
 0001:001B9670       zCPolygon::TexRotate(zVEC2 &,float)
 0001:001B9840       zCPolygon::TexMirrorU(float)
 0001:001B9870       zCPolygon::TexMirrorV(float)
 0001:001B98A0       zCPolygon::TexShearU(float)
 0001:001B9960       zCPolygon::TexShearV(float)
 0001:001B9A20       zCPolygon::TexApplyPlanarMapping(zVEC3 const &,zVEC3 const &,zVEC3 const &,int)
 0001:001B9BD0       zCPolygon::TexApplyPlanarMapping(float,float,int)
 0001:001B9C90       zCPolygon::TexApplyPlanarMapping(zCList<zCPolygon> const &,float,float,int)
 0001:001B9ED0       zCPolygon::AlignPolyListToAvgPlane(zCArray<zCPolygon *>)
 0001:001BA1C0       zCPolygon::TexCorrectUV(void)
 0001:001BA310       zCPolygon::AllocVerts(int)
 0001:001BA480       zCPolygon::AddVertex(zCVertex *)
 0001:001BA4A0       zCPolygon::AddVertexAndFeature(zCVertex *,zCVertFeature *)
 0001:001BA4E0       zCPolygon::SetVertices(zCVertex *,zCVertex *,zCVertex *)
 0001:001BA540       zCPolygon::SetVertices(zCVertex *,zCVertex *,zCVertex *,zCVertex *,int)
 0001:001BA5B0       zCPolygon::SetVertex(int,zCVertex *)
 0001:001BA5F0       zCPolygon::SetFeature(int,zCVertFeature *)
 0001:001BA630       zCPolygon::CopyValuesInto(zCPolygon *)
 0001:001BA6E0       zCPolygon::CopyPolyInto(zCPolygon *)
 0001:001BA740       zCPolygon::RemoveVerticesAndFeatures(void)
 0001:001BA7D0       zCPolygon::GetArea(void)
 0001:001BA870       zCPolygon::GetLongestEdgeLen(void)
 0001:001BA8E0       zCPolygon::ResetStaticLight(void)
 0001:001BA920       zCPolygon::SetStaticLight(zCOLOR)
 0001:001BA950       zCPolygon::SetLightDyn(zCOLOR)
 0001:001BA980       zCPolygon::SetLightStatAlpha(uchar)
 0001:001BA9B0       zCPolygon::ResetLightDynToLightStat(void)
 0001:001BA9E0       zCPolygon::AddToLightDyn(zCOLOR)
 0001:001BAA70       zCPolygon::CheckBBoxPolyIntersection(zTBBox3D const &)
 0001:001BAEF0       zCPolygon::CheckBSpherePolyIntersection(zTBSphere3D const &)
 0001:001BB060       zCPolygon::SplitPoly(zTPlane const &,zCPolygon *,zCPolygon *,zCMesh *)
 0001:001BB5B0       zCPolygon::IsIntersectingProjection(zCPolygon *,zVEC3 const &)
 0001:001BBD20       zCPolygon::IsIntersecting(zCPolygon *)
 0001:001BBDF0       zCPolygon::IsNeighbourOf(zCPolygon const *)
 0001:001BBEC0       zCPolygon::GetStaticLODPossible(void)
 0001:001BC050       zCList<zCPolygon>::Get(int)
 0001:001BC2A0       zCPolyStrip::_CreateNewInstance(void)
 0001:001BC300       zCPolyStrip::zCPolyStrip(void)
 0001:001BC450       zCPolyStrip::`scalar deleting destructor'(uint)
 0001:001BC480       zCPolyStrip::~zCPolyStrip(void)
 0001:001BC590       zCPolyStrip::IsBBox3DLocal(void)
 0001:001BC5A0       zCPolyStrip::GetBBox3D(void)
 0001:001BC6C0       zCPolyStrip::CalcBBox3D(void)
 0001:001BC840       zCPolyStrip::SetVisualUsedBy(zCVob *)
 0001:001BC860       zCPolyStrip::EmptyEffect(void)
 0001:001BC890       zCPolyStrip::AllocateResources(int)
 0001:001BCAE0       zCPolyStrip::FreeResources(void)
 0001:001BCB90       zCPolyStrip::SetVisibleSegments(float,float)
 0001:001BCC70       zCPolyStrip::Render(zTRenderContext &)
 0001:001BD2B0       zCPolyStrip::AddSegment(zVEC3 const &,zVEC3 const &)
 0001:001BD430       zCPolyStrip::AddSegment(zVEC3 const &)
 0001:001BD500       zCPolyStrip::AddSegmentSmart(zVEC3 const &,zVEC3 const &)
 0001:001BD760       zCPolyStrip::UpdateSegment(int,zVEC3 const &,zVEC3 const &,zVEC3 const &)
 0001:001BD7E0       zCPolyStrip::UpdateSegmentAlpha(int,float)
 0001:001BD800       zCPolyStrip::AlignToCamera(void)
 0001:001BDC90       zCPolyStrip::ProjectToSphere(zTBSphere3D const &)
 0001:001BDDB0       zCPolyStrip::Lightning0Subdivide(zVEC3 const &,zVEC3 const &,float,int)
 0001:001BDF40       zCPolyStrip::GenerateCPLightning0(zVEC3 const &,zVEC3 const &,float)
 0001:001BE090       zCPolyStrip::GenerateCircle(zTBSphere3D const &,zVEC3 const &,zVEC3 const &)
 0001:001BE340       zCLightning::Render(zTRenderContext &)
 0001:001BE350       zCLightning::SetVisualUsedBy(zCVob *)
 0001:001BE380       nullsub_49
 0001:001BE390       nullsub_50
 0001:001BE3A0       zCLightning::SetProjectionSphere(zTBSphere3D const &)
 0001:001BE3D0       zCLightning::Generate(zVEC3 const &,zVEC3 const &)
 0001:001BE430       zCLightning::zCBolt::Generate_R(zVEC3 const &,zVEC3 const &,float)
 0001:001BE890       zCLightning::zCBolt::`scalar deleting destructor'(uint)
 0001:001BE8C0       zCLightning::zCBolt::~zCBolt(void)
 0001:001BE9F0       zCLightning::zCBolt::FreeResources(void)
 0001:001BEAC0       zCLightning::zCBolt::Render(zTRenderContext &)
 0001:001BEB10       zCArray<zCLightning::zCBolt *>::zCArray<zCLightning::zCBolt *>(void)
 0001:001BEB20       zCArray<zCLightning::zCBolt *>::AllocDelta(int)
 0001:001BEBB0       zCPrime::IsPrime(ulong)
 0001:001BEC80       zCPrime::PrimeNo(ushort)
 0001:001BED90       zCPrime::NextPrime(ulong)
 0001:001BF150       Vertex::Vertex(zVEC3 const &,int)
 0001:001BF2C0       Vertex::~Vertex(void)
 0001:001BF3D0       Vertex::CalcQuadric(void)
 0001:001BF3E0       Vertex::IsBorder(void)
 0001:001BF490       Vertex::RemoveIfNotAdjacent(Vertex *)
 0001:001BF530       Triangle::Triangle(Vertex *,Vertex *,Vertex *,zVEC2 const &,zVEC2 const &,zVEC2 const &,zVEC3 const &,zVEC3 const &,zVEC3 const &,int,int)
 0001:001BF830       Triangle::~Triangle(void)
 0001:001BFA30       Triangle::HasVertex(Vertex *)
 0001:001BFA50       Triangle::HasVertexIndex(Vertex *)
 0001:001BFA80       Triangle::ComputeNormal(void)
 0001:001BFBC0       Triangle::GetArea(void)
 0001:001BFC60       Triangle::ReplaceVertex(Vertex *,Vertex *)
 0001:001BFF20       zCProgMeshBuilder::CreatePMTriPosList(void)
 0001:001C06B0       zCProgMeshBuilder::CalcPrelight(zTLazyMesh &,zTLazyMesh &)
 0001:001C0830       zCRenderLightContainer::Clear(void)
 0001:001C0850       zCProgMeshBuilder::CalcPosNormals(zTLazyMesh &)
 0001:001C09A0       zCProgMeshBuilder::CalcTriPlaneList(zTLazyMesh const &,zTLazyMesh &)
 0001:001C0EB0       zCProgMeshBuilder::CalcSubdivData(zTLazyMesh const &,zTLazyMesh &)
 0001:001C1450       zCProgMeshBuilder::CreateLazySubMesh(int,zTLazyMesh &,zTLazyMesh &)
 0001:001C1940       zCProgMeshBuilder::CopySubMeshData(uchar * &,zTLazyMesh const &,zCProgMeshProto::zCSubMesh *)
 0001:001C1B50       zCProgMeshBuilder::CreateFinalPMData(int)
 0001:001C29B0       zTLazyMesh::zTLazyMesh(void)
 0001:001C2A80       zTLazyMesh::~zTLazyMesh(void)
 0001:001C2BF0       zCProgMeshProto::zCSubMesh::`vector deleting destructor'(uint)
 0001:001C2C50       zCProgMeshBuilder::Clear(void)
 0001:001C2E40       zCProgMeshBuilder::BuildProgMeshProto(zCMesh *,zCProgMeshProto *,zCArray<int> *,int)
 0001:001C3A50       zCResource::CacheIn(float)
 0001:001C3A90       zCVertex::ResetVertexTransform(void)
 0001:001C40D0       Vertex::`scalar deleting destructor'(uint)
 0001:001C40F0       Triangle::`scalar deleting destructor'(uint)
 0001:001C4140       zCArray<ushort>::zCArray<ushort>(zCArray<ushort> const &)
 0001:001C41D0       zCArray<Vertex *>::zCArray<Vertex *>(void)
 0001:001C41E0       zCArray<Vertex *>::~zCArray<Vertex *>(void)
 0001:001C4200       zCArray<Vertex *>::operator=(zCArray<Vertex *> const &)
 0001:001C4290       zCArray<Vertex *>::RemoveOrder(Vertex * const &)
 0001:001C42E0       zCArray<Vertex *>::IsInList(Vertex * const &)
 0001:001C4320       zCArray<Triangle *>::~zCArray<Triangle *>(void)
 0001:001C4340       zCArray<zTPMWedge *>::~zCArray<zTPMWedge *>(void)
 0001:001C4370       zCArray<zTPMVertexUpdate>::zCArray<zTPMVertexUpdate>(void)
 0001:001C4380       zCArray<zTPMVertexUpdate>::zCArray<zTPMVertexUpdate>(zCArray<zTPMVertexUpdate> const &)
 0001:001C4410       zCArray<zTPMVertexUpdate>::~zCArray<zTPMVertexUpdate>(void)
 0001:001C4430       zCArray<zTPMTriangle>::zCArray<zTPMTriangle>(void)
 0001:001C4440       zCArray<zTPMTriangle>::zCArray<zTPMTriangle>(zCArray<zTPMTriangle> const &)
 0001:001C4500       zCArray<zTPMTriangle>::~zCArray<zTPMTriangle>(void)
 0001:001C4520       zCArray<zVEC3>::zCArray<zVEC3>(void)
 0001:001C4530       zCArray<zVEC3>::zCArray<zVEC3>(zCArray<zVEC3> const &)
 0001:001C4590       zCArray<zTPMWedge>::zCArray<zTPMWedge>(void)
 0001:001C45A0       zCArray<zTPMWedge>::zCArray<zTPMWedge>(zCArray<zTPMWedge> const &)
 0001:001C4600       zCArray<zTPMWedge>::~zCArray<zTPMWedge>(void)
 0001:001C4620       zCArray<float>::zCArray<float>(zCArray<float> const &)
 0001:001C46B0       zCArray<zTPlane>::zCArray<zTPlane>(void)
 0001:001C46C0       zCArray<zTPlane>::zCArray<zTPlane>(zCArray<zTPlane> const &)
 0001:001C4730       zCArray<zTPlane>::~zCArray<zTPlane>(void)
 0001:001C4750       zCArray<zTPMTriangleEdges>::zCArray<zTPMTriangleEdges>(void)
 0001:001C4760       zCArray<zTPMTriangleEdges>::zCArray<zTPMTriangleEdges>(zCArray<zTPMTriangleEdges> const &)
 0001:001C4820       zCArray<zTPMTriangleEdges>::~zCArray<zTPMTriangleEdges>(void)
 0001:001C4840       zCArray<zTPMEdge>::zCArray<zTPMEdge>(void)
 0001:001C4850       zCArray<zTPMEdge>::zCArray<zTPMEdge>(zCArray<zTPMEdge> const &)
 0001:001C48E0       zCArray<zTPMEdge>::~zCArray<zTPMEdge>(void)
 0001:001C4900       zCArraySort<zTEdgeScore>::~zCArraySort<zTEdgeScore>(void)
 0001:001C4920       zCArray<zTLazyMesh>::~zCArray<zTLazyMesh>(void)
 0001:001C4960       zTLazyMesh::`vector deleting destructor'(uint)
 0001:001C49C0       zCArray<Vertex *>::RemoveOrderIndex(int)
 0001:001C49F0       zCArray<Triangle *>::InsertEnd(Triangle * const &)
 0001:001C4AC0       zCArray<Triangle *>::RemoveOrderIndex(int)
 0001:001C4AF0       zCArray<zTPMWedge *>::InsertEnd(zTPMWedge * const &)
 0001:001C4BC0       zCArray<zTWedgeColl>::InsertEnd(zTWedgeColl const &)
 0001:001C4CA0       zCArray<zTPMVertexUpdate>::AllocDelta(int)
 0001:001C4D00       zCArray<zTPMVertexUpdate>::InsertEnd(zTPMVertexUpdate const &)
 0001:001C4DD0       zCArray<zTPMTriangle>::AllocDelta(int)
 0001:001C4E40       zCArray<zTPMWedge>::AllocDelta(int)
 0001:001C4EB0       zCArray<zTPlane>::AllocDelta(int)
 0001:001C4F30       zCArray<zTPlane>::InsertEnd(zTPlane const &)
 0001:001C4F80       zCArray<zTPMTriangleEdges>::AllocDelta(int)
 0001:001C4FF0       zCArray<zTPMEdge>::AllocDelta(int)
 0001:001C5050       zCArray<Vertex *>::AllocDelta(int)
 0001:001C50B0       zCArray<Triangle *>::AllocDelta(int)
 0001:001C5110       zCArray<zTPMWedge *>::AllocDelta(int)
 0001:001C5170       zCArray<zTWedgeColl>::AllocDelta(int)
 0001:001C51E0       CalcArraySize(zCArray<zVEC3>)
 0001:001C5200       CalcArraySize(zCArray<zTPMTriangle>)
 0001:001C5220       CalcArraySize(zCArray<zTPMWedge>)
 0001:001C5240       CalcArraySize(zCArray<float>)
 0001:001C5260       CalcArraySize(zCArray<ushort>)
 0001:001C5280       CalcArraySize(zCArray<zTPMVertexUpdate>)
 0001:001C52A0       CalcArraySize(zCArray<zTPlane>)
 0001:001C52C0       CalcArraySize(zCArray<zTPMTriangleEdges>)
 0001:001C52E0       CalcArraySize(zCArray<zTPMEdge>)
 0001:001C5300       SetAndCopyArrayAdapt(uchar * &,zCArrayAdapt<float> &,zCArray<float> const &)
 0001:001C5340       zCArrayAdapt<zTPMTriangleEdges>::SetArray(void *,int)
 0001:001C5360       zCArrayAdapt<zTPMEdge>::SetArray(void *,int)
 0001:001C55A0       zCProgMeshProto::_CreateNewInstance(void)
 0001:001C57F0       zCMeshSoftSkin::_CreateNewInstance(void)
 0001:001C58B0       zCProgMeshProto::IsBBox3DLocal(void)
 0001:001C58C0       zCProgMeshProto::GetBBox3D(void)
 0001:001C58F0       zCProgMeshProto::GetOBBox3D(void)
 0001:001C5900       zCProgMeshProto::DynLightVisual(zCArray<zCVobLight *> const &,zMAT4 *)
 0001:001C5910       zCProgMeshProto::GetRenderSortKey(void)
 0001:001C5920       zCProgMeshProto::CanTraceRay(void)
 0001:001C5930       zCProgMeshProto::GetAlphaTestingEnabled(void)
 0001:001C5940       zCProgMeshProto::SetAlphaTestingEnabled(int)
 0001:001C5950       zCMeshSoftSkin::_GetClassDef(void)
 0001:001C5960       nullsub_51
 0001:001C5970       nullsub_52
 0001:001C59F0       nullsub_53
 0001:001C5A20       zCProgMeshProto::zCSubMesh::zCSubMesh(void)
 0001:001C5A70       zCProgMeshProto::zCSubMesh::~zCSubMesh(void)
 0001:001C5AF0       zCProgMeshProto::zCProgMeshProto(void)
 0001:001C5C40       zCProgMeshProto::_GetClassDef(void)
 0001:001C5C50       zCProgMeshProto::`scalar deleting destructor'(uint)
 0001:001C5C80       zCProgMeshProto::~zCProgMeshProto(void)
 0001:001C5D70       zCProgMeshProto::CalcRenderSortKey(void)
 0001:001C5DB0       zCProgMeshProto::SetLODParamStrengthModifier(float)
 0001:001C5E10       zCProgMeshProto::GetLODParamStrengthModifier(void)
 0001:001C5E30       zCProgMeshProto::PackStaticVertexBuffers(void)
 0001:001C6100       zCProgMeshProto::GetFileExtension(int)
 0001:001C6120       zCProgMeshProto::LoadVisualVirtual(zSTRING const &)
 0001:001C6130       zCProgMeshProto::GetVisualName(void)
 0001:001C6180       zCProgMeshProto::Load(zSTRING const &)
 0001:001C6B90       zCProgMeshProto::BuildProgMeshProto(zCMesh *,zCProgMeshProto *,zCArray<int> *,int)
 0001:001C6BD0       zCProgMeshBuilder::`scalar deleting destructor'(uint)
 0001:001C6BF0       zCProgMeshProto::CheckRayPolyIntersection(zCProgMeshProto::zCSubMesh *,int,zVEC3 const &,zVEC3 const &,zVEC3 &,float &)
 0001:001C6EE0       zCProgMeshProto::CheckRayPolyIntersection2Sided(zCProgMeshProto::zCSubMesh *,int,zVEC3 const &,zVEC3 const &,zVEC3 &,float &)
 0001:001C71A0       zCProgMeshProto::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:001C7380       zCProgMeshProto::GetNumTri(void)
 0001:001C73A0       zCProgMeshProto::GetPolygon(int)
 0001:001C7530       zCProgMeshProto::GetMesh(int)
 0001:001C79B0       zCProgMeshProto::GetLowestLODNumPolys(void)
 0001:001C79D0       zCProgMeshProto::GetLowestLODPoly(int,zVEC3 * &)
 0001:001C7B80       nullsub_3
 0001:001C7B90       nullsub_4
 0001:001C7BA0       zCProgMeshProto::InitProgMeshProto(void)
 0001:001C7D20       zCProgMeshProto::CreateDynamicVertexBuffer(void)
 0001:001C7D80       zCProgMeshProto::CleanupProgMeshProto(void)
 0001:001C7DF0       zCProgMeshProto::CalcLODRenderVertPerc(zTRenderContext const &)
 0001:001C7FA0       zCProgMeshProto::CalcLODRenderArgs(zTRenderContext const &,zCProgMeshProto::zTLODRenderArgs &)
 0001:001C81E0       zCProgMeshProto::CalcLODRenderArgsMin(zTRenderContext const &,zCProgMeshProto::zTLODRenderArgs &)
 0001:001C83E0       zCProgMeshProto::CalcLODRenderArgsSubMesh(zTRenderContext const &,zCProgMeshProto::zTLODRenderArgs const &,zCProgMeshProto::zCSubMesh const *,zCProgMeshProto::zTLODRenderArgsSubMesh &)
 0001:001C8470       zCProgMeshProto::Render(zTRenderContext &)
 0001:001C8680       zCProgMeshProto::RenderProgMesh(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *,float,float)
 0001:001C8C50       zCProgMeshProto::RenderStatic(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *)
 0001:001C8E30       zCProgMeshProto::RenderStaticLOD(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *)
 0001:001C9170       zCProgMeshProto::SoftwareTransformVerts(int,zCProgMeshProto::zTLODRenderArgs *,float,float)
 0001:001C9F50       zCProgMeshProto::RenderDynamicLOD(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *,float,float)
 0001:001CA820       zCProgMeshProto::CalcSubdiv(int,zCProgMeshProto::zTLODRenderArgs const *)
 0001:001CA8E0       zCProgMeshProto::CalcNumSubdivEdges(zCProgMeshProto::zCSubMesh *,zCProgMeshProto::zTLODRenderArgs const *,zCProgMeshProto::zTLODRenderArgsSubMesh &)
 0001:001CA940       zCProgMeshProto::CalcSubdivSubMesh(zCProgMeshProto::zCSubMesh *,zCVertexBuffer *,zCProgMeshProto::zTLODRenderArgs const *,zCRenderLightContainer *,zCProgMeshProto::zTLODRenderArgsSubMesh &)
 0001:001CAC60       zCProgMeshProto::RenderDynamicSubdiv(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *,float,float)
 0001:001CB2F0       zCProgMeshProto::RenderStaticLODShadow(zTRenderContext &,int,zCProgMeshProto::zTLODRenderArgs *,zCRenderLightContainer *)
 0001:001CBDA0       zCVertexBuffer::SetXYZ(ulong,zVEC3 const &)
 0001:001CBDD0       zCShader::Clear(void)
 0001:001CBDE0       nullsub_25
 0001:001CBE00       zCProgMeshProto::GetFileVersion(void)
 0001:001CBE10       zCProgMeshProto::Save(zCFileBIN &)
 0001:001CC270       zCProgMeshProto::Load(zCFileBIN &)
 0001:001CCBD0       zCMeshSoftSkin::zCMeshSoftSkin(void)
 0001:001CCC30       zCMeshSoftSkin::`scalar deleting destructor'(uint)
 0001:001CCC60       zCMeshSoftSkin::~zCMeshSoftSkin(void)
 0001:001CCD70       zCMeshSoftSkin::AllocVertWeightStream(int,int)
 0001:001CCDC0       zCMeshSoftSkin::DeleteVertWeightStream(void)
 0001:001CCDF0       zCMeshSoftSkin::AddNumWeightEntry(int const &)
 0001:001CCE10       zCMeshSoftSkin::AddWeightEntry(zCMeshSoftSkin::zTWeightEntry const &)
 0001:001CCE50       zCMeshSoftSkin::ResetVertWeightIterator(void)
 0001:001CCE60       zCMeshSoftSkin::GetVertWeightStreamSize(void)
 0001:001CCEA0       zCMeshSoftSkin::BuildNodeIndexList(void)
 0001:001CD050       zCMeshSoftSkin::DeleteNodeOBBList(void)
 0001:001CD0C0       zCMeshSoftSkin::BuildNodeOBBList(void)
 0001:001CD660       zCMeshSoftSkin::GetFileVersion(void)
 0001:001CD670       zCMeshSoftSkin::Load(zCFileBIN &)
 0001:001CD930       zCMeshSoftSkin::Save(zCFileBIN &)
 0001:001CDEA0       zCMeshSoftSkin::RenderSoftSkin(zTRenderContext &,zCArray<zMAT4 *> const &,zCRenderLightContainer *,float)
 0001:001CE510       zCProgMeshProto::InitSetupLowestLOD(void)
 0001:001CE530       zCMeshSoftSkin::SetupLowestLOD(zTRenderContext &,zCArray<zMAT4 *> const &,float,int &)
 0001:001CEFC0       zCMeshSoftSkin::GetLowestLODNumPolys(void)
 0001:001CEFD0       zCMeshSoftSkin::GetLowestLODPoly(int,zVEC3 * &)
 0001:001CF0E0       nullsub_5
 0001:001CF0F0       nullsub_6
 0001:001CF100       zCProgMeshConvertFileHandler::zCProgMeshConvertFileHandler(void)
 0001:001CF1C0       zCProgMeshConvertFileHandler::`scalar deleting destructor'(uint)
 0001:001CF1E0       zCProgMeshConvertFileHandler::HandleFile(zSTRING const &,char const *,_finddata_t)
 0001:001CF3B0       zCArrayAdapt<zTPMTriangle>::~zCArrayAdapt<zTPMTriangle>(void)
 0001:001CF3C0       zCArrayAdapt<zTPMWedge>::~zCArrayAdapt<zTPMWedge>(void)
 0001:001CF3D0       zCArrayAdapt<zTPMWedge>::SetArray(void *,int)
 0001:001CF3F0       zCArrayAdapt<float>::~zCArrayAdapt<float>(void)
 0001:001CF400       zCArrayAdapt<float>::SetArray(void *,int)
 0001:001CF420       zCArrayAdapt<ushort>::~zCArrayAdapt<ushort>(void)
 0001:001CF430       zCArrayAdapt<ushort>::SetArray(void *,int)
 0001:001CF450       zCArrayAdapt<zTPlane>::~zCArrayAdapt<zTPlane>(void)
 0001:001CF460       zCArrayAdapt<zTPlane>::SetArray(void *,int)
 0001:001CF480       zCArrayAdapt<zTPMTriangleEdges>::~zCArrayAdapt<zTPMTriangleEdges>(void)
 0001:001CF490       zCArrayAdapt<zTPMEdge>::~zCArrayAdapt<zTPMEdge>(void)
 0001:001CF4A0       zCArrayAdapt<zTPMVertexUpdate>::~zCArrayAdapt<zTPMVertexUpdate>(void)
 0001:001CF4B0       zCArrayAdapt<zTPMVertexUpdate>::SetArray(void *,int)
 0001:001CF4D0       zCArrayAdapt<zVEC3>::~zCArrayAdapt<zVEC3>(void)
 0001:001CF4E0       zCArrayAdapt<zVEC3>::SetArray(void *,int)
 0001:001CF500       zCArray<ushort>::AllocAbs(int)
 0001:001CF570       zCArray<zCOBBox3D *>::~zCArray<zCOBBox3D *>(void)
 0001:001CF590       zCArray<zCMeshSoftSkin::zTNodeWedgeNormal>::~zCArray<zCMeshSoftSkin::zTNodeWedgeNormal>(void)
 0001:001CF5B0       zCArray<zCOBBox3D *>::AllocDelta(int)
 0001:001CF610       zCArray<zCMeshSoftSkin::zTNodeWedgeNormal>::AllocDelta(int)
 0001:001CF690       zLerp(float,zVEC3 const &,zVEC3 const &)
 0001:001CF910       zCQuadMark::_CreateNewInstance(void)
 0001:001CF970       zCQuadMark::zCQuadMark(void)
 0001:001CFA90       zCQuadMark::_GetClassDef(void)
 0001:001CFAA0       zCQuadMark::IsBBox3DLocal(void)
 0001:001CFAB0       zCQuadMark::GetVisualName(void)
 0001:001CFB40       zCQuadMark::`scalar deleting destructor'(uint)
 0001:001CFB70       zCQuadMark::zTQuadMarkPoly::~zTQuadMarkPoly(void)
 0001:001CFB90       zCQuadMark::~zCQuadMark(void)
 0001:001CFCB0       zCQuadMark::SetVisualUsedBy(zCVob *)
 0001:001CFCE0       zCQuadMark::GetBBox3D(void)
 0001:001CFD00       zCQuadMark::Render(zTRenderContext &)
 0001:001CFDB0       zCQuadMark::ClipQuadPolyToPlane(zCQuadMark::zTQuadMarkPoly &,zCQuadMark::zTQuadMarkPoly &,zTPlane const &)
 0001:001CFFF0       zCQuadMark::ClipQuadPolyToWorldPoly(zCQuadMark::zTQuadMarkPoly &,zCPolygon *,zCArray<int> &)
 0001:001D0250       zCQuadMark::CalcQuadAxis(zCPolygon *,zVEC3 &,zVEC3 &)
 0001:001D0400       zCQuadMark::InitFirstQuadPoly(zCPolygon *,zVEC3 const &,zVEC3 const &,zVEC3 const &,zCQuadMark::zTEffectParams *)
 0001:001D08D0       zCQuadMark::InitQuadPoly(zCQuadMark::zTQuadMarkPoly &,zCPolygon *)
 0001:001D0950       zCQuadMark::ProjectQuadPolyToPlane(zCQuadMark::zTQuadMarkPoly const &,zCQuadMark::zTQuadMarkPoly &,zTPlane const &)
 0001:001D0A30       zCQuadMark::AddQuadPolyToQuadMesh(zCQuadMark::zTQuadMarkPoly &,zCPolygon *)
 0001:001D0BB0       zCQuadMark::GetNextWorldPoly(zCVertex *,zCVertex *)
 0001:001D0C40       zCQuadMark::ProcessWorldPoly(zCPolygon *)
 0001:001D0E00       zCQuadMark::CreateQuadMark(zVEC3 const &,zVEC3 const &,zVEC2 const &,zSTRING &,zCQuadMark::zTEffectParams *)
 0001:001D0F40       zCQuadMark::CreateQuadMark(zVEC3 const &,zVEC3 const &,zVEC2 const &,zCMaterial *,zCQuadMark::zTEffectParams *)
 0001:001D0FD0       zCQuadMark::CreateQuadMark(zVEC3 const &,zVEC3 const &,zVEC2 const &,zCQuadMark::zTEffectParams *)
 0001:001D1030       zCQuadMark::CreateQuadMark(zCPolygon *,zVEC3 const &,zVEC2 const &,zCQuadMark::zTEffectParams *)
 0001:001D1620       zCQuadMark::GetNumActive(void)
 0001:001D1640       zCQuadMark::ProcessAniTracker(void)
 0001:001D1880       zCArray<zCQuadMark::zTQuadMarkVert>::operator=(zCArray<zCQuadMark::zTQuadMarkVert> const &)
 0001:001D18E0       zCArray<zCQuadMark::zTQuadMarkAniState>::~zCArray<zCQuadMark::zTQuadMarkAniState>(void)
 0001:001D1900       zCArray<zCQuadMark::zTQuadMarkVert>::AllocDelta(int)
 0001:001D1970       zCArray<zCQuadMark::zTQuadMarkVert>::InsertEnd(zCQuadMark::zTQuadMarkVert const &)
 0001:001D19C0       zCArray<zCQuadMark::zTQuadMarkAniState>::InsertEnd(zCQuadMark::zTQuadMarkAniState const &)
 0001:001D1A10       zCArray<zCQuadMark::zTQuadMarkAniState>::AllocDelta(int)
 0001:001D1AB0       zCRayCacheElement::zCRayCacheElement(zCBspLeaf const *,zCRayCacheElement * *)
 0001:001D1B60       zCRayCacheElement::~zCRayCacheElement(void)
 0001:001D1C30       zCRayCacheElement::JumpBack(zCRayCacheElement * *)
 0001:001D1C50       nullsub_54
 0001:001D1C60       zCRayCache::Hit(void)
 0001:001D1C70       zCRayCache::HitList(void)
 0001:001D1C80       zCRayCache::LastTraceRayEffort(void)
 0001:001D1CB0       zCRayCache::StartTraceRay(zVEC3 const &,zVEC3 const &)
 0001:001D1F70       zCRayCacheElement::`scalar deleting destructor'(uint)
 0001:001D1F90       zCRayCache::StopTraceRay(void)
 0001:001D2170       zCRayCache::~zCRayCache(void)
 0001:001D2210       zCRayCache::NextNode(zCBspBase const *)
 0001:001D2790       operator*(zCPluecker const &,zCPluecker const &)
 0001:001D27D0       zCPluecker::operator-=(zCPluecker const &)
 0001:001D2800       zCRayCache::NodeDeleted(zCBspLeaf *)
 0001:001D28B0       zCRenderer::AlphaBlendFuncStringToType(zSTRING const &)
 0001:001D29A0       zCRenderer::AlphaBlendFuncTypeToString(zTRnd_AlphaBlendFunc)
 0001:001D2C20       zCRenderer::Vid_SetMode(int,int,int,HWND__ * *)
 0001:001D2CC0       zCRenderer::GetTexFormatInfo(zTRnd_TextureFormat)
 0001:001D2CF0       zCRenderer::DrawTile(zCTexture *,zVEC2 const &,zVEC2 const &,float,zVEC2 const &,zVEC2 const &,zCOLOR)
 0001:001D35E0       nullsub_7
 0001:001D35F0       zTRndSimpleVertex::zTRndSimpleVertex(void)
 0001:001D3630       zCRenderLightContainer::CompareLightScore(void const *,void const *)
 0001:001D3650       zCRenderLightContainer::CreatePrelightConfig(zTBBox3D const &)
 0001:001D3830       zCRenderLightContainer::CollectLights_FastPath(zTRenderContext const &)
 0001:001D3A40       zCMemPool<zCDynVobLightCacheElement>::~zCMemPool<zCDynVobLightCacheElement>(void)
 0001:001D3A80       zCRenderLightContainer::S_ReleaseVobLightRefs(void)
 0001:001D3A90       zCRenderLightContainer::CollectLights_DynLights(zTRenderContext const &)
 0001:001D3F40       zClamp01(float &)
 0001:001D3F70       zTBBox3D::IsIntersecting(zTBSphere3D const &)
 0001:001D3FE0       zCDynVobLightCacheElement::ReleaseLights(void)
 0001:001D4020       zCRenderLightContainer::CollectLights_StatLights(zTRenderContext const &)
 0001:001D48C0       zCRenderLightContainer::CollectLights(zTRenderContext const &)
 0001:001D4C10       zCRenderLightContainer::CalcStatLightDir(zTRenderContext const &)
 0001:001D4D80       zCRenderLightContainer::LightVertex(zVEC3 const &,zVEC3 const &)
 0001:001D4FE0       zCRenderLightContainer::Activate(zMAT4 const &)
 0001:001D5100       zCRenderLightContainer::SetupRendererLights(void)
 0001:001D5170       zCArray<zCVobLight *>::zCArray<zCVobLight *>(int)
 0001:001D51A0       zCArray<zCVobLight *>::IsInList(zCVobLight * const &)
 0001:001D51E0       zCMemPool<zCDynVobLightCacheElement>::zCMemPool<zCDynVobLightCacheElement>(uint,uint)
 0001:001D5200       zCArraySort<zCRenderLightContainer::zTLightScore>::zCArraySort<zCRenderLightContainer::zTLightScore>(int)
 0001:001D5240       zCArraySort<zCRenderLightContainer::zTLightScore>::~zCArraySort<zCRenderLightContainer::zTLightScore>(void)
 0001:001D5260       zCArraySort<zCRenderLightContainer::zTLightScore>::QuickSort(void)
 0001:001D5280       zCCache<zCVob const *,zCDynVobLightCacheElement>::zCCache<zCVob const *,zCDynVobLightCacheElement>(ulong,ulong)
 0001:001D5300       zCCache<zCVob const *,zCDynVobLightCacheElement>::~zCCache<zCVob const *,zCDynVobLightCacheElement>(void)
 0001:001D5430       zCCache<zCVob const *,zCDynVobLightCacheElement>::ClearCache(void)
 0001:001D5560       zCCache<zCVob const *,zCDynVobLightCacheElement>::PurgeCache(void)
 0001:001D56A0       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::~zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>(void)
 0001:001D56F0       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::SizeIndex(void)
 0001:001D5700       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::SizeData(void)
 0001:001D5710       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::SizeAll(void)
 0001:001D5720       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::IndexPtr(ulong)
 0001:001D5730       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::DataPtr(ulong)
 0001:001D5740       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::ManDatPtr(ulong)
 0001:001D5750       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::IndexIsEqual(void const *,void const *)
 0001:001D5770       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::CopyIndex(void *,void const *)
 0001:001D5790       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::DestructIndex(void *)
 0001:001D57A0       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::Hash(void const *,ulong &,ulong &)
 0001:001D57C0       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::ConstructData(void *)
 0001:001D57E0       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::DestructData(void *)
 0001:001D5830       zCCache<zCVob const *,zCDynVobLightCacheElement>::`scalar deleting destructor'(uint)
 0001:001D5850       zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::`scalar deleting destructor'(uint)
 0001:001D5870       zCArraySort<zCRenderLightContainer::zTLightScore>::InsertEnd(zCRenderLightContainer::zTLightScore const &)
 0001:001D5950       zCCacheData<zCVob const *,zCDynVobLightCacheElement>::GetData(zCVob const * const &)
 0001:001D5A10       zCDynVobLightCacheElement::UpdateContents(zCVob const *)
 0001:001D5DB0       zCDynVobLightCacheElement::operator delete(void *)
 0001:001D5DC0       zCDynVobLightCacheElement::`scalar deleting destructor'(uint)
 0001:001D5E50       zCShader::zCShader(void)
 0001:001D5E70       zCShader::~zCShader(void)
 0001:001D5E80       zCShader::InsertStage(int,zCShaderStage *)
 0001:001D5EB0       zCShaderStage::zCShaderStage(void)
 0001:001D5F10       zCRndAlphaSortObject_WorldPoly::zCRndAlphaSortObject_WorldPoly(void)
 0001:001D5F20       zCRndAlphaSortObject_WorldPoly::~zCRndAlphaSortObject_WorldPoly(void)
 0001:001D5F30       zCRndAlphaSortObject_WorldPoly::`vector deleting destructor'(uint)
 0001:001D5FD0       zCRndAlphaSortObject_WorldPoly::GetFreeAlphaWorldPoly(void)
 0001:001D60C0       zCRndAlphaSortObject_WorldPoly::ResetFreeList(void)
 0001:001D60E0       zCRndAlphaSortObject_WorldPoly::SetZValueByPoly(zCPolygon *,zTPlane const &)
 0001:001D6140       zCRndAlphaSortObject_WorldPoly::Draw(int)
 0001:001D63D0       zCRenderManager::zCRenderManager(void)
 0001:001D6400       zCRenderManager::~zCRenderManager(void)
 0001:001D64D0       zCRenderManager::InitRenderManager(void)
 0001:001D65E0       zCRenderManager::CleanupRenderManager(void)
 0001:001D6650       zCRenderManager::GetFreeShader(void)
 0001:001D6740       zCRenderManager::GetFreeShaderStage(void)
 0001:001D6830       zCRenderManager::AddPolyAlphaSimple(zCPolygon *)
 0001:001D6900       zCRenderManager::FlushSimpleAlphaPolys(void)
 0001:001D69F0       zCRenderManager::Flush(void)
 0001:001D6DF0       zCRenderManager::SortMaterialPolys(zCMaterial *)
 0001:001D6ED0       zCRenderManager::BuildShader(zCMaterial *,zCTexture *,ulong,int,int,zCShader * &)
 0001:001D7B30       nullsub_21
 0001:001D7B40       nullsub_22
 0001:001D7B50       nullsub_23
 0001:001D7B60       zCRenderManager::GetFreeDynVertexBuffer(zCShader *)
 0001:001D7C70       zCRenderManager::SetRGBA(zCShaderStage *)
 0001:001D7D50       zCRenderManager::SetStageColorOp(ulong,zTRnd_AlphaBlendFunc)
 0001:001D7DB8       nullsub_26
 0001:001D7DD0       zCRenderManager::SetTextureStage0(zCShader *,ulong,zCVertexBuffer *)
 0001:001D7F20       zCRenderManager::SetTextureTransform(zCShader *,ulong,ulong)
 0001:001D81F0       zCRenderManager::SetAlphaFunc(zCShader *,ulong,ulong)
 0001:001D8330       zCRenderManager::DrawVertexBuffer(zCVertexBuffer *,int,int,ushort *,ulong,zCMaterial *,int)
 0001:001D8390       zCRenderManager::DrawVertexBuffer(zCVertexBuffer *,int,int,ushort *,ulong,zCShader *)
 0001:001D86F0       zCRenderManager::DrawVertexBufferSingleMaterial(zCArray<zCPolygon *> const &,zCShader *)
 0001:001D8700       zCRenderManager::PackVB(zCArray<zCPolygon *> const &,zCShader *)
 0001:001D9E10       std::map<zSTRING,zCMapDetailTexture::zTMapDetailTextureEntry,std::less<zSTRING>,std::allocator<zCMapDetailTexture::zTMapDetailTextureEntry>>::~map<zSTRING,zCMapDetailTexture::zTMapDetailTextureEntry,std::less<zSTRING>,std::allocator<zCMapDetailTexture::zTMapDetailTextureEntry>>(void)
 0001:001D9F00       zCMapDetailTexture::S_Init(void)
 0001:001DA210       zCMapDetailTexture::zTMapDetailTextureEntry::~zTMapDetailTextureEntry(void)
 0001:001DA260       std::pair<zSTRING const,zCMapDetailTexture::zTMapDetailTextureEntry>::~pair<zSTRING const,zCMapDetailTexture::zTMapDetailTextureEntry>(void)
 0001:001DA2E0       zCMapDetailTexture::S_Cleanup(void)
 0001:001DA2F0       zCMapDetailTexture::S_GetDetailTextureInfo(zSTRING const &)
 0001:001DA360       std::map<zSTRING,zCMapDetailTexture::zTMapDetailTextureEntry,std::less<zSTRING>,std::allocator<zCMapDetailTexture::zTMapDetailTextureEntry>>::map<zSTRING,zCMapDetailTexture::zTMapDetailTextureEntry,std::less<zSTRING>,std::allocator<zCMapDetailTexture::zTMapDetailTextureEntry>>(std::less<zSTRING> const &,std::allocator<zCMapDetailTexture::zTMapDetailTextureEntry> const &)
 0001:001DAC90       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Refcnt(char const *)
 0001:001DACA0       std::allocator<char>::deallocate(void *,uint)
 0001:001DB180       std::_Construct(std::pair<zSTRING const,zCMapDetailTexture::zTMapDetailTextureEntry> *,std::pair<zSTRING const,zCMapDetailTexture::zTMapDetailTextureEntry> const &)
 0001:001DB230       operator delete(void *,void *)
 0001:001DB240       std::pair<zSTRING const,zCMapDetailTexture::zTMapDetailTextureEntry>::`scalar deleting destructor'(uint)
 0001:001DB470       zCResource::zCResource(void)
 0001:001DB610       zCResource::_GetClassDef(void)
 0001:001DB620       zCResource::`scalar deleting destructor'(uint)
 0001:001DB650       zCResource::~zCResource(void)
 0001:001DB6B0       zCResource::SetCacheInPriority(float)
 0001:001DB6E0       zCResource::LoadResourceData(void)
 0001:001DB7C0       zCResource::ReleaseResourceData(void)
 0001:001DB7D0       zCResource::GetResSizeBytes(void)
 0001:001DB7E0       zCResource::GetCacheConfig(ulong &,ulong &)
 0001:001DB7F0       zCResource::CacheOut(void)
 0001:001DB810       zCResource::TouchTimeStamp(void)
 0001:001DB890       zCResource::TouchTimeStampLocal(void)
 0001:001DB8A0       zCResource::LockStateChange(void)
 0001:001DB8B0       zCResource::UnlockStateChange(void)
 0001:001DB8C0       zCResourceManager::zCResourceManager(void)
 0001:001DB950       zCThread::IsThreadRunning(void)
 0001:001DB960       zCThread::GetTerminationRequested(void)
 0001:001DB970       zCThread::SetTerminationRequested(int)
 0001:001DB980       zCResourceManager::`scalar deleting destructor'(uint)
 0001:001DB9A0       zCResourceManager::~zCResourceManager(void)
 0001:001DBA30       zCResourceManager::PurgeCaches(zCClassDef *)
 0001:001DBC30       zCResourceManager::SetThreadingEnabled(int)
 0001:001DBC40       zCResourceManager::GetThreadingEnabled(void)
 0001:001DBC50       zCResourceManager::InitClassCache(void)
 0001:001DBEC0       zCResourceManager::GetClassCache(zCResource *)
 0001:001DBF30       zCResourceManager::GetClassCacheIndex(zCClassDef *)
 0001:001DBF60       zCResourceManager::LoadResource(zCResource *)
 0001:001DC040       zCResourceManager::CacheIn(zCResource *,float)
 0001:001DC350       zCResourceManager::CacheOut(zCResource *)
 0001:001DC480       zCResourceManager::TouchTimeStamp(zCResource *)
 0001:001DC4F0       zCResourceManager::DoFrameActivity(void)
 0001:001DC580       zCResourceManager::Evict(void)
 0001:001DC640       zCResourceManager::ThreadProc(void)
 0001:001DC760       zCResourceManager::RemoveCacheInQueue(zCResource *)
 0001:001DC7E0       zCResourceManager::GetNextCacheInQueue(void)
 0001:001DC7F0       zCResourceManager::InsertCacheInQueue(zCResource *,float)
 0001:001DC8C0       zCResourceManager::LockCacheInQueue(void)
 0001:001DC8E0       zCResourceManager::UnlockCacheInQueue(void)
 0001:001DC900       zCResourceManager::WaitForCacheIn(zCResource *)
 0001:001DC960       zCResourceManager::QueueProcess_Start(void)
 0001:001DC990       zCResourceManager::QueueProcess_Suspend(void)
 0001:001DC9A0       zCResourceManager::QueueProcess_Resume(void)
 0001:001DC9D0       zCResourceManager::PrintStatusDebug(void)
 0001:001DD360       zCResourceManager::zCClassCache::zCClassCache(void)
 0001:001DD380       zCResourceManager::zCClassCache::~zCClassCache(void)
 0001:001DD390       zCResourceManager::zCClassCache::InsertRes(zCResource *)
 0001:001DD3F0       zCResourceManager::zCClassCache::RemoveRes(zCResource *)
 0001:001DD460       zCResourceManager::zCClassCache::TouchRes(zCResource *)
 0001:001DD4D0       zCArray<zCResourceManager::zCClassCache>::~zCArray<zCResourceManager::zCClassCache>(void)
 0001:001DD500       zCArray<zCClassDef *>::~zCArray<zCClassDef *>(void)
 0001:001DD520       zCResourceManager::zCClassCache::`vector deleting destructor'(uint)
 0001:001DD570       zCArray<zCResourceManager::zCClassCache>::AllocDelta(int)
 0001:001DD650       zCArray<zCClassDef *>::InsertEnd(zCClassDef * const &)
 0001:001DD750       zCSession::zCSession(void)
 0001:001DD780       zCSession::SetCamera(zCCamera *)
 0001:001DD790       zCSession::GetCamera(void)
 0001:001DD7A0       zCSession::GetCameraAI(void)
 0001:001DD7B0       zCSession::GetCameraVob(void)
 0001:001DD7C0       zCSession::GetViewport(void)
 0001:001DD7D0       zCSession::GetCutsceneManager(void)
 0001:001DD7E0       zCSession::`scalar deleting destructor'(uint)
 0001:001DD800       zCSession::~zCSession(void)
 0001:001DD850       zCSession::Done(void)
 0001:001DD910       zCSession::Init(void)
 0001:001DD950       zCSession::DesktopInit(void)
 0001:001DD9E0       zCSession::CutsceneSystemInit(void)
 0001:001DDA10       zCSession::Render(void)
 0001:001DDA60       zCSession::RenderBlit(void)
 0001:001DDA80       zCSession::CamInit(void)
 0001:001DDC80       zCSession::CamInit(zCVob *,zCCamera *)
 0001:001DDCF0       zCSession::GetWorld(void)
 0001:001DDD00       zCSession::SaveWorld(zSTRING const &,zCWorld::zTWorldSaveMode,int,int)
 0001:001DDD10       zCSession::LoadWorld(zSTRING const &,zCWorld::zTWorldLoadMode)
 0001:001DDD20       zCSession::SetTime(int,int,int)
 0001:001DDD30       zCSession::GetTime(int &,int &,int &)
 0001:001DDD40       zCSession::SetWorld(zCWorld *)
 0001:001DE340       zCSkyControler_Indoor::_CreateNewInstance(void)
 0001:001DE420       zCSkyControler::GetCloudShadowScale(void)
 0001:001DE430       zCSkyControler::SetCloudShadowScale(float)
 0001:001DE440       zCSkyControler::SetFillBackground(int)
 0001:001DE450       zCSkyControler::GetFillBackground(void)
 0001:001DE460       zCSkyControler::SetLightDirty(void)
 0001:001DE470       zCSkyControler::SetRelightTime(float)
 0001:001DE480       zCSkyControler::GetRelightCtr(void)
 0001:001DE490       zCSkyControler::GetDaylightColorFromIntensity(int)
 0001:001DE4B0       zCSkyControler::GetGlobalWindVec(zVEC3 &,zTAnimationMode)
 0001:001DE4C0       zCSkyControler::SetGlobalSkyScale(float)
 0001:001DE4D0       zCSkyControler::GetGlobalSkyScale(void)
 0001:001DE4E0       zCSkyControler::GetGlobalSkyScaleChanged(void)
 0001:001DE4F0       zCSkyControler::SetCameraLocationHint(zCSkyControler::zTCamLocationHint)
 0001:001DE500       zCSkyControler::SetWeatherType(zTWeather)
 0001:001DE510       zCSkyControler::GetWeatherType(void)
 0001:001DE520       zCSkyControler_Mid::_GetClassDef(void)
 0001:001DE530       zCSkyControler_Indoor::operator delete(void *)
 0001:001DE550       zCSkyControler_Indoor::_GetClassDef(void)
 0001:001DE560       zCSkyControler_Indoor::GetTime(void)
 0001:001DE570       zCSkyControler_Indoor::ResetTime(void)
 0001:001DE580       zCSkyControler_Indoor::SetOverrideColor(zVEC3)
 0001:001DE590       zCSkyControler_Indoor::SetOverrideColorFlag(int)
 0001:001DE5A0       zCSkyControler_Indoor::UpdateWorldDependencies(void)
 0001:001DE5B0       zCSkyControler_Indoor::`scalar deleting destructor'(uint)
 0001:001DE5E0       zCSkyControler_Indoor::~zCSkyControler_Indoor(void)
 0001:001DE6A0       zCSkyControler::_GetClassDef(void)
 0001:001DE6B0       zCSkyControler::zCSkyControler(void)
 0001:001DE890       zCSkyControler::`scalar deleting destructor'(uint)
 0001:001DE8C0       zCSkyControler::~zCSkyControler(void)
 0001:001DE930       zCSkyControler::ClearBackground(zCOLOR)
 0001:001DEBF0       zCSkyControler_Mid::zCSkyControler_Mid(void)
 0001:001DEC60       zCSkyControler_Mid::`scalar deleting destructor'(uint)
 0001:001DEC90       zCSkyControler_Mid::InitUnderwaterPFX(void)
 0001:001DEEE0       zCUnderwaterPFX::`scalar deleting destructor'(uint)
 0001:001DEF10       zCUnderwaterPFX::~zCUnderwaterPFX(void)
 0001:001DEF20       zCSkyControler_Mid::~zCSkyControler_Mid(void)
 0001:001DEFE0       zCSkyControler_Mid::SetUnderwaterFX(int)
 0001:001DF050       zCSkyControler_Mid::GetUnderwaterFX(void)
 0001:001DF060       zCSkyControler_Mid::RenderSkyPre(void)
 0001:001DF130       zCSkyControler_Mid::RenderSkyPost(int)
 0001:001DF310       zCSkyControler_Mid::InitScreenBlend(void)
 0001:001DF430       zCSkyControler_Mid::RenderScreenBlend(void)
 0001:001DF5F0       zCSkyControler_Mid::SetScreenBlendAlpha(int)
 0001:001DF610       zCSkyControler_Mid::SetScreenBlendColor(zCOLOR const &)
 0001:001DF620       zCSkyControler_Mid::SetScreenBlendAlphaFunc(zTRnd_AlphaBlendFunc)
 0001:001DF630       zCSkyControler_Indoor::zCSkyControler_Indoor(void)
 0001:001DF6D0       zCSkyControler_Indoor::SetTime(float)
 0001:001DF770       zCSkyControler_Indoor::SetFarZ(float)
 0001:001DF780       zCSkyControler_Indoor::GetFarZ(void)
 0001:001DF790       zCSkyControler_Indoor::SetFarZScalability(float)
 0001:001DF7E0       zCSkyControler_Indoor::GetFarZScalability(void)
 0001:001DF7F0       zCSkyControler_Indoor::SetBackgroundColor(zCOLOR)
 0001:001DF800       zCSkyControler_Indoor::GetBackgroundColor(void)
 0001:001DF810       zCSkyControler_Indoor::GetBackgroundColorDef(void)
 0001:001DF820       zCSkyControler_Indoor::RenderSkyPre(void)
 0001:001DF8C0       zCSkyControler_Indoor::RenderSkyPost(int)
 0001:001DF8D0       zCUnderwaterPFX::Render(zTRenderContext &)
 0001:001DF8F0       zCUnderwaterPFX::ProcessParticles(void)
 0001:001DFCF0       zCUnderwaterPFX::CreateParticles(void)
 0001:001DFFB0       zCSkyControler_Outdoor::_CreateNewInstance(void)
 0001:001E0010       zCSkyControler_Outdoor::operator delete(void *)
 0001:001E0030       nullsub_55
 0001:001E00A0       zCOutdoorRainFX::zCOutdoorRainFX(void)
 0001:001E0250       zCOutdoorRainFX::~zCOutdoorRainFX(void)
 0001:001E0350       zCOutdoorRainFX::UpdateSound(float)
 0001:001E0570       zCOutdoorRainFX::SetWeatherType(zTWeather)
 0001:001E08E0       zCOutdoorRainFX::SetEffectWeight(float,float)
 0001:001E0A70       zCOutdoorRainFX::CheckCameraBeam(zVEC3 const &)
 0001:001E0C70       zCOutdoorRainFX::CreateParticles(zTRenderContext &)
 0001:001E1400       zCOutdoorRainFX::UpdateParticles(void)
 0001:001E15D0       zCOutdoorRainFX::RenderParticles(zTRenderContext &,zCOLOR)
 0001:001E2790       zCSkyState::PresetDay0(void)
 0001:001E2920       zCSkyState::PresetDay1(void)
 0001:001E2AA0       zCSkyState::PresetDay2(void)
 0001:001E2B70       zCSkyState::PresetEvening(void)
 0001:001E2C40       zCSkyState::PresetNight0(void)
 0001:001E2E30       zCSkyState::PresetNight1(void)
 0001:001E2FB0       zCSkyState::PresetNight2(void)
 0001:001E3130       zCSkyState::PresetDawn(void)
 0001:001E3200       zCSkyLayerData::zCSkyLayerData(void)
 0001:001E3320       zCSkyLayerData::~zCSkyLayerData(void)
 0001:001E33B0       zCSkyState::zCSkyState(void)
 0001:001E33E0       zCSkyState::~zCSkyState(void)
 0001:001E3400       zCSkyLayer::CreateSkyPoly(void)
 0001:001E35D0       zCSkyLayer::zCSkyLayer(void)
 0001:001E3610       zCSkyLayer::~zCSkyLayer(void)
 0001:001E3670       zCSkyLayer::CreateSkyDomeMesh(void)
 0001:001E3D40       zCSkyLayer::SetDomeMeshEnabled(int)
 0001:001E3DA0       zCSkyLayer::SetSkyDomeTexture(zCTexture *)
 0001:001E3DF0       zCSkyLayer::SetSkyPolyTexture(zCTexture *)
 0001:001E3E00       zCSkyLayer::RenderSkyLayer(zCSkyState *)
 0001:001E3E30       zCSkyLayer::RenderSkyPoly(zCSkyState *)
 0001:001E4240       zCSkyLayer::RenderSkyDome(zCSkyState *)
 0001:001E46D0       zCSkyLayer::ColorizeSkyDome(void)
 0001:001E4D00       zCSkyLayer::RenderRainCloudLayer(zCOLOR)
 0001:001E5220       zCSkyControler_Outdoor::zCSkyControler_Outdoor(int)
 0001:001E56A0       zCSkyPlanet::zCSkyPlanet(void)
 0001:001E56B0       zCSkyPlanet::~zCSkyPlanet(void)
 0001:001E56E0       zCSkyControler_Outdoor::_GetClassDef(void)
 0001:001E56F0       zCSkyControler_Outdoor::GetTime(void)
 0001:001E5700       zCSkyControler_Outdoor::SetBackgroundColor(zCOLOR)
 0001:001E5710       zCSkyControler_Outdoor::GetBackgroundColor(void)
 0001:001E5740       zCSkyControler_Outdoor::GetBackgroundColorDef(void)
 0001:001E5750       zCSkyControler_Outdoor::SetOverrideColor(zVEC3)
 0001:001E5770       zCSkyControler_Outdoor::SetOverrideColorFlag(int)
 0001:001E5780       zCSkyControler_Outdoor::GetRenderLightning(void)
 0001:001E5790       zCSkyControler_Outdoor::SetCameraLocationHint(zCSkyControler::zTCamLocationHint)
 0001:001E57A0       zCSkyControler_Outdoor::GetGlobalSkyScale(void)
 0001:001E57B0       zCSkyControler_Outdoor::GetGlobalSkyScaleChanged(void)
 0001:001E57C0       zCSkyControler_Outdoor::`scalar deleting destructor'(uint)
 0001:001E57F0       zCSkyControler_Outdoor::~zCSkyControler_Outdoor(void)
 0001:001E5A00       zCSkyControler_Outdoor::Init(void)
 0001:001E6290       zCSkyControler_Outdoor::SetGlobalSkyScale(float)
 0001:001E62C0       zCSkyControler_Outdoor::UpdateWorldDependencies(void)
 0001:001E6310       zCSkyControler_Outdoor::GetStateTextureSearch(int,int,int)
 0001:001E6360       zCSkyControler_Outdoor::ApplyStateTexToLayer(int,int)
 0001:001E6830       zCSkyControler_Outdoor::RenderPlanets(float)
 0001:001E6EA0       zCSkyControler_Outdoor::ReadFogColorsFromINI(void)
 0001:001E75F0       zCSkyControler_Outdoor::ApplyFogColorsFromINI(int)
 0001:001E76D0       zCSkyControler_Outdoor::CreateDefault(void)
 0001:001E7C20       zCSkyControler_Outdoor::Interpolate(void)
 0001:001E8340       nullsub_27
 0001:001E8350       zCSkyControler_Outdoor::SetTime(float)
 0001:001E8380       zCSkyControler_Outdoor::ResetTime(void)
 0001:001E83A0       zCSkyControler_Outdoor::GetDaylightColorFromIntensity(int)
 0001:001E83C0       zCSkyControler_Outdoor::CalcPolyLightCLUT(zVEC3 const &,zVEC3 const &)
 0001:001E84E0       zCSkyControler_Outdoor::InitSkyPFX(void)
 0001:001E86C0       zCSkyControler_Outdoor::CalcFog(void)
 0001:001E8E50       zCSkyControler_Outdoor::SetFarZ(float)
 0001:001E8E60       zCSkyControler_Outdoor::GetFarZ(void)
 0001:001E8E70       zCSkyControler_Outdoor::SetFarZScalability(float)
 0001:001E8EC0       zCSkyControler_Outdoor::GetFarZScalability(void)
 0001:001E8ED0       zCSkyControler_Outdoor::RenderSkyPFX(void)
 0001:001E9210       zCSkyControler_Outdoor::CalcGlobalWind(void)
 0001:001E97A0       nullsub_28
 0001:001E97B0       zCSkyControler_Outdoor::GetGlobalWindVec(zVEC3 &,zTAnimationMode)
 0001:001E97F0       zCSkyControler_Outdoor::GetCloudShadowScale(void)
 0001:001E9810       zCSkyControler_Outdoor::SetCloudShadowScale(float)
 0001:001E9850       zCSkyControler_Outdoor::RenderSkyPre(void)
 0001:001E9F30       zCSkyControler_Outdoor::ProcessRainFX(void)
 0001:001EA230       zCSkyControler_Outdoor::SetRainFXWeight(float,float)
 0001:001EA360       zCSkyControler_Outdoor::RenderSetup(void)
 0001:001EA3D0       zCSkyControler_Outdoor::RenderSky(void)
 0001:001EA580       zCSkyControler_Outdoor::RenderSkyPost(int)
 0001:001EA640       zCSkyControler_Outdoor::Archive(zCArchiver &)
 0001:001EA730       zCSkyControler_Outdoor::Unarchive(zCArchiver &)
 0001:001EA830       zCSkyControler_Outdoor::SetWeatherType(zTWeather)
 0001:001EA9A0       zCArray<zCSkyState *>::~zCArray<zCSkyState *>(void)
 0001:001EA9C0       zCArray<zCSkyState *>::InsertEnd(zCSkyState * const &)
 0001:001EAA90       zCArray<zCOutdoorRainFX::zSParticle *>::~zCArray<zCOutdoorRainFX::zSParticle *>(void)
 0001:001EAAB0       zCArray<zCSkyState *>::AllocDelta(int)
 0001:001EAB10       zCArray<zVEC3>::InsertEnd(zVEC3 const &)
 0001:001EAB60       zCArray<zCOutdoorRainFX::zSParticle *>::InsertEnd(zCOutdoorRainFX::zSParticle * const &)
 0001:001EAC30       zCArray<zCOutdoorRainFX::zSParticle *>::AllocDelta(int)
 0001:001EB060       zCSoundSystem::GetNumReverbPresets(void)
 0001:001EB070       zCSoundSystem::GetReverbPresetName(int)
 0001:001EB090       zCSoundFX::GetCacheConfig(ulong &,ulong &)
 0001:001EB3A0       zCSoundManager::zTScriptSoundData::~zTScriptSoundData(void)
 0001:001EB420       zCSoundManager::zTScriptSoundData::zTScriptSoundData(void)
 0001:001EB460       zCSoundManager::DebugMessage(zSTRING const &)
 0001:001EB500       zCSoundManager::zCTableEntry::zCTableEntry(void)
 0001:001EB6A0       zCSoundManager::SearchMediumTypeIDList(int,int)
 0001:001EB870       zCSoundManager::zCMediumType::~zCMediumType(void)
 0001:001EB8C0       zCSoundManager::GetMediumIndex(char)
 0001:001EB9A0       zCSoundManager::GetCollSndTableIndex(zSTRING const &)
 0001:001EBAE0       zCSoundManager::StartHitSound(zCVob *,zCSoundManager::zTSndManMedium,zCSoundManager::zTSndManMedium,int,int,zCCollisionReport const *)
 0001:001EC610       zCSoundManager::zCSoundEventData::zCSoundEventData(void)
 0001:001EC760       zCSoundManager::zCSoundEventData::GetData(zSTRING const &,zCSoundFX * &,zCParticleEmitter * &)
 0001:001EC840       zCSoundManager::zCSoundEventData::GetData(zCSoundFX * &,zCParticleEmitter * &)
 0001:001EC8A0       zCSoundManager::StartAttackSound(zCVob *,zCSoundManager::zTSndManMedium,zCSoundManager::zTSndManMedium,int,int)
 0001:001ECE60       zCSoundManager::StartSlideSound(zCVob *,int)
 0001:001ED0C0       zCSoundManager::StartDestructionSound(zCVob *,int)
 0001:001ED3F0       zCSoundManager::Init(void)
 0001:001EDA70       zCArraySort<zCSoundManager::zCSoundEventData>::Search(zCSoundManager::zCSoundEventData const &)
 0001:001EDAE0       zCSoundManager::zCMediumType::`vector deleting destructor'(uint)
 0001:001EDB40       zCArraySort<zCSoundManager::zCMediumType>::InsertEnd(zCSoundManager::zCMediumType const &)
 0001:001EDCC0       zCArraySort<zCSoundManager::zCSoundEventData>::InsertEnd(zCSoundManager::zCSoundEventData const &)
 0001:001EDE50       zCArraySort<zCSoundManager::zCMediumType>::AllocDelta(int)
 0001:001EE050       zCSoundManager::zCMediumType::zCMediumType(void)
 0001:001EE070       zCArraySort<zCSoundManager::zCSoundEventData>::AllocDelta(int)
 0001:001EE2B0       zCSparseArrayBase::zCSparseArrayBase(ulong)
 0001:001EE340       zCSparseArrayBase::SizeAll(void)
 0001:001EE360       zCSparseArrayBase::IndexPtr(ulong)
 0001:001EE380       zCSparseArrayBase::DataPtr(ulong)
 0001:001EE3A0       zCSparseArrayBase::ManDatPtr(ulong)
 0001:001EE3C0       zCSparseArrayBase::DestructIndex(void *)
 0001:001EE3D0       zCSparseArrayBase::ConstructData(void *)
 0001:001EE3E0       zCSparseArrayBase::DestructData(void *)
 0001:001EE3F0       zCSparseArrayBase::`scalar deleting destructor'(uint)
 0001:001EE420       zCSparseArrayBase::~zCSparseArrayBase(void)
 0001:001EE430       zCSparseArrayBase::Destroy(void)
 0001:001EE560       zCSparseArrayBase::Element(void const *)
 0001:001EE5B0       zCSparseArrayBase::Insert(void const *)
 0001:001EE820       zCSparseArrayBase::Delete(void const *)
 0001:001EE930       zCSparseArrayBase::Clear(void)
 0001:001EE970       zCSparseArrayBase::IndexIsEqual(void const *,void const *)
 0001:001EE990       zCSparseArrayBase::CopyIndex(void *,void const *)
 0001:001EE9C0       zCSparseArrayBase::Hash(void const *,ulong &,ulong &)
 0001:001EE9F0       zCSparseArrayBase::Find(void const *)
 0001:001EEB70       zCSparseArrayBase::Create(ulong)
 0001:001EEBE0       zCSparseArrayBase::Resize(ulong)
 0001:001EF070       zCSparseArrayBase::DataPtr(ulong,void *)
 0001:001EF0A0       zCSparseArrayBase::AddRef(zCSparseArrayManDat *)
 0001:001EF100       zCSparseArrayBase::Release(zCSparseArrayManDat *)
 0001:001EF150       zCSparseArrayBase::CheckResize(void)
 0001:001EF180       Hash(void const *,ulong,ulong &,ulong &,ulong)
 0001:001EF240       zCCacheBase::zCCacheBase(void)
 0001:001EF270       zCCacheBase::`scalar deleting destructor'(uint)
 0001:001EF2C0       zCCacheBase::~zCCacheBase(void)
 0001:001EF300       zCCacheBase::S_PurgeCaches(void)
 0001:001EF340       zCCacheBase::S_ClearCaches(void)
 0001:001EF770       zCTextureFileFormatTGA::_CreateNewInstance(void)
 0001:001EF880       zCTextureFileFormatTGA::operator delete(void *)
 0001:001EF8A0       zCTextureFileFormatTGA::_GetClassDef(void)
 0001:001EF8B0       zCTextureFileFormatTGA::SaveTexture(zSTRING const &,zCTextureExchange *)
 0001:001EF8C0       zCTextureFileFormatTGA::SaveTexture(zFILE &,zCTextureExchange *)
 0001:001EF8D0       zCTextureFileFormatTGA::CanSave(void)
 0001:001EF8E0       zCTextureFileFormatTGA::CanLoad(void)
 0001:001EFAE0       zCTextureFileFormatInternal::_CreateNewInstance(void)
 0001:001EFBF0       zCTextureFileFormatInternal::_GetClassDef(void)
 0001:001EFC00       zCTextureFileFormatInternal::CanSave(void)
 0001:001EFC10       zCTextureFileFormatInternal::CanLoad(void)
 0001:001EFC20       zCTextureFileFormatTGA::zCTextureFileFormatTGA(void)
 0001:001EFD20       zCTextureFileFormatTGA::`scalar deleting destructor'(uint)
 0001:001EFD50       zCTextureFileFormatTGA::~zCTextureFileFormatTGA(void)
 0001:001EFD70       zCTextureFileFormat::_GetClassDef(void)
 0001:001EFD80       zCTextureFileFormat::`scalar deleting destructor'(uint)
 0001:001EFDB0       zCTextureFileFormat::~zCTextureFileFormat(void)
 0001:001EFDC0       zCTextureFileFormatTGA::GetFileExtension(void)
 0001:001EFE10       zCTextureFileFormatTGA::ReadTGAHeader(zFILE *)
 0001:001F04F0       zCTextureFileFormatTGA::ReadTGAColorMap(zFILE *)
 0001:001F0A70       zCTextureFileFormatTGA::ReadTGARLEPixel(zFILE *,uchar *,int)
 0001:001F0CE0       zCTextureFileFormatTGA::ReadTGASpan(zFILE *,uchar *,int,int)
 0001:001F0DF0       zCTextureFileFormatTGA::ReadTGAData(zFILE *)
 0001:001F1050       zCTextureFileFormatTGA::LoadTexture(zFILE &,zCTextureExchange *)
 0001:001F11C0       zCTextureFileFormatTGA::LoadTexture(zSTRING const &,zCTextureExchange *)
 0001:001F13C0       zCTextureFileFormatInternal::zCTextureFileFormatInternal(void)
 0001:001F14D0       zCTextureFileFormatInternal::`vector deleting destructor'(uint)
 0001:001F1500       zCTextureFileFormatInternal::~zCTextureFileFormatInternal(void)
 0001:001F1510       zCTextureFileFormatInternal::GetFileExtension(void)
 0001:001F1560       zCTextureFileFormatInternal::ReadHeader(zFILE &)
 0001:001F15C0       zCTextureFileFormatInternal::ReadData(zFILE &,zCTextureExchange *,int)
 0001:001F1840       zCTextureFileFormatInternal::LoadTexture(zFILE &,zCTextureExchange *)
 0001:001F18C0       zCTextureFileFormatInternal::LoadTexture(zSTRING const &,zCTextureExchange *)
 0001:001F19F0       zCTextureFileFormatInternal::WriteHeader(zFILE &,zCTextureExchange *)
 0001:001F1A60       zCTextureFileFormatInternal::WriteData(zFILE &,zCTextureExchange *)
 0001:001F1BC0       zCTextureFileFormatInternal::SaveTexture(zFILE &,zCTextureExchange *)
 0001:001F1C80       zCTextureFileFormatInternal::SaveTexture(zSTRING const &,zCTextureExchange *)
 0001:001F2390       zCTexture::zCTexture(void)
 0001:001F23E0       zCTextureExchange::`scalar deleting destructor'(uint)
 0001:001F2400       zCTexture::_GetClassDef(void)
 0001:001F2410       zCTexture::HasAlpha(void)
 0001:001F2420       zCTexture::GetChromaKeyingEnabled(void)
 0001:001F2430       zCTexture::SetChromaKeyingEnabled(int)
 0001:001F2440       zCTexture::`scalar deleting destructor'(uint)
 0001:001F2470       zCTexture::InitValues(void)
 0001:001F24A0       zCTexture::~zCTexture(void)
 0001:001F2540       zCTextureExchange::~zCTextureExchange(void)
 0001:001F2550       zCTexture::SearchName(zSTRING &)
 0001:001F2570       zCTexture::IsLightmap(void)
 0001:001F25C0       zCTexture::GetAniTexture(void)
 0001:001F2620       zCTexture::AddAniTex(int,zCTexture *)
 0001:001F2660       zCTexture::PrecacheTexAniFrames(float)
 0001:001F26A0       zCTexture::Load(zSTRING &,int)
 0001:001F3360       zCTexture::LoadSingle(zSTRING &,int)
 0001:001F3510       zCTexture::Exists(zSTRING &)
 0001:001F36E0       zCTexture::AutoDetectRendererTexScale(void)
 0001:001F3EA0       zCTexture::RefreshTexMaxSize(int)
 0001:001F3F30       zCTextureConvert::LoadFromFileFormat(zSTRING const &)
 0001:001F4010       zCTextureConvert::SaveToFileFormat(zSTRING const &)
 0001:001F40F0       zCTextureConvert::LoadFromFileFormat(zFILE &,zCTextureFileFormat *)
 0001:001F4120       zCTextureConvert::SaveToFileFormat(zFILE &,zCTextureFileFormat *)
 0001:001F4150       zCTextureConvert::SaveInternal(zFILE &)
 0001:001F41E0       zCTextureConvert::LoadInternal(zFILE &)
 0001:001F4270       zCTextureConvert::ConvertToNewFormat(zTRnd_TextureFormat const &)
 0001:001F42A0       zCTextureConvert::ConvertToNewSize(int,int)
 0001:001F4390       zCTextureConvert::GenerateMipMaps(void)
 0001:001F43E0       zCTextureConvert::CalcNumMipMaps(ulong,ulong)
 0001:001F4410       zCTextureConvert::CorrectAspectRatio(int &,int &)
 0001:001F4490       zCTextureConvert::CorrectPow2(int &,int &)
 0001:001F44D0       zCTexture::LoadResourceData(void)
 0001:001F4530       zCTexture::ReleaseResourceData(void)
 0001:001F4590       zCTexture::GetResSizeBytes(void)
 0001:001F4720       zCTexture::GetCacheConfig(ulong &,ulong &)
 0001:001F49F0       zCTexture::ConvertTexture(zSTRING const &)
 0001:001F5170       zCTexture::ForceConvertAndReloadTexture(void)
 0001:001F5240       zCTexture::CalcNextBestTexFormat(zTRnd_TextureFormat)
 0001:001F5340       zCTexture::CalcDesiredBPP(zSTRING const *,zCTexture::zTTexFileDesiredBPP &,zTRnd_TextureFormat &,int &)
 0001:001F54C0       zCTexture::LoadAndConvertInternal(zFILE &)
 0001:001F5840       zCTexture::SaveAndConvertInternal(zFILE &)
 0001:001F59E0       zCTexture::CacheInNamed(zSTRING const *)
 0001:001F63F0       zCTexture::IsTextureTileBaseSlice(void)
 0001:001F6420       zCTexture::CreateTextureTile(zCTextureExchange *)
 0001:001F6C10       zCTexture::GetPixelSize(int &,int &)
 0001:001F6C40       zCTextureFileHandler::HandleFile(zSTRING const &,char const *,_finddata_t)
 0001:001F6F40       zCTexture::ScanConvertTextures(zSTRING)
 0001:001F7180       zCTextureExchange::CopyContents(zCTextureExchange *,zCTextureExchange *)
 0001:001F7290       zCTextureExchange::GetMemSizeBytes(void)
 0001:001F7340       zCTextureExchange::GetRGBAAtTexel(float,float)
 0001:001F78A0       zCTextureExchange::GetRGBAAtPtr(uchar *,zTTexPalette *,zTRnd_TextureFormat)
 0001:001F7DD0       zCLightMap::_CreateNewInstance(void)
 0001:001F7E90       zCLightMap::_GetClassDef(void)
 0001:001F7EA0       zCLightMap::zCLightMap(void)
 0001:001F7F30       zCLightMap::`scalar deleting destructor'(uint)
 0001:001F7F60       zCLightMap::~zCLightMap(void)
 0001:001F7FD0       zCLightMap::SetTexture(zCTexture *)
 0001:001F8010       zCLightMap::CalcLightmapOriginUpRight(zVEC3 const &,zVEC3 const &,zVEC3 const &)
 0001:001F80F0       zClamp(ulong &,ulong,ulong)
 0001:001F8150       zThreadProc(zCThread *)
 0001:001F8160       zCThread::zCThread(void)
 0001:001F8180       zCThread::`scalar deleting destructor'(uint)
 0001:001F81E0       zCThread::~zCThread(void)
 0001:001F8230       zCThread::BeginThread(void)
 0001:001F8320       zCThread::ThreadProc(void)
 0001:001F8330       zCThread::EndThread(void)
 0001:001F8370       zCThread::SuspendThread(void)
 0001:001F83A0       zCThread::ResumeThread(void)
 0001:001F83D0       zCThread::SleepThread(ulong)
 0001:001F83E0       zCCriticalSection::zCCriticalSection(void)
 0001:001F8400       zCCriticalSection::`scalar deleting destructor'(uint)
 0001:001F8420       zCCriticalSection::~zCCriticalSection(void)
 0001:001F8440       zCSyncObject::`scalar deleting destructor'(uint)
 0001:001F8460       zCCriticalSection::Lock(ulong)
 0001:001F8480       zCCriticalSection::Unlock(void)
 0001:001F8490       zCMutex::zCMutex(void)
 0001:001F8580       zCSyncObject::~zCSyncObject(void)
 0001:001F8590       zCMutex::`scalar deleting destructor'(uint)
 0001:001F85B0       zCMutex::~zCMutex(void)
 0001:001F85E0       zCMutex::Lock(ulong)
 0001:001F8600       zCMutex::Unlock(void)
 0001:001F8680       zCTimer::zCTimer(void)
 0001:001F86B0       zCTimer::ResetTimer(void)
 0001:001F8800       zCTimer::SetFrameTime(float)
 0001:001F8870       zCTimer::S_SetMaxFPS(ulong)
 0001:001F8880       zCTimer::S_GetMaxFPS(void)
 0001:001F8890       zCTimer::SetMaxFPS(ulong)
 0001:001F88A0       zCTimer::FrameUpdate(void)
 0001:001F8920       zCTimer::LimitFPS(int)
 0001:001F8A10       zCChecksum::GetBufferCRC32(uchar *,ulong,ulong)
 0001:001F8B50       zCChecksum::BeginChecksum(void)
 0001:001F8B60       zCChecksum::EndChecksum(void)
 0001:001F8B70       zCChecksum::CalcBufferChecksum(uchar *,ulong)
 0001:001F8B90       zCChecksum::CalcFileChecksum(zFILE *)
 0001:001F8BF0       zCChecksum::CalcFileChecksum(zSTRING const &)
 0001:001F8C80       zCChecksum16::GetBufferCRC16(uchar *,ulong,ushort)
 0001:001F8DD0       zCChecksum16::BeginChecksum(void)
 0001:001F8DE0       zCChecksum16::EndChecksum(void)
 0001:001F8DF0       zCChecksum16::CalcBufferChecksum(uchar *,ulong)
 0001:001F8E70       zCFPUControler::zCFPUControler(void)
 0001:001F8EB0       zCFPUControler::SaveCurrentControlWord(void)
 0001:001F8ED0       zCFPUControler::RestoreSavedControlWord(void)
 0001:001F8EE0       zCFPUControler::GetCurrentControlWord(void)
 0001:001F8EF0       zCFPUControler::RestoreDefaultControlWord(void)
 0001:001F8F00       zCFPUControler::ComputeDefaultControlWord(void)
 0001:001F8F40       zCFPUControler::SetControlWord(ulong)
 0001:001F8F60       zCFPUControler::SetPrecision_24(void)
 0001:001F8F80       zCFPUControler::SetPrecision_53(void)
 0001:001F8FA0       zCFPUControler::SetPrecision_64(void)
 0001:001F8FC0       zCFPUControler::PrintStatus(void)
 0001:001F9A40       zSinApprox(float)
 0001:001F9A80       zCosApprox(float)
 0001:001F9AC0       zSinCosApprox(float,float &,float &)
 0001:001F9B80       Trg_Init(void)
 0001:001F9BA0       zCOLOR::GetDescription(void)
 0001:001F9F10       zCOLOR::SetByDescription(zSTRING const &)
 0001:001FA190       zCOLOR::GetDescriptionRGB(void)
 0001:001FA440       zTPlane::ClassifyPointBSPBuild(zVEC3 const &)
 0001:001FA490       zTPlane::Print(void)
 0001:001FA870       zTPlane::Calc(zVEC3 const &,zVEC3 const &,zVEC3 const &)
 0001:001FA950       zTPlane::GetOriginUpRight(zVEC3 &,zVEC3 &,zVEC3 &)
 0001:001FAD40       zCVertexBuffer::zCVertexBuffer(void)
 0001:001FAE60       zCVertexBuffer::_GetClassDef(void)
 0001:001FAE70       zCVertexBuffer::Create(ulong,ulong,ulong)
 0001:001FAE80       zCVertexBuffer::Destroy(void)
 0001:001FAE90       zCVertexBuffer::Lock(ulong)
 0001:001FAEA0       zCVertexBuffer::Unlock(void)
 0001:001FAEB0       zCVertexBuffer::IsLocked(void)
 0001:001FAEC0       zCVertexBuffer::Optimize(void)
 0001:001FAED0       zCVertexBuffer::SetPrimitiveType(zTVBufferPrimitiveType)
 0001:001FAEE0       zCVertexBuffer::GetPrimitiveType(void)
 0001:001FAEF0       zCVertexBuffer::GetVertexFormat(void)
 0001:001FAF00       zCVertexBuffer::GetVertexType(void)
 0001:001FAF10       zCVertexBuffer::SetIndexList(zCArray<ushort> const &)
 0001:001FAF20       zCVertexBuffer::SetIndexListSize(ulong)
 0001:001FAF30       zCVertexBuffer::GetIndexListSize(void)
 0001:001FAF40       zCVertexBuffer::GetIndexListPtr(void)
 0001:001FAF50       zCVertexBuffer::`scalar deleting destructor'(uint)
 0001:001FAF80       zCVertexBuffer::~zCVertexBuffer(void)
 0001:001FAFF0       zCVertexBuffer::AddRecreateLostVBCallback(int (*)(zCVertexBuffer *,void *),void *)
 0001:001FB100       zCVertexBuffer::RemoveRecreateLostVBCallback(int (*)(zCVertexBuffer *,void *),void *)
 0001:001FB160       zCVertexBuffer::CallRecreateLostVBCallbacks(void)
 0001:001FB2C0       zCVertexBufferDyn::zCVertexBufferDyn(ulong,ulong)
 0001:001FB310       zCVertexBufferDyn::~zCVertexBufferDyn(void)
 0001:001FB350       zCVertexBufferDyn::Lock(ulong,ulong &)
 0001:001FB3D0       zCVertexBufferDyn::Unlock(void)
 0001:001FB3F0       zCVertexBufferDyn2::zCVertexBufferDyn2(ulong,ulong)
 0001:001FB440       zCVertexBufferDyn2::~zCVertexBufferDyn2(void)
 0001:001FB490       zCVertexBufferDyn2::ReserveVerts(ulong)
 0001:001FB4B0       zCVertexBufferDyn2::Lock(ulong &)
 0001:001FB510       zCVertexBufferDyn2::Unlock(ulong)
 0001:001FB570       zCVertexBufferManager::zCVertexBufferManager(void)
 0001:001FB5A0       zCVertexBufferManager::~zCVertexBufferManager(void)
 0001:001FB600       zCVertexBufferManager::AcquireVertexBuffer(ulong,ulong,ulong,ulong,int &)
 0001:001FB970       zCVertexBufferManager::ReleaseVertexBuffer(zCVertexBuffer *)
 0001:001FBA30       zCVertexBufferManager::UnlockOpenVertexBuffers(void)
 0001:001FBC30       zCVertexBufferManager::StartChangeWorld(void)
 0001:001FBC40       zCVertexBufferManager::EndChangeWorld(void)
 0001:001FBC50       zCArray<zCVertexBuffer *>::~zCArray<zCVertexBuffer *>(void)
 0001:001FBC70       zCArray<zCVertexBuffer *>::AllocDelta(int)
 0001:001FBEF0       zCEventMessage::_CreateNewInstance(void)
 0001:001FC050       zCEventMessage::operator delete(void *)
 0001:001FC250       zCEventCore::_CreateNewInstance(void)
 0001:001FC520       zCVobLightPreset::_CreateNewInstance(void)
 0001:001FC670       zCVobLightPreset::operator delete(void *)
 0001:001FC690       zCVobLightPreset::_GetClassDef(void)
 0001:001FC6A0       zCVobLightPreset::`scalar deleting destructor'(uint)
 0001:001FC6D0       zCVobLightPreset::~zCVobLightPreset(void)
 0001:001FC940       zCVob::_CreateNewInstance(void)
 0001:001FCB90       zCVobLevelCompo::_CreateNewInstance(void)
 0001:001FCC10       zCVobLevelCompo::operator delete(void *)
 0001:001FCC30       zCVobLevelCompo::_GetClassDef(void)
 0001:001FCC40       zCVobLevelCompo::`scalar deleting destructor'(uint)
 0001:001FCC70       zCVobLevelCompo::~zCVobLevelCompo(void)
 0001:001FD080       std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::~map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>(void)
 0001:001FD170       zCVob::OnTrigger(zCVob *,zCVob *)
 0001:001FD180       zCVob::OnUntrigger(zCVob *,zCVob *)
 0001:001FD190       zCVob::OnTouch(zCVob *)
 0001:001FD1A0       zCVob::OnUntouch(zCVob *)
 0001:001FD1B0       zCVob::OnTouchLevel(void)
 0001:001FD1C0       zCVob::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:001FD1D0       zCVob::OnMessage(zCEventMessage *,zCVob *)
 0001:001FD1E0       zCVob::zCVob(void)
 0001:001FD440       zCVob::`scalar deleting destructor'(uint)
 0001:001FD470       zCVob::~zCVob(void)
 0001:001FD6E0       zCVob::InitVobSystem(void)
 0001:001FD800       zCVob::CleanupVobSystem(void)
 0001:001FD8C0       zCVob::ResetIDCtr(void)
 0001:001FD8D0       zCVob::GetNextFreeVobID(void)
 0001:001FD8E0       zCVob::SetVobID(ulong const &)
 0001:001FD8F0       zCVob::SetAI(zCAIBase *)
 0001:001FD940       zCVob::SetVobPresetName(zSTRING const &)
 0001:001FD950       zCVob::GetVobPresetName(void)
 0001:001FD960       zCVob::GetRigidBody(void)
 0001:001FD9D0       zCVob::ArchivePacked(zCArchiver &)
 0001:001FDDB0       zCVob::ArchiveVerbose(zCArchiver &)
 0001:001FE140       zCVob::Archive(zCArchiver &)
 0001:001FE200       zCVob::UnarchivePacked(zCArchiver &,int)
 0001:001FE720       zCVob::UnarchiveVerbose(zCArchiver &)
 0001:001FEC70       zCVob::Unarchive(zCArchiver &)
 0001:001FEDD0       zCVob::SetVobName(zSTRING const &)
 0001:001FEE10       zCVob::GetEM(int)
 0001:001FEE40       zCVob::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:001FF130       zCVob::CalcLightSampleAtOrigin(void)
 0001:001FF1B0       zCVob::GetLightColorStat(void)
 0001:001FF440       zCVob::GetLightColorStatGroundPoly(void)
 0001:001FF470       zCVob::GetLightColorDyn(void)
 0001:001FF650       zCVob::CalcStaticLight(zVEC3 &)
 0001:001FFAE0       zCVob::GetSectorNameVobIsIn(void)
 0001:001FFB00       zCVob::LoadGroundShadowMesh(void)
 0001:001FFC00       zCVob::DeleteGroundShadowMesh(void)
 0001:001FFC30       zCVob::SetGroundShadowSize(zVEC2 const &)
 0001:001FFC80       zCVob::GetGroundShadowSize(void)
 0001:001FFCD0       zCVob::RenderGroundShadow(zTRenderContext &)
 0001:002001C0       operator-(zVEC2 const &,zVEC2 const &)
 0001:002001E0       zCVob::GetClassHelperVisual(void)
 0001:002003E0       zCVob::CalcRenderAlpha(float,zCVisual * &,float &)
 0001:002005D0       zCVob::Render(zTRenderContext &)
 0001:00200AC0       zCVob::GetLightColorAtCenter(void)
 0001:00200C40       zCVob::RemoveVobFromWorld(void)
 0001:00200C60       zCVob::RemoveVobSubtreeFromWorld(void)
 0001:00200C80       zCVob::ThisVobAddedToWorld(zCWorld *)
 0001:00200CA0       zCVob::ThisVobRemovedFromWorld(zCWorld *)
 0001:00200CC0       zCVob::AddRefVobSubtree(zCTree<zCVob> *,int)
 0001:00200D40       zCVob::ReleaseVobSubtree(zCTree<zCVob> *)
 0001:00200DA0       zCVob::RemoveWorldDependencies(int)
 0001:00200F80       zCTree<zCVob>::`scalar deleting destructor'(uint)
 0001:00200FF0       zCVob::RemoveVobFromGlobalVobTree(void)
 0001:002010E0       zCVob::RemoveVobFromBspTree(void)
 0001:00201100       zCVob::GetVobInfo(void)
 0001:002014F0       zCVob::SetVisual(zCVisual *)
 0001:00201680       zCVob::SetVisual(zSTRING const &)
 0001:00201930       zCVob::SetSleeping(int)
 0001:00201960       zCVob::SetSleepingMode(zTVobSleepingMode)
 0001:00201B20       zCVob::UpdateVisualDependencies(int)
 0001:00201BB0       zCVob::AddVobToWorld_CorrectParentDependencies(void)
 0001:00201BD0       zCVob::ResetOnTimer(void)
 0001:00201BE0       zCVob::SetOnTimer(float)
 0001:00201C10       zCVob::IsOnTimer(void)
 0001:00201C30       zCVob::ProcessOnTimer(void)
 0001:00201C60       zCVob::DoFrameActivity(void)
 0001:00201ED0       zCVob::CheckModelLimbCollision(zCModelNodeInst *,int,zCList<zCVob::zTModelLimbColl> &)
 0001:002029C0       zTBBox3D::IsIntersecting(zTBBox3D const &)
 0001:00202A20       zCVob::zTModelLimbColl::zTModelLimbColl(void)
 0001:00202A30       zCVob::zTModelLimbColl::`scalar deleting destructor'(uint)
 0001:00202A50       zCVob::zTModelLimbColl::~zTModelLimbColl(void)
 0001:00202A80       zCVob::CheckModelLimbCollisionLevel(zCModelNodeInst *,int,zCList<zCVob::zTModelLimbColl> &)
 0001:00203710       zCVob::CheckModelLimbCollisionPolys(zCModelNodeInst *,int,zCPolygon * *,int const &,zCList<zCVob::zTModelLimbColl> &)
 0001:00203960       zCVob::GetTrafoModelNodeToWorld(zSTRING const &)
 0001:00203A50       zCVob::GetTrafoModelNodeToWorld(zCModelNodeInst *)
 0001:00203AE0       zCVob::GetScreenBBox2D(void)
 0001:00203ED0       zCCamera::Project(zVEC3 const * const,float,float &,float &)
 0001:00203F10       zCVob::RepairIllegalFloats(zMAT4 &)
 0001:00204110       zCVob::PackStateBinary(zCBuffer &)
 0001:002041C0       zCVob::UnpackStateBinary(zCBuffer &)
 0001:00204280       zCVobLevelCompo::zCVobLevelCompo(void)
 0001:002042E0       zCVobLevelCompo::HasIdentityTrafo(void)
 0001:00204360       zCVobLevelCompo::Archive(zCArchiver &)
 0001:00204410       zCVobLevelCompo::Unarchive(zCArchiver &)
 0001:002044E0       zCVobLevelCompo::SetVisual(zCVisual *)
 0001:00204520       zCVobLevelCompo::SetVisual(zSTRING const &)
 0001:00204560       zCEventMessage::zCEventMessage(ushort)
 0001:002046D0       zCEventMessage::GetMessageID(void)
 0001:002046F0       zCEventMessage::AnalyzeMessageID(ulong,ushort &,ushort &)
 0001:00204710       zCEventMessage::CreateFromID(ulong)
 0001:00204730       zCEventMessage::PackToBuffer(zCBuffer &,zCEventManager *)
 0001:00204780       zCEventMessage::CreateFromBuffer(zCBuffer &,zCEventManager *)
 0001:002047C0       zCEventMessage::Archive(zCArchiver &)
 0001:002049C0       zCEventMessage::Unarchive(zCArchiver &)
 0001:002049E0       zCEventMessage::TestClassIntegrity(void)
 0001:002050C0       zCEventCore::Clear(void)
 0001:00205100       zCEventCore::~zCEventCore(void)
 0001:00205120       zCEventCore::Pack(zCBuffer &,zCEventManager *)
 0001:002051D0       zCEventCore::Unpack(zCBuffer &,zCEventManager *)
 0001:002052F0       zCEventCore::MD_GetSubTypeString(int)
 0001:002054F0       zCEventCore::Archive(zCArchiver &)
 0001:00205560       zCEventCore::Unarchive(zCArchiver &)
 0001:00205660       zCVisual::zCVisual(void)
 0001:002057D0       zCVisual::`scalar deleting destructor'(uint)
 0001:00205800       zCVisual::~zCVisual(void)
 0001:00205820       zCVisual::AddNextLODVisual(zCVisual *)
 0001:00205850       zCVisual::AddEndLODVisual(zCVisual *)
 0001:00205880       zCVisual::GetLODVisualAndAlpha(float,zCVisual * &,float &)
 0001:002058E0       zCVisual::TraceRay(zVEC3 const &,zVEC3 const &,int,zTTraceRayReport &)
 0001:002058F0       zCVisual::InitVisualSystem(void)
 0001:00205A80       zCVisual::CleanupVisualSystem(void)
 0001:00205AD0       zCVisual::LoadVisual(zSTRING const &)
 0001:00205C00       zCVob::GetIsProjectile(void)
 0001:00205C20       zCArray<zCBspLeaf *>::~zCArray<zCBspLeaf *>(void)
 0001:00205C40       zCList<zCModelNodeInst>::~zCList<zCModelNodeInst>(void)
 0001:00205C70       zCTree<zCVob>::~zCTree<zCVob>(void)
 0001:00205CD0       zCTree<zCVob>::RemoveSubtree(void)
 0001:00205D10       std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>(std::less<zCClassDef *> const &,std::allocator<zCVisual *> const &)
 0001:00205E90       zCList<zCVob::zTModelLimbColl>::Insert(zCVob::zTModelLimbColl *)
 0001:00205EE0       zCTree<zCVob>::AddChild(zCTree<zCVob> *)
 0001:00205F10       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::begin(void)
 0001:002061B0       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::const_iterator::_Inc(void)
 0001:00206200       zCList<zCVob::zTModelLimbColl>::GetNumInList(void)
 0001:00206630       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Erase(std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Node *)
 0001:002068E0       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Lrotate(std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Node *)
 0001:00206940       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Rrotate(std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Node *)
 0001:002069C0       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::const_iterator::_Dec(void)
 0001:00206A20       std::_Construct(std::pair<zCClassDef * const,zCVisual *> *,std::pair<zCClassDef * const,zCVisual *> const &)
 0001:00206C60       zCVobLight::_CreateNewInstance(void)
 0001:00206D10       zCVobLight::zCVobLight(void)
 0001:00206E00       zCVobLight::_GetClassDef(void)
 0001:00206E10       zCVobLight::`scalar deleting destructor'(uint)
 0001:00206E40       zCVobLight::~zCVobLight(void)
 0001:00206FE0       zCVobLight::CleanupVobLight(void)
 0001:00207050       zCVobLight::OnTrigger(zCVob *,zCVob *)
 0001:00207120       zCVobLight::OnUntrigger(zCVob *,zCVob *)
 0001:002071C0       zCVobLight::DoAnimation(void)
 0001:00207320       zCVobLight::SetRange(float,int)
 0001:00207410       zCVobLight::SumLightsAtPositionWS(zCArray<zCVobLight *> const &,zVEC3 const &,int)
 0001:00207690       zCVobLight::LoadLightPresets(void)
 0001:002077E0       zCVobLight::SaveLightPresets(void)
 0001:00207910       zCVobLight::AddThisToPresetList(zSTRING const &)
 0001:00207BE0       zCVobLight::SetByPreset(zSTRING const &)
 0001:00207E60       zCVobLight::SetByPresetInUse(void)
 0001:002080B0       zCVobLight::Archive(zCArchiver &)
 0001:00208100       zCVobLight::Unarchive(zCArchiver &)
 0001:002082B0       zCVobLight::EndMovement(int)
 0001:00208530       zCVobLight::ThisVobAddedToWorld(zCWorld *)
 0001:00208790       zCVobLightPreset::Archive(zCArchiver &)
 0001:002087C0       zCVobLightPreset::Unarchive(zCArchiver &)
 0001:00208970       zCVobLightData::SetLensFlareFXByName(zSTRING const &)
 0001:00208A70       zCVobLightData::GetLensFlareFXName(void)
 0001:00208A90       zCVobLightData::Archive(zCArchiver &)
 0001:00208FA0       zCVobLightData::Unarchive(zCArchiver &)
 0001:00209970       zCVobLightData::zCVobLightData(void)
 0001:002099F0       zCVobLightData::~zCVobLightData(void)
 0001:00209A60       zCVobLightData::SetRange(float,int)
 0001:00209AC0       zCArray<zCObject *>::Search(zCObject * const &)
 0001:00209AF0       zCArray<float>::AllocAbs(int)
 0001:00209B50       zCArray<float>::operator=(zCArray<float> const &)
 0001:00209BE0       zCArray<zCOLOR>::operator=(zCArray<zCOLOR> const &)
 0001:00209C30       zTRayTurboValMap<zCPolygon *,int>::~zTRayTurboValMap<zCPolygon *,int>(void)
 0001:00209D10       zCArray<zCOLOR>::InsertEnd(zCOLOR const &)
 0001:00209D50       zCArray<zCVobLightPreset *>::AllocDelta(int)
 0001:00209DB0       zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>::~zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>(void)
 0001:00209DD0       zCArray<zCOLOR>::AllocDelta(int)
 0001:00209E30       zTRayTurboValMap<zCPolygon *,int>::InitHashTable(ulong)
 0001:00209F80       zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>::AllocAbs(int)
 0001:00209FE0       zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>::DeleteList(void)
 0001:0020A000       zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>::AllocDelta(int)
 0001:0020A060       zCArray<zTRayTurboValMap<zCPolygon *,int>::zSNode *>::InsertEnd(zTRayTurboValMap<zCPolygon *,int>::zSNode * const &)
 0001:0020A350       zCVobStair::_CreateNewInstance(void)
 0001:0020A3B0       zCVobStair::operator delete(void *)
 0001:0020A3D0       zCVobStair::_GetClassDef(void)
 0001:0020A3E0       zCVobStair::`scalar deleting destructor'(uint)
 0001:0020A410       zCVobStair::~zCVobStair(void)
 0001:0020A7F0       zCTriggerUntouch::_CreateNewInstance(void)
 0001:0020A8D0       zCTriggerBase::_GetClassDef(void)
 0001:0020A8E0       zCTriggerUntouch::operator delete(void *)
 0001:0020A900       zCTriggerUntouch::_GetClassDef(void)
 0001:0020A910       zCTriggerUntouch::OnTouch(zCVob *)
 0001:0020A920       zCTriggerUntouch::OnTrigger(zCVob *,zCVob *)
 0001:0020A930       zCTriggerUntouch::OnUntrigger(zCVob *,zCVob *)
 0001:0020A940       zCTriggerUntouch::`scalar deleting destructor'(uint)
 0001:0020A970       zCTriggerUntouch::~zCTriggerUntouch(void)
 0001:0020ABC0       zCMessageFilter::_CreateNewInstance(void)
 0001:0020ACA0       zCMessageFilter::operator delete(void *)
 0001:0020ACC0       zCMessageFilter::_GetClassDef(void)
 0001:0020ACD0       zCMessageFilter::OnTouch(zCVob *)
 0001:0020ACE0       zCMessageFilter::OnUntouch(zCVob *)
 0001:0020AEE0       zCCodeMaster::_CreateNewInstance(void)
 0001:0020B0C0       zCCodeMaster::operator delete(void *)
 0001:0020B0E0       zCCodeMaster::_GetClassDef(void)
 0001:0020B0F0       zCCodeMaster::OnUntouch(zCVob *)
 0001:0020B100       zCCodeMaster::OnTouch(zCVob *)
 0001:0020B110       zCTriggerBase::~zCTriggerBase(void)
 0001:0020B360       zCMoverControler::_CreateNewInstance(void)
 0001:0020B450       zCMoverControler::operator delete(void *)
 0001:0020B470       zCMoverControler::_GetClassDef(void)
 0001:0020B480       zCMoverControler::OnUntrigger(zCVob *,zCVob *)
 0001:0020B490       zCMoverControler::OnUntouch(zCVob *)
 0001:0020B4A0       zCMoverControler::OnTouch(zCVob *)
 0001:0020B6A0       zCTriggerWorldStart::_CreateNewInstance(void)
 0001:0020B790       zCTriggerWorldStart::operator delete(void *)
 0001:0020B7B0       zCTriggerWorldStart::_GetClassDef(void)
 0001:0020B7C0       zCTriggerWorldStart::OnTouch(zCVob *)
 0001:0020B7D0       zCTriggerWorldStart::OnUntouch(zCVob *)
 0001:0020B7E0       zCTriggerWorldStart::OnUntrigger(zCVob *,zCVob *)
 0001:0020B9E0       zCTrigger::_CreateNewInstance(void)
 0001:0020BA40       zCTrigger::operator delete(void *)
 0001:0020BC50       zCTriggerList::_CreateNewInstance(void)
 0001:0020BE50       std::char_traits<char>::assign(char &,char const &)
 0001:0020BE60       zCTriggerList::operator delete(void *)
 0001:0020BE80       zCTriggerList::_GetClassDef(void)
 0001:0020C080       zCMover::_CreateNewInstance(void)
 0001:0020C0E0       zCMover::operator delete(void *)
 0001:0020C2F0       zCTriggerTeleport::_CreateNewInstance(void)
 0001:0020C450       zCTriggerTeleport::operator delete(void *)
 0001:0020C470       zCTriggerTeleport::_GetClassDef(void)
 0001:0020C850       zCEarthquake::_CreateNewInstance(void)
 0001:0020C920       zCEarthquake::_GetClassDef(void)
 0001:0020CB20       zCPFXControler::_CreateNewInstance(void)
 0001:0020CBD0       zCPFXControler::operator delete(void *)
 0001:0020CBF0       zCPFXControler::_GetClassDef(void)
 0001:0020CDF0       zCTouchDamage::_CreateNewInstance(void)
 0001:0020CED0       zCTouchDamage::operator delete(void *)
 0001:0020CEF0       zCTouchDamage::_GetClassDef(void)
 0001:0020D0F0       zCTouchAnimate::_CreateNewInstance(void)
 0001:0020D1D0       zCTouchAnimate::operator delete(void *)
 0001:0020D1F0       zCTouchAnimate::_GetClassDef(void)
 0001:0020D3F0       zCTouchAnimateSound::_CreateNewInstance(void)
 0001:0020D580       zCTouchAnimateSound::operator delete(void *)
 0001:0020D5A0       zCTouchAnimateSound::_GetClassDef(void)
 0001:0020D7A0       zCVobAnimate::_CreateNewInstance(void)
 0001:0020D840       zCVobAnimate::operator delete(void *)
 0001:0020D860       zCVobAnimate::_GetClassDef(void)
 0001:0020DA60       zCVobLensFlare::_CreateNewInstance(void)
 0001:0020DB10       zCVobLensFlare::operator delete(void *)
 0001:0020DB30       zCVobLensFlare::_GetClassDef(void)
 0001:0020DD30       zCVobScreenFX::_CreateNewInstance(void)
 0001:0020DF70       zCEventCommon::_CreateNewInstance(void)
 0001:0020E0A0       zCEventCommon::operator delete(void *)
 0001:0020E0C0       zCEventCommon::_GetClassDef(void)
 0001:0020E0D0       zCEventCommon::MD_GetNumOfSubTypes(void)
 0001:0020E0E0       zCEventCommon::IsNetRelevant(void)
 0001:0020E0F0       zCEventCommon::`scalar deleting destructor'(uint)
 0001:0020E120       zCEventCommon::~zCEventCommon(void)
 0001:0020E310       zCEventMover::_CreateNewInstance(void)
 0001:0020E440       zCEventMover::operator delete(void *)
 0001:0020E460       zCEventMover::_GetClassDef(void)
 0001:0020E470       zCEventMover::MD_GetNumOfSubTypes(void)
 0001:0020E480       zCEventMover::IsNetRelevant(void)
 0001:0020E490       zCEventMover::`scalar deleting destructor'(uint)
 0001:0020E4C0       zCEventMover::~zCEventMover(void)
 0001:0020E6B0       zCEventScreenFX::_CreateNewInstance(void)
 0001:0020E780       zCEventScreenFX::_GetClassDef(void)
 0001:0020E790       zCEventScreenFX::MD_GetNumOfSubTypes(void)
 0001:0020E7A0       zCEventScreenFX::`scalar deleting destructor'(uint)
 0001:0020E7D0       zCEventScreenFX::~zCEventScreenFX(void)
 0001:0020E7E0       zCEventCommon::MD_GetSubTypeString(int)
 0001:0020E940       zCEventMover::MD_GetSubTypeString(int)
 0001:0020EAF0       zCTriggerBase::zCTriggerBase(void)
 0001:0020EB90       zCTriggerBase::`scalar deleting destructor'(uint)
 0001:0020EBC0       zCTriggerBase::OnTouch(zCVob *)
 0001:0020EC60       zCTriggerBase::OnUntouch(zCVob *)
 0001:0020ED00       zCTriggerBase::OnTrigger(zCVob *,zCVob *)
 0001:0020EDA0       zCTriggerBase::OnUntrigger(zCVob *,zCVob *)
 0001:0020EE40       zCTriggerBase::Archive(zCArchiver &)
 0001:0020EE70       zCTriggerBase::Unarchive(zCArchiver &)
 0001:0020EEA0       zCTrigger::zCTrigger(void)
 0001:0020F090       zCTrigger::_GetClassDef(void)
 0001:0020F0A0       zCTrigger::`scalar deleting destructor'(uint)
 0001:0020F0D0       zCTrigger::ClearStateInternals(void)
 0001:0020F120       zCTrigger::~zCTrigger(void)
 0001:0020F220       zCTrigger::CanBeActivatedNow(zCVob *)
 0001:0020F340       zCTrigger::TriggerTarget(zCVob *)
 0001:0020F3F0       zCTrigger::UntriggerTarget(zCVob *)
 0001:0020F4A0       zCTrigger::TriggerTargetPost(void)
 0001:0020F4D0       zCTrigger::ActivateTrigger(zCVob *)
 0001:0020F5B0       zCTrigger::DeactivateTrigger(zCVob *)
 0001:0020F5E0       zCTrigger::OnTrigger(zCVob *,zCVob *)
 0001:0020F600       zCTrigger::OnUntrigger(zCVob *,zCVob *)
 0001:0020F640       zCTrigger::OnTouch(zCVob *)
 0001:0020F660       zCTrigger::OnUntouch(zCVob *)
 0001:0020F6A0       zCTrigger::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:0020F6E0       zCTrigger::OnMessage(zCEventMessage *,zCVob *)
 0001:0020F750       zCTrigger::OnTimer(void)
 0001:0020F7E0       zCTrigger::Archive(zCArchiver &)
 0001:0020FA60       zCTrigger::Unarchive(zCArchiver &)
 0001:0020FD20       zCMover::zCMover(void)
 0001:0020FF00       zCMover::_GetClassDef(void)
 0001:0020FF10       zCMover::`scalar deleting destructor'(uint)
 0001:0020FF40       zCMover::ClearStateInternals(void)
 0001:00210000       zCMover::~zCMover(void)
 0001:002101F0       zCMover::CanThisCollideWith(zCVob *)
 0001:00210270       zCMover::UpdateInternals(void)
 0001:002102F0       zCMover::GetKeyframe(zCVob *)
 0001:002103D0       zCMover::AdvanceKeyframe_KF(void)
 0001:00210400       zCMover::SetToKeyframe_KF(float)
 0001:00210900       zCMover::InterpolateKeyframes_KF(void)
 0001:00210D90       zCMover::AdvanceMover(void)
 0001:00211070       zCModel::GetAniIDFromAniName(zSTRING const &)
 0001:00211090       zCMover::SetToKeyframe(float,float)
 0001:00211300       zCMover::InvertMovement(void)
 0001:002113A0       zCMover::SetVisual(zCVisual *)
 0001:00211560       zCMover::StartMovingSound(void)
 0001:002115D0       zCMover::MoveToKeyframe(int)
 0001:00211640       zCMover::DoOpen(void)
 0001:002116F0       zCMover::FinishedOpening(void)
 0001:00211770       zCMover::DoClose(void)
 0001:00211830       zCMover::FinishedClosing(void)
 0001:00211880       zCMover::Unlock(zCVob *)
 0001:00211A50       zCMover::Lock(zCVob *)
 0001:00211C20       zCMover::IsKeyToThisMover(zCVob *)
 0001:00211CB0       zCMover::TriggerMover(zCVob *)
 0001:00211F50       zCSoundSystem::zTSound3DParams::SetDefaults(void)
 0001:00211F80       zCMover::OnTick(void)
 0001:00212080       zCMover::OnTrigger(zCVob *,zCVob *)
 0001:00212170       zCMover::OnUntrigger(zCVob *,zCVob *)
 0001:00212340       zCMover::OnTouch(zCVob *)
 0001:00212400       zCMover::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:00212450       zCMover::OnMessage(zCEventMessage *,zCVob *)
 0001:002127D0       zCMover::PostLoad(void)
 0001:002127E0       zCMover::Archive(zCArchiver &)
 0001:00212AA0       zCMover::Unarchive(zCArchiver &)
 0001:00212EA0       zCEarthquake::zCEarthquake(void)
 0001:00212F50       zCEarthquake::`scalar deleting destructor'(uint)
 0001:00212F80       zCEarthquake::~zCEarthquake(void)
 0001:00212F90       zCEarthquake::OnTrigger(zCVob *,zCVob *)
 0001:00212FE0       zCEarthquake::OnUntrigger(zCVob *,zCVob *)
 0001:00213030       zCEarthquake::Archive(zCArchiver &)
 0001:002130B0       zCEarthquake::Unarchive(zCArchiver &)
 0001:00213120       zCTriggerTeleport::zCTriggerTeleport(void)
 0001:002132A0       zCTriggerTeleport::`scalar deleting destructor'(uint)
 0001:002132D0       zCTriggerTeleport::~zCTriggerTeleport(void)
 0001:00213440       zCTriggerTeleport::DoTeleport(zCVob *)
 0001:00213690       zCTriggerTeleport::OnTouch(zCVob *)
 0001:002136A0       zCTriggerTeleport::OnTrigger(zCVob *,zCVob *)
 0001:002136B0       zCTriggerTeleport::OnUntrigger(zCVob *,zCVob *)
 0001:002136C0       zCTriggerTeleport::Archive(zCArchiver &)
 0001:002136F0       zCTriggerTeleport::Unarchive(zCArchiver &)
 0001:00213760       zCPFXControler::zCPFXControler(void)
 0001:002137B0       zCPFXControler::`scalar deleting destructor'(uint)
 0001:002137E0       zCPFXControler::~zCPFXControler(void)
 0001:00213840       zCPFXControler::GetPFX(void)
 0001:002138B0       zCPFXControler::PostLoad(void)
 0001:002138D0       zCPFXControler::OnTrigger(zCVob *,zCVob *)
 0001:00213960       zCPFXControler::OnUntrigger(zCVob *,zCVob *)
 0001:00213990       zCPFXControler::Archive(zCArchiver &)
 0001:002139F0       zCPFXControler::Unarchive(zCArchiver &)
 0001:00213B50       zCTriggerList::zCTriggerList(void)
 0001:00213CC0       zCTriggerList::`scalar deleting destructor'(uint)
 0001:00213CF0       zCTriggerList::~zCTriggerList(void)
 0001:00213E00       zCTriggerList::Init(void)
 0001:00213F10       zCTriggerList::GetTriggerTarget(int)
 0001:00213F30       zCTriggerList::TriggerActTarget(zCVob *)
 0001:00214000       zCTriggerList::ProcessActTarget(zCVob *)
 0001:00214090       zCTriggerList::FinishActivation(void)
 0001:00214100       zCTriggerList::OnTimer(void)
 0001:00214190       zCTriggerList::DoTriggering(zCVob *)
 0001:00214460       zCTriggerList::TriggerTarget(zCVob *)
 0001:00214470       zCTriggerList::UntriggerTarget(zCVob *)
 0001:00214490       zCTriggerList::Archive(zCArchiver &)
 0001:00214770       zCTriggerList::Unarchive(zCArchiver &)
 0001:00214A80       zCTouchDamage::zCTouchDamage(void)
 0001:00214B30       zCTouchDamage::`scalar deleting destructor'(uint)
 0001:00214B60       zCTouchDamage::~zCTouchDamage(void)
 0001:00214B70       zCTouchDamage::OnTouch(zCVob *)
 0001:00214C50       zCTouchDamage::OnUntouch(zCVob *)
 0001:00214C70       zCTouchDamage::OnTimer(void)
 0001:00214D70       zCTouchDamage::ProcessToucher(zCVob *)
 0001:00214E10       zCTouchDamage::TestCollType(zCVob *)
 0001:00215070       zCTouchDamage::FireDamageMessage(zCVob *)
 0001:00215100       zCTouchDamage::Archive(zCArchiver &)
 0001:002151D0       zCTouchDamage::Unarchive(zCArchiver &)
 0001:00215290       zCTouchDamage::GetDamageTypeArcEnum(ulong)
 0001:002152B0       zCTouchDamage::SetVisual(zCVisual *)
 0001:00215300       zCTouchDamage::SetVobProperties(void)
 0001:00215340       zCTouchAnimate::zCTouchAnimate(void)
 0001:002153F0       zCTouchAnimate::`scalar deleting destructor'(uint)
 0001:00215420       zCTouchAnimate::~zCTouchAnimate(void)
 0001:002154E0       zCTouchAnimate::OnTouch(zCVob *)
 0001:00215600       zCTouchAnimate::OnUntouch(zCVob *)
 0001:00215620       zCTouchAnimate::OnTick(void)
 0001:002157F0       zCTouchAnimate::IsTouching(zCVob *)
 0001:002158C0       zCTouchAnimate::StartAni(void)
 0001:00215A20       zCTouchAnimate::GetSoundName(void)
 0001:00215B20       zCVob::GetVisual(void)
 0001:00215B30       zCTouchAnimate::StopAni(void)
 0001:00215B70       zCTouchAnimate::IsAniActive(void)
 0001:00215BB0       zCTouchAnimate::Archive(zCArchiver &)
 0001:00215BC0       zCTouchAnimate::Unarchive(zCArchiver &)
 0001:00215C30       zCTouchAnimate::SetVisual(zCVisual *)
 0001:00215C80       zCTouchAnimate::SetVobProperties(void)
 0001:00215CC0       zCTouchAnimateSound::zCTouchAnimateSound(void)
 0001:00215E30       zCTouchAnimateSound::`scalar deleting destructor'(uint)
 0001:00215E60       zCTouchAnimateSound::~zCTouchAnimateSound(void)
 0001:00215F60       zCTouchAnimateSound::Archive(zCArchiver &)
 0001:00215F90       zCTouchAnimateSound::Unarchive(zCArchiver &)
 0001:00216020       zCTouchAnimateSound::GetSoundName(void)
 0001:00216070       zCVobAnimate::zCVobAnimate(void)
 0001:002160F0       zCVobAnimate::`scalar deleting destructor'(uint)
 0001:00216120       zCVobAnimate::~zCVobAnimate(void)
 0001:00216130       zCVobAnimate::SetVisual(zCVisual *)
 0001:002161A0       zCVobAnimate::StartAni(void)
 0001:002161E0       zCVobAnimate::StopAni(void)
 0001:002161F0       zCVobAnimate::OnTrigger(zCVob *,zCVob *)
 0001:00216240       zCVobAnimate::OnUntrigger(zCVob *,zCVob *)
 0001:00216250       zCVobAnimate::Archive(zCArchiver &)
 0001:002162A0       zCVobAnimate::Unarchive(zCArchiver &)
 0001:00216350       zCVobLensFlare::zCVobLensFlare(void)
 0001:002163C0       zCVobLensFlare::`scalar deleting destructor'(uint)
 0001:002163F0       zCVobLensFlare::~zCVobLensFlare(void)
 0001:00216410       zCVobLensFlare::Render(zTRenderContext &)
 0001:00216430       zCVobLensFlare::SetLensFlareFXByName(zSTRING const &)
 0001:00216480       zCVobLensFlare::Archive(zCArchiver &)
 0001:00216570       zCVobLensFlare::Unarchive(zCArchiver &)
 0001:00216650       zCEventScreenFX::zCEventScreenFX(zCEventScreenFX::zTEventScreenFXSubType,float,zCOLOR,float)
 0001:002166F0       zCEventScreenFX::Clear(void)
 0001:00216720       zCEventScreenFX::MD_GetSubTypeString(int)
 0001:00216910       zCEventScreenFX::MD_GetTimeBehavior(void)
 0001:00216930       zCEventScreenFX::MD_GetMinTime(void)
 0001:00216940       zCEventScreenFX::Pack(zCBuffer &,zCEventManager *)
 0001:00216980       zCEventScreenFX::Unpack(zCBuffer &,zCEventManager *)
 0001:002169C0       zCEventScreenFX::Archive(zCArchiver &)
 0001:00216A10       zCEventScreenFX::Unarchive(zCArchiver &)
 0001:00216A60       zCVobScreenFX::zCVobScreenFX(void)
 0001:00216BF0       zCVobScreenFX::_GetClassDef(void)
 0001:00216C00       zCVobScreenFX::`scalar deleting destructor'(uint)
 0001:00216C30       zCVobScreenFX::zTScreenFXSet::~zTScreenFXSet(void)
 0001:00216C80       zCVobScreenFX::~zCVobScreenFX(void)
 0001:00216D60       zCVobScreenFX::OnMessage(zCEventMessage *,zCVob *)
 0001:00216F50       zCVobScreenFX::StartEffect(float,zCOLOR,int,zCVobScreenFX::zTScreenFXSet &)
 0001:00216FE0       zCVobScreenFX::CalcEffectColor(zCVobScreenFX::zTScreenFXSet &)
 0001:00217070       zCVobScreenFX::OnTick(void)
 0001:002173B0       zCVobScreenFX::Archive(zCArchiver &)
 0001:00217440       zCVobScreenFX::Unarchive(zCArchiver &)
 0001:002174E0       zCMessageFilter::zCMessageFilter(void)
 0001:00217590       zCMessageFilter::`scalar deleting destructor'(uint)
 0001:002175C0       zCMessageFilter::~zCMessageFilter(void)
 0001:00217620       zCMessageFilter::ProcessMessage(zCMessageFilter::zTMessageType,zCVob *)
 0001:00217930       zCMessageFilter::OnTrigger(zCVob *,zCVob *)
 0001:00217950       zCMessageFilter::OnUntrigger(zCVob *,zCVob *)
 0001:00217970       zCMessageFilter::Archive(zCArchiver &)
 0001:002179D0       zCMessageFilter::Unarchive(zCArchiver &)
 0001:00217A50       zCTriggerUntouch::OnUntouch(zCVob *)
 0001:00217B80       zCCodeMaster::zCCodeMaster(void)
 0001:00217D30       zCCodeMaster::`scalar deleting destructor'(uint)
 0001:00217D60       zCCodeMaster::~zCCodeMaster(void)
 0001:00217EC0       zCCodeMaster::Init(void)
 0001:00218040       zCCodeMaster::Reset(void)
 0001:00218090       zCCodeMaster::FireTriggerSuccess(zCVob *)
 0001:00218170       zCCodeMaster::FireTriggerFailure(zCVob *)
 0001:00218250       zCCodeMaster::GetSlaveNr(zCVob *)
 0001:00218300       zCCodeMaster::OnTrigger(zCVob *,zCVob *)
 0001:00218500       zCCodeMaster::OnUntrigger(zCVob *,zCVob *)
 0001:00218600       zCCodeMaster::OnMessage(zCEventMessage *,zCVob *)
 0001:00218670       zCCodeMaster::Archive(zCArchiver &)
 0001:00218A80       zCCodeMaster::Unarchive(zCArchiver &)
 0001:00218E40       zCCodeMaster::GetTriggerTarget(int)
 0001:00218E70       zCMoverControler::zCMoverControler(void)
 0001:00218F30       zCMoverControler::`scalar deleting destructor'(uint)
 0001:00218F60       zCMoverControler::~zCMoverControler(void)
 0001:00218FC0       zCMoverControler::OnTrigger(zCVob *,zCVob *)
 0001:002190D0       zCMoverControler::Archive(zCArchiver &)
 0001:00219340       zCMoverControler::Unarchive(zCArchiver &)
 0001:002193A0       zCTriggerWorldStart::zCTriggerWorldStart(void)
 0001:00219450       zCTriggerWorldStart::`scalar deleting destructor'(uint)
 0001:00219480       zCTriggerWorldStart::~zCTriggerWorldStart(void)
 0001:002194E0       zCTriggerWorldStart::PostLoad(void)
 0001:00219510       zCTriggerWorldStart::OnTrigger(zCVob *,zCVob *)
 0001:00219530       zCTriggerWorldStart::Archive(zCArchiver &)
 0001:00219590       zCTriggerWorldStart::Unarchive(zCArchiver &)
 0001:00219600       zCArray<zCMover::zTMov_Keyframe>::~zCArray<zCMover::zTMov_Keyframe>(void)
 0001:00219620       zCArray<zCMover::zTMov_Keyframe>::AllocDelta(int)
 0001:002196C0       zCVob::GetAutoLinkParent(zCVob *)
 0001:00219700       zCVob::CanAutoLinkWith(zCVob *,zCVob *)
 0001:00219840       zCVob::CheckAutoLink(zCVob *,zCVob *)
 0001:00219AC0       zCVob::CheckAutoUnlink(zCVob *)
 0001:00219CD0       zCVob::CalcGroundPoly(void)
 0001:00219E20       zCVob::CalcWaterVob(void)
 0001:00219EF0       zCVob::SetCollTypeDefaultFromVisual(void)
 0001:0021A060       zCVob::TouchMovement(void)
 0001:0021A080       zCVob::GetNewTrafoObjToWorld(void)
 0001:0021A0A0       zCVob::GetNewTrafoObjToWorld(void)
 0001:0021A0C0       zCVob::SetNewTrafoObjToWorld(zMAT4 const &)
 0001:0021A0E0       zCVob::SetBBox3DWorld(zTBBox3D const &)
 0001:0021A140       zCVob::SetBBox3DLocal(zTBBox3D const &)
 0001:0021A1F0       zCVob::GetBBox3DLocal(void)
 0001:0021A2E0       zCVob::Move(float,float,float)
 0001:0021A350       zCVob::MoveWorld(float,float,float)
 0001:0021A3C0       zCVob::MoveLocal(float,float,float)
 0001:0021A4C0       zCVob::SetRotationWorld(zCQuat const &)
 0001:0021A520       zCVob::RotateWorld(zVEC3 const &,float)
 0001:0021A610       zCVob::RotateLocal(zVEC3 const &,float)
 0001:0021A6B0       zCVob::RotateLocalX(float)
 0001:0021A720       zCVob::RotateLocalY(float)
 0001:0021A790       zCVob::RotateLocalZ(float)
 0001:0021A800       zCVob::RotateWorldX(float)
 0001:0021A830       zCVob::RotateWorldY(float)
 0001:0021A860       zCVob::RotateWorldZ(float)
 0001:0021A890       zCVob::GetPositionWorld(float &,float &,float &)
 0001:0021A8C0       zCVob::GetPositionLocal(float &,float &,float &)
 0001:0021A910       zCVob::GetDistanceToVob(zCVob &)
 0001:0021A970       zCVob::GetDistanceToVobApprox(zCVob &)
 0001:0021AA40       zCVob::GetDistanceToVob2(zCVob &)
 0001:0021AAA0       zCVob::SetPositionLocal(zVEC3 const &)
 0001:0021AB70       zCVob::SetPositionWorld(zVEC3 const &)
 0001:0021ABD0       zCVob::SetTrafo(zMAT4 const &)
 0001:0021AC80       zCVob::SetTrafoObjToWorld(zMAT4 const &)
 0001:0021ACF0       zCVob::ResetRotationsLocal(void)
 0001:0021AE20       zCVob::ResetXZRotationsLocal(void)
 0001:0021B000       zCVob::ResetRotationsWorld(void)
 0001:0021B090       zCVob::ResetXZRotationsWorld(void)
 0001:0021B1B0       zCVob::SetHeadingYLocal(zVEC3 const &)
 0001:0021B280       zCVob::SetHeadingYWorld(zVEC3 const &)
 0001:0021B450       zCVob::SetHeadingYWorld(zCVob *)
 0001:0021B5E0       zCVob::SetHeadingLocal(zVEC3 const &)
 0001:0021B6B0       zCVob::SetHeadingWorld(zVEC3 const &)
 0001:0021B780       zCVob::SetHeadingWorld(zCVob *)
 0001:0021B860       zCVob::SetHeadingAtLocal(zVEC3 const &)
 0001:0021BBA0       zCVob::HasParentVob(void)
 0001:0021BBC0       zCVob::SetHeadingAtWorld(zVEC3 const &)
 0001:0021BE50       zCVob::SetCollDetStat(int)
 0001:0021BF40       zCVob::SetCollDetDyn(int)
 0001:0021C040       zCVob::CorrectTrafo(void)
 0001:0021C0B0       zCVob::DoneWithTrafoLocal(void)
 0001:0021C100       zCVob::CreateTrafoLocal(void)
 0001:0021C190       zCVob::SetPhysicsEnabled(int)
 0001:0021C1C0       zCVob::GetVelocity(void)
 0001:0021C2D0       zCVob::UpdatePhysics(void)
 0001:0021C890       zCVob::DetectCollision(zMAT4 *)
 0001:0021C9D0       zCVob::SetInMovement(int)
 0001:0021CA30       zCVob::SetInMovementMode(zCVob::zTMovementMode)
 0001:0021CA80       zCVob::BeginMovement(void)
 0001:0021CC00       zCVob::ResetToOldMovementState(void)
 0001:0021CC30       zCVob::UpdateTouchList(zCArray<zCVob *> const &)
 0001:0021CEE0       zCVob::CalcDestinationBBox3DWorld(zTBBox3D &)
 0001:0021D020       zCVob::AdoptCollObjResults(void)
 0001:0021D0D0       zCVob::EndMovement(int)
 0001:0021D5E0       zCVob::SetCollisionObject(zCCollisionObject *)
 0001:0021D610       zCVob::SetCollisionClass(zCCollisionObjectDef *)
 0001:0021D650       zCVob::GetCollisionObject(void)
 0001:0021D660       zCVob::CreateCollisionObject(void)
 0001:0021D690       zCVob::ResetCollisionObjectState(void)
 0001:0021D6D0       zCVob::DestroyCollisionObject(int)
 0001:0021D710       zCVob::CheckEmergencyPutToSleep(void)
 0001:0021D870       zCVob::CollectCollisionContext_Vobs(zTBBox3D const &,zCVob::zTCollisionContext &)
 0001:0021DAD0       zCVob::CollectCollisionContext_Static(zTBBox3D const &,zCArray<zCCollisionObject *> &)
 0001:0021DD80       zCCollObjectLevelPolys::zCCollObjectLevelPolys(void)
 0001:0021DDC0       zCVob::CollectCollisionContext(zCVob::zTCollisionContext &)
 0001:0021DE40       zCVob::CleanupCollisionContext(zCVob::zTCollisionContext const &)
 0001:0021DEB0       zCVob::NotifyCollisionPair(zCCollisionReport *,zCArray<zCCollisionReport *> const &,int)
 0001:0021DF80       zCVob::ExecuteCollisionResponse(zCArray<zCCollisionReport *> const &,int &)
 0001:0021E060       zCVob::CheckAndResolveCollisions(void)
 0001:0021E490       zCVob::zTCollisionContext::~zTCollisionContext(void)
 0001:0021E4F0       zCVob::IsColliding(void)
 0001:0021E6F0       zCArray<zCVob *>::zCArray<zCVob *>(void)
 0001:0021E700       zCArray<zCCollisionObject *>::zCArray<zCCollisionObject *>(void)
 0001:0021E710       zCArray<zCCollisionReport *>::~zCArray<zCCollisionReport *>(void)
 0001:0021E9B0       zCWorld::_CreateNewInstance(void)
 0001:0021EA40       zCWorld::zCWorld(void)
 0001:0021EF80       zCBBox3DSorterBase::zTBoxSortHandle::zTBoxSortHandle(void)
 0001:0021F010       zCBBox3DSorterBase::zTBoxSortHandle::ClearActive(void)
 0001:0021F020       zCBBox3DSorterBase::zTBoxSortHandle::`scalar deleting destructor'(uint)
 0001:0021F040       zCWorld::_GetClassDef(void)
 0001:0021F050       zCWorld::GetPlayerGroup(void)
 0001:0021F060       zCWayNet::operator delete(void *)
 0001:0021F080       zCWorld::`scalar deleting destructor'(uint)
 0001:0021F0B0       zCVobBBox3DSorter<zCZone>::`vector deleting destructor'(uint)
 0001:0021F0D0       zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::`scalar deleting destructor'(uint)
 0001:0021F0F0       zCWorld::~zCWorld(void)
 0001:0021F3A0       zCWorld::GetActiveSkyControler(void)
 0001:0021F3D0       zCWorld::SetSkyControlerIndoor(zCSkyControler *)
 0001:0021F410       zCWorld::SetSkyControlerOutdoor(zCSkyControler *)
 0001:0021F450       zCWorld::RenderWaynet(zCCamera *)
 0001:0021F470       zCWorld::ActiveZoneListCompare(void const *,void const *)
 0001:0021F4C0       zCWorld::AddZone(zCZone *)
 0001:0021F630       zCWorld::RemoveZone(zCZone *)
 0001:0021F770       zCWorld::RemoveAllZones(void)
 0001:0021F7E0       zCWorld::UpdateZone(zCZone *)
 0001:0021F7F0       zCWorld::ProcessZones(void)
 0001:0021FE60       zCWorld::ShowZonesDebugInfo(void)
 0001:00220280       zCWorld::ShowTextureStats(void)
 0001:00220700       zCWorld::Render(zCCamera &)
 0001:00220960       zCWorld::TraceRayFirstHit(zVEC3 const &,zVEC3 const &,zCArray<zCVob *> const *,int)
 0001:00220B80       zCWorld::TraceRayNearestHit(zVEC3 const &,zVEC3 const &,zCArray<zCVob *> const *,int)
 0001:00220E70       zCWorld::TraceRayFirstHit(zVEC3 const &,zVEC3 const &,zCVob *,int)
 0001:00220FA0       zCWorld::TraceRayNearestHit(zVEC3 const &,zVEC3 const &,zCVob *,int)
 0001:002210D0       zCWorld::TraceRayFirstHitCache(zVEC3 const &,zVEC3 const &,zCArray<zCVob *> const *,int,zCRayCache *)
 0001:00221230       zCWorld::TraceRayFirstHitCache(zVEC3 const &,zVEC3 const &,zCVob *,int,zCRayCache *)
 0001:002213F0       zCWorld::TraceRayNearestHitCache(zVEC3 const &,zVEC3 const &,zCArray<zCVob *> const *,int,zCRayCache *)
 0001:00221550       zCWorld::TraceRayNearestHitCache(zVEC3 const &,zVEC3 const &,zCVob *,int,zCRayCache *)
 0001:00221710       zCWorld::PickScene(zCCamera &,int,int,float)
 0001:00221980       zCWorld::TraverseBsp(zCCBspTree *,zCTree<zCVob> *,int)
 0001:00221A80       zCWorld::TraverseBspAddVobsToMesh(zCCBspTree *,zCTree<zCVob> *)
 0001:00221E90       zCWorld::SaveBspTreeMesh3DS(zSTRING const &)
 0001:00221EC0       zCWorld::CompileWorld(zTBspTreeMode const &,float,int,int,zCArray<zCPolygon *> *)
 0001:00222960       zCWorld::DisposeVobs(zCTree<zCVob> *)
 0001:00222AF0       zCWorld::DisposeVobsDbg(zCTree<zCVob> *)
 0001:00222C80       zCWorld::DisposeStaticWorld(void)
 0001:00222D30       zCWorld::DisposeWorld(void)
 0001:00222F10       zCWorld::SearchVob(zCVob *,zCTree<zCVob> *)
 0001:00222F60       zCWorld::SearchVobByID(ulong,zCTree<zCVob> *)
 0001:00222FB0       zCWorld::SearchVobByName(zSTRING const &)
 0001:00223090       zCWorld::SearchVobListByName(zSTRING const &,zCArray<zCVob *> &)
 0001:00223250       zCWorld::SearchVobListByClass(zCClassDef *,zCArray<zCVob *> &,zCTree<zCVob> *)
 0001:00223320       zCWorld::SearchVobListByBaseClass(zCClassDef *,zCArray<zCVob *> &,zCTree<zCVob> *)
 0001:00223400       zCWorld::SearchZoneListByClass(zCClassDef *,zCArray<zCZone *> &)
 0001:00223530       zCWorld::SearchZoneDefaultByClass(zCClassDef *)
 0001:002235A0       zCWorld::AddVobAsChild(zCVob *,zCTree<zCVob> *)
 0001:002237B0       zCWorld::ShouldAddThisVobToBsp(zCVob *)
 0001:002237F0       zCWorld::AddVobAsChild(zCVob *,zCVob *)
 0001:00223810       zCWorld::AddVob(zCVob *)
 0001:00223830       zCWorld::VobAddedToWorld(zCVob *)
 0001:00223970       zCWorld::VobRemovedFromWorld(zCVob *)
 0001:00223B70       zCWorld::RemoveVob(zCVob *)
 0001:00223BA0       zCWorld::RemoveVob(zCTree<zCVob> *)
 0001:00223BC0       zCWorld::RemoveVobSubtree_r(zCTree<zCVob> *,int)
 0001:00223D60       zCWorld::RemoveVobSubtree(zCVob *)
 0001:00223D90       zCWorld::RemoveVobSubtree(zCTree<zCVob> *)
 0001:00223DB0       zCWorld::MoveVobSubtreeTo(zCVob *,zCTree<zCVob> *)
 0001:00223E70       zCWorld::MoveVobSubtreeTo(zCVob *,zCVob *)
 0001:00223E90       zCWorld::MoveVobSubtreeToWorldSpace(zCVob *)
 0001:00223EB0       zCWorld::RemoveVobFromLists(zCVob *)
 0001:00224080       zCWorld::PrintStatus(void)
 0001:00224AE0       zCWorld::PrintGlobalVobTree(zCTree<zCVob> *,int)
 0001:00224DA0       zCWorld::PrintActiveVobs(void)
 0001:00224FE0       zCWorld::UpdateVobTreeBspDependencies(zCTree<zCVob> *)
 0001:00225050       zCWorld::MoveVobs(void)
 0001:002250E0       zCWorld::AdvanceClock(float)
 0001:00225120       zCWorld::SaveBspTree(zFILE &)
 0001:002252A0       zCWorld::LoadBspTree(zFILE &,int)
 0001:002253D0       zCWorld::DebugMarkOccluderPolys(void)
 0001:00225570       zCWorld::UnarcTraverseVobs(zCArchiver &,zCTree<zCVob> *)
 0001:002259C0       zCWorld::GetProgressBar(void)
 0001:002259D0       zCWorld::Unarchive(zCArchiver &)
 0001:002260B0       zCFileBIN::BinSetFile(zFILE *)
 0001:002260D0       zCWorld::LoadWorld(zSTRING const &,zCWorld::zTWorldLoadMode)
 0001:002263E0       zCWorld::MergeVobSubtree(zSTRING const &,zCVob *,zCWorld::zTWorldLoadMergeMode)
 0001:002264A0       zCWorld::ArcTraverseVobs(zCArchiver &,zCTree<zCVob> *,int)
 0001:00226890       zCWorld::Archive(zCArchiver &)
 0001:00226BB0       zCWorld::SaveWorld(zSTRING const &,zCWorld::zTWorldSaveMode,int,int)
 0001:00226E50       zCWorld::SaveVobSubtree(zSTRING const &,zCVob *,int,int)
 0001:00226F10       zCWorld::TraverseVobTree(zCVobCallback &,void *,zCTree<zCVob> *)
 0001:00226F70       zCWorld::GetVobHashIndex(zSTRING const &)
 0001:00226FA0       zCWorld::GetVobHashIndex(zCVob *)
 0001:00226FE0       zCWorld::InsertVobHashTable(zCVob *)
 0001:00227100       zCWorld::RemoveVobHashTable(zCVob *)
 0001:00227190       zCWorld::SearchVobHashTable(zSTRING const &)
 0001:00227270       zCWorld::SearchVobListHashTable(zSTRING const &,zCArray<zCVob *> &)
 0001:00227430       zCWorld::SetOwnerSession(zCSession *)
 0001:00227480       zCWorld::GetOwnerSession(void)
 0001:00227490       zCWorld::ResetCutscenePlayer(void)
 0001:002274E0       zCWorld::RegisterPerFrameCallback(zCWorldPerFrameCallback *)
 0001:00227610       zCWorld::UnregisterPerFrameCallback(zCWorldPerFrameCallback *)
 0001:00227660       zCTree<zCVob>::AddChild(zCVob *)
 0001:002276B0       zCTree<zCVob>::CountNodes(void)
 0001:002276F0       zCArray<zCWorldPerFrameCallback *>::~zCArray<zCWorldPerFrameCallback *>(void)
 0001:00227710       zCArray<zCZone *>::~zCArray<zCZone *>(void)
 0001:00227730       zCArray<zCZone *>::InsertEnd(zCZone * const &)
 0001:00227800       zCArray<zCZone *>::IsInList(zCZone * const &)
 0001:00227840       zCArraySort<zCZone *>::zCArraySort<zCZone *>(void)
 0001:00227860       zCArraySort<zCZone *>::~zCArraySort<zCZone *>(void)
 0001:00227880       zCArraySort<zCZone *>::Remove(zCZone * const &)
 0001:002278D0       zCVobBBox3DSorter<zCZone>::~zCVobBBox3DSorter<zCZone>(void)
 0001:002278E0       zCVobBBox3DSorter<zCZone>::GetBBox(zCBBox3DSorterBase::zTNode const *)
 0001:002278F0       zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::~zTBoxSortHandle(void)
 0001:00227950       zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::AddActive(void *)
 0001:00227A50       zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::DelActive(void *)
 0001:00227AA0       zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::ClearActive(void)
 0001:00227AC0       zCArray<zCZone *>::AllocDelta(int)
 0001:00227B20       zCArray<zCZone *>::InsertAtPos(zCZone * const &,int)
 0001:00227C10       zCArray<zCZone *>::RemoveOrderIndex(int)
 0001:00227C40       zCArraySort<zCZone *>::InsertEnd(zCZone * const &)
 0001:00227D10       zCArraySort<zCZone *>::Search(zCZone * const &)
 0001:00227D80       zCArraySort<zCZone *>::AllocDelta(int)
 0001:00227EA0       zCPolygon::LightStatic(zCVobLight &,zVEC3 const &,zMAT4 &,zCWorld *)
 0001:00228800       zCPolygon::SmoothSectorBorder(zCWorld *)
 0001:00228A50       zCMesh::LightMesh(zCVobLight &,zMAT4 &,zCWorld *)
 0001:00228B30       zCWorld::LightWorldStaticUncompiled(zCTree<zCVob> *)
 0001:00228F70       zCWorld::LightWorldStaticCompiled(void)
 0001:00229740       zCOLOR::SetRGB(uchar,uchar,uchar)
 0001:00229760       zCWorld::GenerateStaticVertexLighting(void)
 0001:00229A70       zCWorld::LightingTestRay(zVEC3 const &,zVEC3 const &,zVEC3 &,zCPolygon * &)
 0001:00229B30       zCWorld::GetSurfaceLightmapBBox2D(zCArray<zCPolygon *> &,zTBBox2D &,int * const)
 0001:00229F90       zCWorld::GetPhongNormal(zCPolygon *,zVEC3 const &)
 0001:0022A350       zCWorld::GeneratePatchMapFromSurface(zCArray<zCPolygon *> &)
 0001:0022B0C0       zCPatch::zCPatch(void)
 0001:0022B110       zCPatchMap::CheckRaySurfaceIntersection(zVEC3 &,zVEC3 &,zVEC3 &,zCPolygon * &)
 0001:0022B1B0       zCWorld::GenerateLightmapFromPatchMap(zCPatchMap *)
 0001:0022C4C0       zCWorld::LightPatchMap(zCPatchMap *)
 0001:0022C970       zCWorld::GenerateSurfaces(int,zTBBox3D *)
 0001:0022D760       zCPatchMap::~zCPatchMap(void)
 0001:0022D800       zCWorld::MakeTransfers(void)
 0001:0022E000       zCPatch::DoTransfers(void)
 0001:0022E150       zCWorld::GenerateLightmapsRadiosity(zTBBox3D *)
 0001:0022E3A0       zCWorld::GenerateLightmaps(zCWorld::zTStaticWorldLightMode const &,zTBBox3D *)
 0001:0022EB70       zCWorld::GenerateStaticWorldLighting(zCWorld::zTStaticWorldLightMode const &,zTBBox3D *)
 0001:0022EE60       zCWorld::MakeVobLightingDirty(void)
 0001:0022F050       zCList<zCVob>::~zCList<zCVob>(void)
 0001:0022F080       zCList<zCVob>::Insert(zCVob *)
 0001:0022F0D0       zCArray<zCPatch *>::~zCArray<zCPatch *>(void)
 0001:0022F0F0       zCArray<zCTransferConstr>::~zCArray<zCTransferConstr>(void)
 0001:0022F110       zCList<zCVob>::`scalar deleting destructor'(uint)
 0001:0022F150       zCArray<zCTransfer>::AllocDelta(int)
 0001:0022F1C0       zCArray<zCTransfer>::InsertEnd(zCTransfer const &)
 0001:0022F2D0       zCArray<zCPatch *>::InsertEnd(zCPatch * const &)
 0001:0022F3A0       zCArray<zCPatchMap *>::InsertEnd(zCPatchMap * const &)
 0001:0022F470       zCArray<zCTransferConstr>::InsertEnd(zCTransferConstr const &)
 0001:0022F580       zDieter_StartUp(HWND__ * *)
 0001:00231AB0       zCSoundSystemDummy::DoSoundUpdate(void)
 0001:00231AC0       zCSoundSystemDummy::LoadSoundFX(zSTRING const &)
 0001:00231B20       zCSoundFXDummy::`scalar deleting destructor'(uint)
 0001:00231B50       zCSoundFXDummy::~zCSoundFXDummy(void)
 0001:00231B60       zCSoundSystemDummy::PlaySound(zCSoundFX *,int)
 0001:00231B70       zCSoundSystemDummy::PlaySound(zCSoundFX *,int,int,float,float)
 0001:00231B80       zCSoundSystemDummy::SetGlobalOcclusion(float)
 0001:00231B90       zCSoundSystemDummy::PlaySound3D(zCSoundFX *,zCVob *,int,zCSoundSystem::zTSound3DParams *)
 0001:00231BA0       zCSoundSystemDummy::PlaySound3D(zSTRING const &,zCVob *,int,zCSoundSystem::zTSound3DParams *)
 0001:00231BB0       zCSoundSystemDummy::GetSound3DProps(int const &,zCSoundSystem::zTSound3DParams &)
 0001:00231BC0       zCSoundSystemDummy::UpdateSound3D(int const &,zCSoundSystem::zTSound3DParams *)
 0001:00231BD0       zCSoundManager::zCTableEntry::~zCTableEntry(void)
 0001:00231C90       zCMusicSys_Dummy::LoadThemeByScript(zSTRING const &)
 0001:00231CE0       zCMusicSys_Dummy::LoadTheme(zSTRING const &)
 0001:00231D30       zCMusicSys_Dummy::LoadJingleByScript(zSTRING const &)
 0001:00231D90       zCMusicSys_Dummy::LoadJingle(zSTRING const &)
 0001:00231DF0       zCMusicSys_Dummy::DoMusicUpdate(void)
 0001:002360B0       zCTimer::SetMotionFactor(float)
 0001:002360C0       zCResourceManager::SetShowDebugInfo(int)
 0001:002360D0       zCResourceManager::GetShowDebugInfo(void)
 0001:002360E0       zCProgMeshProto::SetLODParamStrength(float)
 0001:002360F0       zCBspTree::GetShowPortals(void)
 0001:00236100       zCBspTree::SetShowPortals(int)
 0001:00236110       zCVob::SetShowHelperVisuals(int)
 0001:00236120       zCVob::GetShowHelperVisuals(void)
 0001:00236130       zCVob::GetAnimationsEnabled(void)
 0001:00236140       zCVob::SetAnimationsEnabled(int)
 0001:00236150       zCZone::SetVisual(zCVisual *)
 0001:00236160       zCZone::SetVisual(zSTRING const &)
 0001:00236170       zCZone::GetZoneMotherClass(void)
 0001:00236180       zCZoneZFog::operator delete(void *)
 0001:002361A0       zCZoneZFogDefault::operator delete(void *)
 0001:002361C0       zCZoneZFogDefault::_GetClassDef(void)
 0001:002361D0       zCWorld::GetWaveAnisEnabled(void)
 0001:002361E0       zCWorld::SetWaveAnisEnabled(int)
 0001:002361F0       zCWorld::GetShowTextureStats(void)
 0001:00236200       zCWorld::SetShowTextureStats(int)
 0001:00236210       zCWorld::SetVobFarClipZScalability(float)
 0001:00236220       zCVobCallback_PrintBigBBox::~zCVobCallback_PrintBigBBox(void)
 0001:00236310       zCVobCallback_PrintBigBBox::HandleVob(zCVob *,void *)
 0001:00237150       zCShowMemCallback::DoWorldPerFrameCallback(zCWorld *,zCCamera *)
 0001:00237F70       nullsub_29
 0001:00237F80       zTRnd_DeviceInfo::zTRnd_DeviceInfo(void)
 0001:00237FA0       zCZoneZFogDefault::`scalar deleting destructor'(uint)
 0001:00237FD0       zCZoneZFogDefault::~zCZoneZFogDefault(void)
 0001:00237FE0       zCMusicSys_Dummy::`scalar deleting destructor'(uint)
 0001:00238000       zCSoundSystemDummy::`scalar deleting destructor'(uint)
 0001:00238020       zCMusicSys_Dummy::~zCMusicSys_Dummy(void)
 0001:00238030       zCSoundSystemDummy::~zCSoundSystemDummy(void)
 0001:00238040       zDieter_ShutDown(void)
 0001:002380E0       zCSoundManager::~zCSoundManager(void)
 0001:002381D0       zDieter_ShutDown_Fast(void)
 0001:002381E0       zCArraySort<zCSoundManager::zCMediumType>::zCArraySort<zCSoundManager::zCMediumType>(void)
 0001:00238200       zCArraySort<zCSoundManager::zCMediumType>::~zCArraySort<zCSoundManager::zCMediumType>(void)
 0001:00238230       zCArraySort<zCSoundManager::zCSoundEventData>::zCArraySort<zCSoundManager::zCSoundEventData>(void)
 0001:00238250       zCArraySort<zCSoundManager::zCSoundEventData>::~zCArraySort<zCSoundManager::zCSoundEventData>(void)
 0001:00238680       zCZoneReverb::_CreateNewInstance(void)
 0001:00238740       zCZone::_GetClassDef(void)
 0001:00238750       zCZone::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:00238760       zCZone::GetDefaultZoneClass(void)
 0001:00238770       zCZoneReverb::operator delete(void *)
 0001:00238790       zCZoneReverb::_GetClassDef(void)
 0001:00238990       zCZoneReverbDefault::_CreateNewInstance(void)
 0001:00238A50       zCZoneReverbDefault::operator delete(void *)
 0001:00238A70       zCZoneReverbDefault::_GetClassDef(void)
 0001:00238A80       zCZoneReverbDefault::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:00238A90       zCZoneReverbDefault::`scalar deleting destructor'(uint)
 0001:00238AC0       zCZoneReverbDefault::~zCZoneReverbDefault(void)
 0001:00238D20       zCZoneVobFarPlane::_CreateNewInstance(void)
 0001:00238DE0       zCZoneVobFarPlane::operator delete(void *)
 0001:00238E00       zCZoneVobFarPlane::_GetClassDef(void)
 0001:00239000       zCZoneVobFarPlaneDefault::_CreateNewInstance(void)
 0001:002390C0       zCZoneVobFarPlaneDefault::operator delete(void *)
 0001:002390E0       zCZoneVobFarPlaneDefault::_GetClassDef(void)
 0001:002390F0       zCZoneVobFarPlaneDefault::`scalar deleting destructor'(uint)
 0001:00239120       zCZoneVobFarPlaneDefault::~zCZoneVobFarPlaneDefault(void)
 0001:00239380       zCZoneMusic::_CreateNewInstance(void)
 0001:00239430       zCZoneMusic::operator delete(void *)
 0001:00239450       zCZoneMusic::_GetClassDef(void)
 0001:00239460       zCZoneMusic::`scalar deleting destructor'(uint)
 0001:00239490       zCZoneMusic::~zCZoneMusic(void)
 0001:002396F0       zCZoneZFog::_CreateNewInstance(void)
 0001:002397E0       zCZoneZFog::_GetClassDef(void)
 0001:002399E0       zCZoneZFogDefault::_CreateNewInstance(void)
 0001:00239CC0       zCVobSound::_CreateNewInstance(void)
 0001:00239D20       zCVobSound::operator delete(void *)
 0001:00239F30       zCVobSoundDaytime::_CreateNewInstance(void)
 0001:00239FF0       zCVobSoundDaytime::operator delete(void *)
 0001:0023A010       zCVobSoundDaytime::_GetClassDef(void)
 0001:0023A020       zCVobSoundDaytime::GetZoneMotherClass(void)
 0001:0023A030       zCBBox3DSorterBase::zTBoxSortHandle::~zTBoxSortHandle(void)
 0001:0023A080       zCBBox3DSorterBase::zCBBox3DSorterBase(void)
 0001:0023A100       zCBBox3DSorterBase::`scalar deleting destructor'(uint)
 0001:0023A120       zCBBox3DSorterBase::~zCBBox3DSorterBase(void)
 0001:0023A1B0       zCBBox3DSorterBase::ArrayCompare(void const *,void const *)
 0001:0023A2B0       zCBBox3DSorterBase::Clear(void)
 0001:0023A330       zCBBox3DSorterBase::AllocAbs(int)
 0001:0023A3B0       zCBBox3DSorterBase::Insert(void *)
 0001:0023A510       zCBBox3DSorterBase::Remove(void *)
 0001:0023A5D0       zCBBox3DSorterBase::GetActiveList(zTBBox3D const &,zCBBox3DSorterBase::zTBoxSortHandle &)
 0001:0023A920       zCBBox3DSorterBase::UpdateActiveList(zTBBox3D const &,zCBBox3DSorterBase::zTBoxSortHandle &)
 0001:0023AC00       zCBBox3DSorterBase::InsertHandle(zCBBox3DSorterBase::zTBoxSortHandle &)
 0001:0023ACE0       zCBBox3DSorterBase::RemoveHandle(zCBBox3DSorterBase::zTBoxSortHandle &)
 0001:0023AD30       zCBBox3DSorterBase::Sort(void)
 0001:0023AD70       zCBBox3DSorterBase::AdjustSorting(zCArraySort<zCBBox3DSorterBase::zTNode *> &,int)
 0001:0023AEF0       zCBBox3DSorterBase::Update(void *)
 0001:0023B050       zCZone::zCZone(void)
 0001:0023B0C0       zCZone::`scalar deleting destructor'(uint)
 0001:0023B0F0       zCZone::~zCZone(void)
 0001:0023B160       zCZone::ThisVobAddedToWorld(zCWorld *)
 0001:0023B180       zCZone::ThisVobRemovedFromWorld(zCWorld *)
 0001:0023B1A0       zCZone::EndMovement(int)
 0001:0023B1D0       zCZone::GetCamPosWeight(void)
 0001:0023B390       zCZone::SetZoneVobFlags(void)
 0001:0023B3C0       zCZone::Unarchive(zCArchiver &)
 0001:0023B400       zCZone::GetDebugDescString(void)
 0001:0023B5B0       zCZoneZFog::zCZoneZFog(void)
 0001:0023B660       zCZoneZFog::`scalar deleting destructor'(uint)
 0001:0023B690       zCZoneZFog::~zCZoneZFog(void)
 0001:0023B700       zCZoneZFog::GetActiveRange(float)
 0001:0023B750       zCZoneZFog::GetSkyFadeWeight(void)
 0001:0023B790       zCZoneZFog::GetDefaultZoneClass(void)
 0001:0023B7A0       zCZoneZFog::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:0023BB80       zSinusEase(float)
 0001:0023BBB0       zCZoneZFog::Archive(zCArchiver &)
 0001:0023BC40       zCZoneZFog::Unarchive(zCArchiver &)
 0001:0023BD00       zCZoneZFogDefault::ThisVobAddedToWorld(zCWorld *)
 0001:0023BD30       zCZoneZFogDefault::Unarchive(zCArchiver &)
 0001:0023BE10       zCZoneVobFarPlane::zCZoneVobFarPlane(void)
 0001:0023BEA0       zCZoneVobFarPlane::`scalar deleting destructor'(uint)
 0001:0023BED0       zCZoneVobFarPlane::~zCZoneVobFarPlane(void)
 0001:0023BF40       zCZoneVobFarPlane::GetActiveFarZ(float)
 0001:0023BF90       zCZoneVobFarPlane::GetDefaultZoneClass(void)
 0001:0023BFA0       zCZoneVobFarPlane::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:0023C090       zCZoneVobFarPlane::Archive(zCArchiver &)
 0001:0023C0F0       zCZoneVobFarPlane::Unarchive(zCArchiver &)
 0001:0023C190       zCZoneVobFarPlaneDefault::ThisVobAddedToWorld(zCWorld *)
 0001:0023C1E0       zCZoneVobFarPlaneDefault::Unarchive(zCArchiver &)
 0001:0023C2B0       zCVobSound::zCVobSound(void)
 0001:0023C4F0       zCVobSound::_GetClassDef(void)
 0001:0023C500       zCVobSound::`scalar deleting destructor'(uint)
 0001:0023C530       zCVobSound::~zCVobSound(void)
 0001:0023C640       zCVobSound::GetDebugDescString(void)
 0001:0023C9D0       zCVobSound::EndMovement(int)
 0001:0023CA70       zCVobSound::SetSound(zSTRING const &)
 0001:0023CBB0       zCVobSound::LoadSound(zSTRING const &)
 0001:0023CBF0       zCVobSound::SetSoundVolume(float)
 0001:0023CC00       zCVobSound::SetSoundRadius(float)
 0001:0023CC80       zCVobSound::CalcObstruction(void)
 0001:0023CDE0       zCVobSound::CalcVolumeScale(void)
 0001:0023D040       zCVobSound::StartSound(int)
 0001:0023D1D0       zCVobSound::StopSound(void)
 0001:0023D210       zCVobSound::DoSoundUpdate(float)
 0001:0023D350       zCVobSound::OnTrigger(zCVob *,zCVob *)
 0001:0023D370       zCVobSound::OnUntrigger(zCVob *,zCVob *)
 0001:0023D3C0       zCVobSound::OnMessage(zCEventMessage *,zCVob *)
 0001:0023D3D0       zCVobSound::Archive(zCArchiver &)
 0001:0023D540       zCVobSound::Unarchive(zCArchiver &)
 0001:0023D8D0       zCVobSound::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:0023D9B0       zCVobSound::ThisVobAddedToWorld(zCWorld *)
 0001:0023D9D0       zCVobSound::ThisVobRemovedFromWorld(zCWorld *)
 0001:0023DA30       zCVobSoundDaytime::zCVobSoundDaytime(void)
 0001:0023DA90       zCVobSoundDaytime::`scalar deleting destructor'(uint)
 0001:0023DAC0       zCVobSoundDaytime::~zCVobSoundDaytime(void)
 0001:0023DC40       zCVobSoundDaytime::GetDebugDescString(void)
 0001:0023DDE0       zCVobSoundDaytime::ActivateSection(int)
 0001:0023DEC0       zCVobSoundDaytime::CalcTimeFrac(float,float,float,float &)
 0001:0023DF50       zCVobSoundDaytime::DoSoundUpdate(float)
 0001:0023E270       zCVobSoundDaytime::Archive(zCArchiver &)
 0001:0023E2E0       zCVobSoundDaytime::Unarchive(zCArchiver &)
 0001:0023E3C0       zCZoneReverb::zCZoneReverb(void)
 0001:0023E450       zCZoneReverb::`scalar deleting destructor'(uint)
 0001:0023E480       zCZoneReverb::~zCZoneReverb(void)
 0001:0023E4F0       zCZoneReverb::GetDebugDescString(void)
 0001:0023E670       zCZoneReverb::GetActiveWeight(void)
 0001:0023E6C0       zCZoneReverb::GetDefaultZoneClass(void)
 0001:0023E6D0       zCZoneReverb::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:0023E7E0       zCZoneReverb::Archive(zCArchiver &)
 0001:0023EA50       zCZoneReverb::Unarchive(zCArchiver &)
 0001:0023EB00       zCZoneReverbDefault::ThisVobAddedToWorld(zCWorld *)
 0001:0023EB40       zCZoneReverbDefault::Unarchive(zCArchiver &)
 0001:0023EC10       zCZoneMusic::SetAutochange(int)
 0001:0023EC30       zCZoneMusic::GetAutochange(int *)
 0001:0023EC40       zCArray<zCBBox3DSorterBase::zTBoxSortHandle *>::~zCArray<zCBBox3DSorterBase::zTBoxSortHandle *>(void)
 0001:0023EC60       zCArraySort<zCBBox3DSorterBase::zTNode *>::zCArraySort<zCBBox3DSorterBase::zTNode *>(void)
 0001:0023EC80       zCArraySort<zCBBox3DSorterBase::zTNode *>::~zCArraySort<zCBBox3DSorterBase::zTNode *>(void)
 0001:0023ECA0       zCArraySort<zCBBox3DSorterBase::zTNode *>::QuickSort(void)
 0001:0023ECC0       zCArraySort<void *>::~zCArraySort<void *>(void)
 0001:0023ECE0       zCArraySort<zCBBox3DSorterBase::zTNode *>::AllocDelta(int)
 0001:0023ED40       zCArraySort<void *>::AllocAbs(int)
 0001:0023EDA0       zCArraySort<void *>::InsertEnd(void * const &)
 0001:0023F0F0       oCZoneMusic::_CreateNewInstance(void)
 0001:0023F1B0       oCZoneMusic::operator delete(void *)
 0001:0023F1D0       oCZoneMusic::_GetClassDef(void)
 0001:0023F3D0       oCZoneMusicDefault::_CreateNewInstance(void)
 0001:0023F490       oCZoneMusicDefault::operator delete(void *)
 0001:0023F4B0       oCZoneMusicDefault::_GetClassDef(void)
 0001:0023F4C0       oCZoneMusic::oCZoneMusic(void)
 0001:0023F520       oCZoneMusic::`scalar deleting destructor'(uint)
 0001:0023F550       oCZoneMusic::~oCZoneMusic(void)
 0001:0023F560       oCZoneMusic::ProcessZoneList(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &,zCWorld *)
 0001:00240030       oCZoneMusic::GetDefaultZoneClass(void)
 0001:00240040       oCZoneMusic::GetDebugDescString(void)
 0001:00240060       oCZoneMusic::OnTrigger(zCVob *)
 0001:00240070       oCZoneMusic::OnUntrigger(zCVob *)
 0001:00240080       oCZoneMusic::SetEnabled(int)
 0001:00240090       oCZoneMusic::IsEnabled(void)
 0001:002400A0       oCZoneMusic::SetPriority(int)
 0001:002400B0       oCZoneMusic::GetPriority(void)
 0001:002400C0       oCZoneMusic::SetEllipsoid(int)
 0001:002400D0       oCZoneMusic::IsEllipsoid(void)
 0001:002400E0       oCZoneMusic::SetReverb(float)
 0001:002400F0       oCZoneMusic::GetReverb(void)
 0001:00240100       oCZoneMusic::SetVolume(float)
 0001:00240110       oCZoneMusic::GetVolume(void)
 0001:00240120       oCZoneMusic::SetLoop(int)
 0001:00240130       oCZoneMusic::IsLoop(void)
 0001:00240140       oCZoneMusic::SetDayEntranceDone(int)
 0001:00240150       oCZoneMusic::IsDayEntranceDone(void)
 0001:00240160       oCZoneMusic::SetNightEntranceDone(int)
 0001:00240170       oCZoneMusic::IsNightEntranceDone(void)
 0001:00240180       oCZoneMusic::SetZonetime(int)
 0001:00240190       oCZoneMusic::GetZonetime(int *)
 0001:002401A0       oCZoneMusic::Archive(zCArchiver &)
 0001:00240290       oCZoneMusic::Unarchive(zCArchiver &)
 0001:00240380       oCZoneMusic::GetCamPosWeightElps(void)
 0001:00240530       oCZoneMusic::BuildTempZoneList(oCZoneMusicDefault *,zCArraySort<zCZone *> const &)
 0001:00240660       oCZoneMusic::ReleaseTempZoneList(oCZoneMusicList *)
 0001:00240690       oCZoneMusic::SwitchInAndOutZones(zCArraySort<zCZone *> const &,zCArraySort<zCZone *> const &)
 0001:00240B10       oCZoneMusic::GetMusicZoneByName(oCZoneMusic *,zSTRING)
 0001:00240BA0       oCZoneMusic::GetNewTheme(zSTRING *)
 0001:00240F90       oCZoneMusic::PlayThemeVariation(zSTRING,int)
 0001:00241400       oCZoneMusic::IsDaytime(void)
 0001:00241420       oCZoneMusic::GetHerostatus(void)
 0001:00241430       oCZoneMusicDefault::oCZoneMusicDefault(void)
 0001:00241490       oCZoneMusicDefault::`scalar deleting destructor'(uint)
 0001:002414C0       oCZoneMusicDefault::~oCZoneMusicDefault(void)
 0001:002416F0       zCMusicControler::_CreateNewInstance(void)
 0001:00241750       zCMusicControler::operator delete(void *)
 0001:00241770       zCMusicControler::_GetClassDef(void)
 0001:00241960       zCEventMusicControler::_CreateNewInstance(void)
 0001:00241B00       zCEventMusicControler::operator delete(void *)
 0001:00241B20       zCEventMusicControler::_GetClassDef(void)
 0001:00241B30       zCEventMusicControler::MD_GetNumOfSubTypes(void)
 0001:00241B40       zCEventMusicControler::`scalar deleting destructor'(uint)
 0001:00241B70       zCEventMusicControler::~zCEventMusicControler(void)
 0001:00241BC0       zCEventMusicControler::MD_GetSubTypeString(int)
 0001:00241CC0       zCEventMusicControler::MD_GetTimeBehavior(void)
 0001:00241CD0       zCEventMusicControler::MD_GetMinTime(void)
 0001:00241CE0       zCEventMusicControler::Archive(zCArchiver &)
 0001:00241D10       zCEventMusicControler::Unarchive(zCArchiver &)
 0001:00241D40       zCMusicControler::zCMusicControler(void)
 0001:00241D60       zCMusicControler::`scalar deleting destructor'(uint)
 0001:00241D90       zCMusicControler::~zCMusicControler(void)
 0001:00241DA0       zCMusicControler::OnMessage(zCEventMessage *,zCVob *)
 0001:00241E00       zCMusicControler::ThisVobRemovedFromWorld(zCWorld *)
 0001:00241F10       zCDXTCCache_D3D::zCDXTCCache_D3D(void)
 0001:00241F40       zCDXTCCache_D3D::~zCDXTCCache_D3D(void)
 0001:00241F50       zCDXTCCache_D3D::Lock(int,int,int)
 0001:00242040       zCDXTCCache_D3D::Unlock(int,int,int,IDirectDrawSurface7 *)
 0001:00242170       zCDXTCCache_D3D::ClearCache(void)
 0001:00242470       zCDXTCCache_D3D::XDXTC_CreateSurface(int,int,int,zCDXTCCache_D3D::zD3D_Entry *)
 0001:00242790       XD3D_AppIDDEnumCallbackEx(_GUID *,char *,char *,void *,HMONITOR__ *)
 0001:00242EE0       zCRnd_D3D::XD3D_EnumerateModes(void)
 0001:00242F20       zCRnd_D3D::XD3D_InitPerDX(long,int,int,int,int)
 0001:00243EF0       zCRnd_D3D::XD3D_SetRenderState(_D3DRENDERSTATETYPE,ulong)
 0001:00243FF0       DXTryWarning(long,char const *)
 0001:00244150       zCRnd_D3D::XD3D_InitPort(int,int,int,int,int)
 0001:00246760       zCSurfaceCache_D3D::ResetSurfaceList(void)
 0001:00246BB0       zCRnd_D3D::XD3D_TestCapabilities(void)
 0001:00247330       zCRnd_D3D::XD3D_SetDevice(int,int,int,int,zTRnd_ScreenMode)
 0001:00247820       zCRnd_D3D::XD3D_ClearDevice(void)
 0001:00247D10       zCRnd_D3D::XD3D_TextureRescue(zCTex_D3D *)
 0001:00247F00       zCRnd_D3D::XD3D_TextureRebuild(void)
 0001:00248150       zCRnd_D3D::XD3D_CreateWin(int,int,int)
 0001:002486C0       zCRnd_D3D::XD3D_CloseWin(void)
 0001:00248800       zCRnd_D3D::zCRnd_D3D(void)
 0001:00248FD0       zCRenderer::~zCRenderer(void)
 0001:00248FE0       zCRenderer::DrawLightmapList(zCPolygon * *,int)
 0001:00248FF0       zCRenderer::DrawLineZ(float,float,float,float,float,float,zCOLOR)
 0001:00249000       zCRenderer::DrawPolySimple(zCTexture *,zTRndSimpleVertex *,int)
 0001:00249010       zCRenderer::GetFog(void)
 0001:00249020       zCRenderer::GetRadialFog(void)
 0001:00249030       zCRenderer::GetFogColor(void)
 0001:00249060       zCRenderer::GetFogRange(float &,float &,zTRnd_FogMode &)
 0001:00249070       zCRenderer::GetPolyDrawMode(void)
 0001:00249080       zCRenderer::SetPolyDrawMode(zTRnd_PolyDrawMode const &)
 0001:00249090       zCRenderer::GetSurfaceLost(void)
 0001:002490A0       zCRenderer::SetSurfaceLost(int)
 0001:002490B0       zCRenderer::GetSyncOnAmbientCol(void)
 0001:002490C0       zCRenderer::SetSyncOnAmbientCol(int)
 0001:002490D0       zCRenderer::SetTextureWrapEnabled(int)
 0001:002490E0       zCRenderer::GetTextureWrapEnabled(void)
 0001:002490F0       zCRenderer::SetDitherEnabled(int)
 0001:00249100       zCRenderer::GetDitherEnabled(void)
 0001:00249110       zCRenderer::GetPolySortMode(void)
 0001:00249120       zCRenderer::SetPolySortMode(zTRnd_PolySortMode const &)
 0001:00249130       zCRenderer::GetZBufferWriteEnabled(void)
 0001:00249140       zCRenderer::SetZBufferWriteEnabled(int)
 0001:00249150       zCRenderer::SetZBias(int)
 0001:00249160       zCRenderer::GetZBias(void)
 0001:00249170       zCRenderer::GetZBufferCompare(void)
 0001:00249180       zCRenderer::SetZBufferCompare(zTRnd_ZBufferCmp const &)
 0001:00249190       zCRenderer::GetPixelWriteEnabled(void)
 0001:002491A0       zCRenderer::SetPixelWriteEnabled(int)
 0001:002491B0       zCRenderer::SetAlphaBlendSource(zTRnd_AlphaBlendSource const &)
 0001:002491C0       zCRenderer::GetAlphaBlendSource(void)
 0001:002491D0       zCRenderer::SetAlphaBlendFunc(zTRnd_AlphaBlendFunc const &)
 0001:002491E0       zCRenderer::GetAlphaBlendFunc(void)
 0001:002491F0       zCRenderer::GetAlphaBlendFactor(void)
 0001:00249200       zCRenderer::SetAlphaBlendFactor(float const &)
 0001:00249210       zCRenderer::SetAlphaReference(ulong)
 0001:00249220       zCRenderer::GetAlphaReference(void)
 0001:00249230       zCRenderer::GetCacheAlphaPolys(void)
 0001:00249240       zCRenderer::SetCacheAlphaPolys(int)
 0001:00249250       zCRenderer::GetAlphaLimitReached(void)
 0001:00249260       zCRenderer::AddAlphaPoly(zCPolygon const *)
 0001:00249270       zCRenderer::FlushAlphaPolys(void)
 0001:00249280       zCRenderer::SetRenderMode(zTRnd_RenderMode)
 0001:00249290       zCRenderer::GetRenderMode(void)
 0001:002492A0       zCRenderer::HasCapability(zTRnd_Capability)
 0001:002492B0       zCRenderer::GetGuardBandBorders(float &,float &,float &,float &)
 0001:002492C0       zCRenderer::ResetZTest(void)
 0001:002492D0       zCRenderer::HasPassedZTest(void)
 0001:002492E0       zCRenderer::CreateTextureConvert(void)
 0001:002492F0       zCRenderer::SupportsTextureFormat(zTRnd_TextureFormat)
 0001:00249300       zCRenderer::SupportsTextureFormatHardware(zTRnd_TextureFormat)
 0001:00249310       zCRenderer::GetMaxTextureSize(void)
 0001:00249320       zCRenderer::SetTransform(zTRnd_TrafoType,zMAT4 const &)
 0001:00249330       zCRenderer::SetViewport(int,int,int,int)
 0001:00249340       zCRenderer::SetLight(ulong,zCRenderLight *)
 0001:00249350       zCRenderer::GetMaterial(zCRenderer::zTMaterial &)
 0001:00249360       zCRenderer::SetMaterial(zCRenderer::zTMaterial const &)
 0001:00249370       zCRenderer::SetTexture(ulong,zCTexture *)
 0001:00249380       zCRenderer::SetTextureStageState(ulong,zTRnd_TextureStageState,ulong)
 0001:00249390       zCRenderer::SetAlphaBlendFuncImmed(zTRnd_AlphaBlendFunc)
 0001:002493A0       zCRenderer::SetRenderState(zTRnd_RenderStateType,ulong)
 0001:002493B0       zCRenderer::GetRenderState(zTRnd_RenderStateType)
 0001:002493C0       zCRenderer::AddAlphaSortObject(zCRndAlphaSortObject *)
 0001:002493D0       zCRenderer::RenderAlphaSortList(void)
 0001:002493E0       zCRenderer::`scalar deleting destructor'(uint)
 0001:00249400       zCRnd_D3D::GetRadialFog(void)
 0001:00249420       zCRnd_D3D::SetAlphaReference(ulong)
 0001:00249430       zCRnd_D3D::GetAlphaReference(void)
 0001:00249440       zCRnd_D3D::GetAlphaLimitReached(void)
 0001:00249450       zCRnd_D3D::GetCacheAlphaPolys(void)
 0001:00249460       zCRnd_D3D::SetCacheAlphaPolys(int)
 0001:00249470       zCRnd_D3D::GetSurfaceLost(void)
 0001:00249480       zCRnd_D3D::SetSurfaceLost(int)
 0001:00249490       zCRnd_D3D::GetSyncOnAmbientCol(void)
 0001:002494A0       zCRnd_D3D::SetSyncOnAmbientCol(int)
 0001:002494B0       zCRnd_D3D::Vid_IsLocked(void)
 0001:002494C0       zCRnd_D3D::Vid_EndLfbAccess(void)
 0001:002494D0       zCRnd_D3D::Vid_SetLfbAlpha(int)
 0001:002494E0       zCRnd_D3D::Vid_SetLfbAlphaFunc(zTRnd_AlphaBlendFunc const &)
 0001:00249500       zCRnd_D3D::`scalar deleting destructor'(uint)
 0001:00249520       zD3D_alphaPoly::zD3D_alphaPoly(void)
 0001:00249530       zD3D_alphaPoly::IsAlphaPoly(void)
 0001:00249540       zD3D_alphaPoly::~zD3D_alphaPoly(void)
 0001:00249550       zD3D_alphaPoly::`scalar deleting destructor'(uint)
 0001:00249570       zCRnd_D3D::~zCRnd_D3D(void)
 0001:00249800       zCRnd_D3D::EmergencyExit(void)
 0001:00249C30       zCRnd_D3D::DrawPolySimple(zCTexture *,zTRndSimpleVertex *,int)
 0001:0024A260       zCRnd_D3D::DrawPoly(zCPolygon *)
 0001:0024A470       zCRnd_D3D::XD3D_PolyDrawOnePassVertLight(zCPolygon *)
 0001:0024AA20       zCMaterial::GetAniTexture(void)
 0001:0024AA50       zCRnd_D3D::XD3D_PolyDrawOnePassMultiTex(zCPolygon *)
 0001:0024B110       zCRnd_D3D::XD3D_PolyDrawTwoPassTexture(zCPolygon *)
 0001:0024B840       zCRnd_D3D::XD3D_AlphaTestPoly(zCPolygon *)
 0001:0024B960       zCRnd_D3D::XD3D_AlphaBlendPoly(zCPolygon *,zCMaterial *)
 0001:0024BD60       zCRnd_D3D::AddAlphaPoly(zCPolygon const *)
 0001:0024C400       zCRnd_D3D::FlushAlphaPolys(void)
 0001:0024C4E0       zCRnd_D3D::XD3D_PolyDrawTwoPassLightMap(zCPolygon *)
 0001:0024C660       zCRnd_D3D::DrawLightmapList(zCPolygon * *,int)
 0001:0024C720       zCRnd_D3D::SetPixel(float,float,zCOLOR)
 0001:0024C8E0       zCRnd_D3D::DrawLine(float,float,float,float,zCOLOR)
 0001:0024CA45       __cfltcvt_init_10
 0001:0024CB00       zCRnd_D3D::DrawLineZ(float,float,float,float,float,float,zCOLOR)
 0001:0024CD10       zCRnd_D3D::FlushPolys(void)
 0001:0024CD20       zCRnd_D3D::BeginFrame(void)
 0001:0024CF20       zCRnd_D3D::EndFrame(void)
 0001:0024DD50       zCRnd_D3D::SetTransform(zTRnd_TrafoType,zMAT4 const &)
 0001:0024E100       zCRnd_D3D::SetViewport(int,int,int,int)
 0001:0024E700       zCRnd_D3D::SetLight(ulong,zCRenderLight *)
 0001:0024F3B0       zCRnd_D3D::SetMaterial(zCRenderer::zTMaterial const &)
 0001:0024F4B0       zCRnd_D3D::GetMaterial(zCRenderer::zTMaterial &)
 0001:0024F500       zCRnd_D3D::XD3D_SetTexture(ulong,IDirectDrawSurface7 *)
 0001:0024F560       zCRnd_D3D::SetTexture(ulong,zCTexture *)
 0001:0024F630       zCRnd_D3D::SetTextureStageState(ulong,zTRnd_TextureStageState,ulong)
 0001:0024F6D0       zCRnd_D3D::SetAlphaBlendFuncImmed(zTRnd_AlphaBlendFunc)
 0001:0024F8F0       zCRnd_D3D::SetRenderState(zTRnd_RenderStateType,ulong)
 0001:0024F960       zCRnd_D3D::GetRenderState(zTRnd_RenderStateType)
 0001:0024F990       zCRnd_D3D::AddAlphaSortObject(zCRndAlphaSortObject *)
 0001:0024FA60       zCRnd_D3D::RenderAlphaSortList(void)
 0001:0024FCF0       zD3D_alphaPoly::Draw(int)
 0001:00250720       zCRnd_D3D::XD3D_DrawVertexBufferWire(zCVertexBuffer *,int,int,ushort *,ulong)
 0001:002508D0       zCRnd_D3D::XD3D_DrawVertexBufferFlat(zCVertexBuffer *,int,int,ushort *,ulong)
 0001:002509F0       zCRnd_D3D::DrawVertexBuffer(zCVertexBuffer *,int,int,ushort *,ulong)
 0001:00250D90       zCRnd_D3D::Vid_BeginLfbAccess(void)
 0001:00250DD0       zCRnd_D3D::CreateVertexBuffer(void)
 0001:00250E30       zCVertexBuffer::operator delete(void *)
 0001:00250E80       zCRnd_D3D::SetFog(int)
 0001:00251010       zCRnd_D3D::SetRadialFog(int)
 0001:00251070       zCRnd_D3D::GetFog(void)
 0001:00251080       zCRnd_D3D::SetFogColor(zCOLOR const &)
 0001:002510E0       zCRnd_D3D::SetFogType(int)
 0001:002511D0       zCRnd_D3D::GetFogColor(void)
 0001:002511E0       zCRnd_D3D::SetFogRange(float,float,zTRnd_FogMode)
 0001:002512D0       zCRnd_D3D::GetFogRange(float &,float &,zTRnd_FogMode &)
 0001:00251300       zCRnd_D3D::SetPolyDrawMode(zTRnd_PolyDrawMode const &)
 0001:00251310       zCRnd_D3D::GetPolyDrawMode(void)
 0001:00251320       zCRnd_D3D::SetTextureWrapEnabled(int)
 0001:00251330       zCRnd_D3D::GetTextureWrapEnabled(void)
 0001:00251340       zCRnd_D3D::SetBilerpFilterEnabled(int)
 0001:002513D0       zCRnd_D3D::GetBilerpFilterEnabled(void)
 0001:002513E0       zCRnd_D3D::SetDitherEnabled(int)
 0001:002513F0       zCRnd_D3D::GetDitherEnabled(void)
 0001:00251400       zCRnd_D3D::SetPolySortMode(zTRnd_PolySortMode const &)
 0001:002514D0       zCRnd_D3D::GetPolySortMode(void)
 0001:002514E0       zCRnd_D3D::SetZBufferWriteEnabled(int)
 0001:00251520       zCRnd_D3D::GetZBufferWriteEnabled(void)
 0001:00251530       zCRnd_D3D::SetZBufferCompare(zTRnd_ZBufferCmp const &)
 0001:002515C0       zCRnd_D3D::GetZBufferCompare(void)
 0001:002515D0       zCRnd_D3D::SetPixelWriteEnabled(int)
 0001:002515E0       zCRnd_D3D::GetPixelWriteEnabled(void)
 0001:002515F0       zCRnd_D3D::SetAlphaBlendSource(zTRnd_AlphaBlendSource const &)
 0001:00251600       zCRnd_D3D::GetAlphaBlendSource(void)
 0001:00251610       zCRnd_D3D::SetAlphaBlendFunc(zTRnd_AlphaBlendFunc const &)
 0001:00251620       zCRnd_D3D::GetAlphaBlendFunc(void)
 0001:00251630       zCRnd_D3D::SetAlphaBlendFactor(float const &)
 0001:00251640       zCRnd_D3D::GetAlphaBlendFactor(void)
 0001:00251650       zCRnd_D3D::SupportAlphaTesting(void)
 0001:00251660       zCRnd_D3D::SetRenderMode(zTRnd_RenderMode)
 0001:00251840       zCRnd_D3D::GetRenderMode(void)
 0001:00251850       zCRnd_D3D::HasCapability(zTRnd_Capability)
 0001:002519B0       zCRnd_D3D::ResetZTest(void)
 0001:002519C0       zCRnd_D3D::HasPassedZTest(void)
 0001:002519D0       zCRnd_D3D::GetZBias(void)
 0001:002519E0       zCRnd_D3D::SetZBias(int)
 0001:00251A30       zCRnd_D3D::GetTexturePortableBinaryVersion(void)
 0001:00251A40       zCRnd_D3D::GetGuardBandBorders(float &,float &,float &,float &)
 0001:00251AB0       zCRnd_D3D::GetStatistics(zTRnd_Stats &)
 0001:00251B00       zCRnd_D3D::ResetStatistics(void)
 0001:00251B50       zCSurfaceCache_D3D::zCSurfaceCache_D3D(void)
 0001:00251B80       zCSurfaceCache_D3D::~zCSurfaceCache_D3D(void)
 0001:00251B90       zCSurfaceCache_D3D::CacheInSurface(IDirectDrawSurface7 *,zCSurfaceCache_D3D::zCSlotIndex *)
 0001:00251F40       zCSurfaceCache_D3D::CacheOutSurface(zCSurfaceCache_D3D::zCSlotIndex *)
 0001:002522D0       zCSurfaceCache_D3D::ClearCache(void)
 0001:002523D0       zCSurfaceCache_D3D::XSC_ClearSlot(zCSurfaceCache_D3D::zD3D_SlotHeader *)
 0001:00252500       zCSurfaceCache_D3D::XSC_KillLastSurfaceInSlot(zCSurfaceCache_D3D::zD3D_SlotHeader *)
 0001:00252650       zCRnd_D3D::CreateTexture(void)
 0001:002526B0       zCTexture::operator delete(void *)
 0001:002526D0       zCRnd_D3D::GetTotalTextureMem(void)
 0001:002526E0       zCRnd_D3D::SupportsTextureFormat(zTRnd_TextureFormat)
 0001:00252770       zCRnd_D3D::SupportsTextureFormatHardware(zTRnd_TextureFormat)
 0001:002527C0       zCRnd_D3D::GetMaxTextureSize(void)
 0001:002527D0       zCRnd_D3D::CreateTextureConvert(void)
 0001:00252830       zCTex_D3D::zCTex_D3D(void)
 0001:00252900       zCTex_D3D::`scalar deleting destructor'(uint)
 0001:00252930       zCTex_D3D::~zCTex_D3D(void)
 0001:00252990       zCTex_D3D::ReleaseData(void)
 0001:00252AA0       zCTex_D3D::Lock(int)
 0001:00252AF0       zCTex_D3D::Unlock(void)
 0001:00252D70       zCTex_D3D::GetTextureInfo(void)
 0001:00252DC0       zCTex_D3D::SetTextureInfo(zCTextureInfo const &)
 0001:00252F90       zCTex_D3D::GetPixelSize(int &,int &)
 0001:002530A0       zCTex_D3D::CopyTextureDataTo(int,void *,int)
 0001:002535E0       zCTex_D3D::CopyPaletteDataTo(void *)
 0001:002536F0       zCTex_D3D::GetPaletteBuffer(void)
 0001:002537F0       zCTex_D3D::GetTextureBuffer(int,void * &,int &)
 0001:002542A0       zCTex_D3D::XTEX_BuildSurfaces(int)
 0001:00255120       zCTex_D3D::InsertTexture(int,int)
 0001:00255370       zCTex_D3D::PreloadTexture(void)
 0001:002553A0       zCTex_D3D::SetTexture(int)
 0001:00255590       zCTex_D3D::RemoveTexture(void)
 0001:00255710       zCTex_D3D::RescueTexture(zD3D_savedTexture *)
 0001:00255750       zCTex_D3D::RebuildTexture(zD3D_savedTexture *)
 0001:00255C10       zCVertexBuffer_D3D::zCVertexBuffer_D3D(void)
 0001:00255D80       zCVertexBuffer_D3D::IsLocked(void)
 0001:00255D90       zCVertexBuffer_D3D::`scalar deleting destructor'(uint)
 0001:00255DC0       zCVertexBuffer_D3D::~zCVertexBuffer_D3D(void)
 0001:00255E70       zCVertexBuffer_D3D::Create(ulong,ulong,ulong)
 0001:00256010       zCVertexBuffer_D3D::Destroy(void)
 0001:002560E0       zCVertexBuffer_D3D::Lock(ulong)
 0001:002563E0       zCVertexBuffer_D3D::Unlock(void)
 0001:00256430       zCVertexBuffer_D3D::Optimize(void)
 0001:00256480       zCVertexBuffer_D3D::SetPrimitiveType(zTVBufferPrimitiveType)
 0001:002564A0       zCVertexBuffer_D3D::GetPrimitiveType(void)
 0001:002564B0       zCVertexBuffer_D3D::GetVertexFormat(void)
 0001:002564C0       zCVertexBuffer_D3D::GetVertexType(void)
 0001:002564D0       zCVertexBuffer_D3D::SetIndexListSize(ulong)
 0001:00256560       zCVertexBuffer_D3D::GetIndexListSize(void)
 0001:00256570       zCVertexBuffer_D3D::GetIndexListPtr(void)
 0001:00256590       zCVertexBuffer_D3D::SetIndexList(zCArray<ushort> const &)
 0001:00256670       zCRnd_D3D::Vid_Blit(int,tagRECT *,tagRECT *)
 0001:00256950       zCRnd_D3D::Vid_Lock(zTRndSurfaceDesc &)
 0001:00256A00       zCRnd_D3D::Vid_Unlock(void)
 0001:00256A40       zCRnd_D3D::Vid_GetFrontBufferCopy(zCTextureConvert &)
 0001:00256E20       zCRnd_D3D::Vid_Clear(zCOLOR &,int)
 0001:00256EA0       zCRnd_D3D::Vid_GetNumDevices(void)
 0001:00256EB0       zCRnd_D3D::Vid_GetActiveDeviceNr(void)
 0001:00256EC0       zCRnd_D3D::Vid_SetDevice(int)
 0001:00257190       zCRnd_D3D::Vid_GetDeviceInfo(zTRnd_DeviceInfo &,int)
 0001:002573B0       zCRnd_D3D::Vid_GetNumModes(void)
 0001:002573C0       zCRnd_D3D::Vid_GetModeInfo(zTRnd_VidModeInfo &,int)
 0001:00257600       zCRnd_D3D::Vid_GetActiveModeNr(void)
 0001:00257610       zCRnd_D3D::Vid_SetMode(int,HWND__ * *)
 0001:00257850       zCRnd_D3D::XD3D_SetMode(int,int,int)
 0001:00257BA0       zCRnd_D3D::Vid_SetScreenMode(zTRnd_ScreenMode)
 0001:00257FB0       zCRnd_D3D::Vid_GetScreenMode(void)
 0001:00257FC0       zCRnd_D3D::Vid_SetGammaCorrection(float,float,float)
 0001:00258610       zCRnd_D3D::Vid_GetGammaCorrection(void)
 0001:00258650       FreeTexConvert(void)
 0001:00258670       ResizeTexture(int *,int,int,void *,void *,ulong)
 0001:002588E0       zCTexConGeneric::ConvertTextureFormat(zCTextureInfo const &)
 0001:0025A1C0       zCTexConGeneric::SetTextureInfo(zCTextureInfo const &)
 0001:0025A270       zCTexConGeneric::GetTextureInfo(void)
 0001:0025A290       zCTexConGeneric::GetPaletteBuffer(void)
 0001:0025A2B0       zCTexConGeneric::GetTextureBuffer(int,void * &,int &)
 0001:0025A480       zCTexConGeneric::CopyTextureDataTo(int,void *,int)
 0001:0025A6B0       zCTexConGeneric::CopyPaletteDataTo(void *)
 0001:0025A6E0       zCTexConGeneric::GetAverageColor(void)
 0001:0025A6F0       zCTexConGeneric::HasAlpha(void)
 0001:0025A740       zCTexConGeneric::zCTexConGeneric(void)
 0001:0025A7A0       zCTexConGeneric::SetDetailTextureMode(int)
 0001:0025A7B0       zCTexConGeneric::`scalar deleting destructor'(uint)
 0001:0025A7D0       zCTexConGeneric::~zCTexConGeneric(void)
 0001:0025A830       zCTextureConvert::~zCTextureConvert(void)
 0001:0025A840       zCTexConGeneric::Lock(int)
 0001:0025A860       zCTexConGeneric::Unlock(void)
 0001:0025AA60       tcConvertTexture(RGBPIXEL *,uchar *,uchar *,int)
 0001:0025AD30       tcCreatePalette(RGBPIXEL *,uchar *,int)
 0001:0025C060       oCCollObjectCharacter::_CreateNewInstance(void)
 0001:0025C0E0       oCCollObjectCharacter::GetCollObjClass(void)
 0001:0025C0F0       oCCollObjectCharacter::oCCollObjectCharacter(void)
 0001:0025C120       oCCollObjectCharacter::`scalar deleting destructor'(uint)
 0001:0025C140       oCCollObjectCharacter::~oCCollObjectCharacter(void)
 0001:0025C150       oCCollObjectCharacter::TurnSpeed(void)
 0001:0025C190       oCCollObjectCharacter::IsDead(void)
 0001:0025C1C0       oCCollObjectCharacter::PushAround(zVEC3 const &)
 0001:0025C1F0       oCCollObjectCharacter::DontLetHimComeNearer(zCVob const *)
 0001:0025C220       oCCollObjectCharacter::GetPrimitiveCC(void)
 0001:0025C260       oCCollObjectCharacter::S_RegisterCollisionTestFuncs(void)
 0001:0025C2F0       zAccountInit(void)
 0001:0025C4A0       Hash(zSTRING const &)
 0001:0025C510       zCAccount::Add(void const *,char const *,int,int)
 0001:0025C590       zCAccountInfo::Add(char const *,int,int)
 0001:0025C7C0       zTIndexA::~zTIndexA(void)
 0001:0025C810       zTIndexB::~zTIndexB(void)
 0001:0025C860       zCAccount::Sum(void const *)
 0001:0025C890       zCAccountInfo::SumUp(void)
 0001:0025CCB0       zCAccount::Clear(void const *)
 0001:0025CCE0       zCAccount::Begin(void)
 0001:0025CCF0       zCAccount::End(void)
 0001:0025CD00       zCAccount::IsActive(void)
 0001:0025CD10       zCClassDef::ObjectCreated(zCObject *,zCClassDef *,char const *,int)
 0001:0025CDD0       zCSparseArray<void const *,zCAccountInfo>::zCSparseArray<void const *,zCAccountInfo>(ulong)
 0001:0025CE30       zCSparseArray<void const *,zCAccountInfo>::~zCSparseArray<void const *,zCAccountInfo>(void)
 0001:0025CE80       zCSparseArray<void const *,zCAccountInfo>::SizeIndex(void)
 0001:0025CE90       zCSparseArray<void const *,zCAccountInfo>::SizeData(void)
 0001:0025CEA0       zCSparseArray<void const *,zCAccountInfo>::SizeAll(void)
 0001:0025CEB0       zCSparseArray<void const *,zCAccountInfo>::IndexPtr(ulong)
 0001:0025CEC0       zCSparseArray<void const *,zCAccountInfo>::DataPtr(ulong)
 0001:0025CED0       zCSparseArray<void const *,zCAccountInfo>::ManDatPtr(ulong)
 0001:0025CEE0       zCSparseArray<void const *,zCAccountInfo>::IndexIsEqual(void const *,void const *)
 0001:0025CF00       zCSparseArray<void const *,zCAccountInfo>::CopyIndex(void *,void const *)
 0001:0025CF20       zCSparseArray<void const *,zCAccountInfo>::DestructIndex(void *)
 0001:0025CF30       zCSparseArray<void const *,zCAccountInfo>::Hash(void const *,ulong &,ulong &)
 0001:0025CF50       zCSparseArray<void const *,zCAccountInfo>::ConstructData(void *)
 0001:0025CFE0       zCSparseArray<zTIndexA,int>::~zCSparseArray<zTIndexA,int>(void)
 0001:0025D030       zCSparseArray<zTIndexA,int>::SizeIndex(void)
 0001:0025D040       zCSparseArray<zTIndexA,int>::SizeData(void)
 0001:0025D050       zCSparseArray<zTIndexA,int>::SizeAll(void)
 0001:0025D060       zCSparseArray<zTIndexA,int>::IndexPtr(ulong)
 0001:0025D070       zCSparseArray<zTIndexA,int>::DataPtr(ulong)
 0001:0025D080       zCSparseArray<zTIndexA,int>::ManDatPtr(ulong)
 0001:0025D090       zCSparseArray<zTIndexA,int>::IndexIsEqual(void const *,void const *)
 0001:0025D100       zCSparseArray<zTIndexA,int>::CopyIndex(void *,void const *)
 0001:0025D170       zCSparseArray<zTIndexA,int>::DestructIndex(void *)
 0001:0025D180       zCSparseArray<zTIndexA,int>::Hash(void const *,ulong &,ulong &)
 0001:0025D1F0       zCSparseArray<zTIndexA,int>::ConstructData(void *)
 0001:0025D200       zCSparseArray<zTIndexA,int>::DestructData(void *)
 0001:0025D210       zCSparseArray<zTIndexB,int>::SizeIndex(void)
 0001:0025D220       zCSparseArray<zTIndexB,int>::SizeData(void)
 0001:0025D230       zCSparseArray<zTIndexB,int>::SizeAll(void)
 0001:0025D240       zCSparseArray<zTIndexB,int>::IndexPtr(ulong)
 0001:0025D250       zCSparseArray<zTIndexB,int>::DataPtr(ulong)
 0001:0025D260       zCSparseArray<zTIndexB,int>::ManDatPtr(ulong)
 0001:0025D270       zCSparseArray<zTIndexB,int>::IndexIsEqual(void const *,void const *)
 0001:0025D2F0       zCSparseArray<zTIndexB,int>::CopyIndex(void *,void const *)
 0001:0025D370       zCSparseArray<zTIndexB,int>::DestructIndex(void *)
 0001:0025D380       zCSparseArray<zTIndexB,int>::Hash(void const *,ulong &,ulong &)
 0001:0025D400       zCSparseArray<zTIndexB,int>::ConstructData(void *)
 0001:0025D410       zCSparseArray<zTIndexB,int>::DestructData(void *)
 0001:0025D420       zCSparseArray<void const *,zCAccountInfo>::DestructData(void *)
 0001:0025D430       zCSparseArray<zTIndexA,int>::`vector deleting destructor'(uint)
 0001:0025D450       zCSparseArray<zTIndexB,int>::`vector deleting destructor'(uint)
 0001:0025D470       zCSparseArray<zTIndexB,int>::~zCSparseArray<zTIndexB,int>(void)
 0001:0025D4C0       zCSparseArray<void const *,zCAccountInfo>::`scalar deleting destructor'(uint)
 0001:0025D4E0       zCAccountInfo::~zCAccountInfo(void)
 0001:0025D5A0       ApplyDamages(ulong,int *,int &)
 0001:0025DA40       oCDocumentManager::GetDocumentManager(void)
 0001:0025DA90       oCDocumentManager::operator=(oCDocumentManager const &)
 0001:0025DAA0       oCDocumentManager::oCDocumentManager(oCDocumentManager const &)
 0001:0025DAC0       oCDocumentManager::oCDocumentManager(void)
 0001:0025DC30       zCViewDialog::operator delete(void *)
 0001:0025DC50       oCDocumentManager::~oCDocumentManager(void)
 0001:0025DCF0       zCListSort<oCViewDocument>::`scalar deleting destructor'(uint)
 0001:0025DD20       oCDocumentManager::CreateDocument(void)
 0001:0025DEF0       oCDocumentManager::CreateMap(void)
 0001:0025E0C0       oCDocumentManager::SetPages(int,int)
 0001:0025E100       oCDocumentManager::SetPage(int,int,zSTRING &,int)
 0001:0025E140       oCDocumentManager::SetFont(int,int,zSTRING &)
 0001:0025E180       oCDocumentManager::SetMargins(int,int,zCPosition &,zCPosition &,int)
 0001:0025E1D0       oCDocumentManager::SetLevel(int,zSTRING const &)
 0001:0025E220       oCDocumentManager::SetLevelCoords(int,int,int,int,int)
 0001:0025E280       oCDocumentManager::PrintLine(int,int,zSTRING &)
 0001:0025E2C0       oCDocumentManager::PrintLines(int,int,zSTRING &)
 0001:0025E300       oCDocumentManager::Show(int)
 0001:0025E3B0       oCDocumentManager::GetNextAvailableID(void)
 0001:0025E3D0       oCDocumentManager::GetDocumentView(int)
 0001:0025E400       oCDocumentManager::UpdateMap(int)
 0001:0025E450       oCDocumentManager::HandleEvent(int)
 0001:0025E510       zCListSort<oCViewDocument>::DeleteListDatas(void)
 0001:0025E790       oCInformationManager::GetInformationManager(void)
 0001:0025E7E0       oCInformationManager::UpdateViewSettings(void)
 0001:0025E930       oCInformationManager::oCInformationManager(void)
 0001:0025ED90       zCViewDialogChoice::operator delete(void *)
 0001:0025EDB0       oCViewDialogTrade::operator delete(void *)
 0001:0025EDD0       oCInformationManager::~oCInformationManager(void)
 0001:0025EF20       oCInformationManager::ToggleStatus(void)
 0001:0025EF70       oCInformationManager::PrintStatus(void)
 0001:0025F9D0       oCInformationManager::HasFinished(void)
 0001:0025F9E0       oCInformationManager::WaitingForEnd(void)
 0001:0025F9F0       oCInformationManager::SetNpc(oCNpc *)
 0001:0025FBB0       oCInformationManager::Update(void)
 0001:00260240       oCInformationManager::Exit(void)
 0001:002603A0       oCInformationManager::CameraStart(void)
 0001:00260520       oCInformationManager::CameraStop(void)
 0001:00260590       oCInformationManager::CameraRefresh(void)
 0001:002605B0       oCInformationManager::ProcessImportant(void)
 0001:002607B0       oCInformationManager::ProcessNextImportant(void)
 0001:00260990       oCInformationManager::InfoWaitForEnd(void)
 0001:00260AA0       oCInformationManager::CollectInfos(void)
 0001:00260CD0       oCInformationManager::CollectChoices(oCInfo *)
 0001:00260DB0       oCInformationManager::OnImportantBegin(void)
 0001:00260E90       oCInformationManager::OnImportantEnd(void)
 0001:00260FF0       oCInformationManager::OnInfoBegin(void)
 0001:002610B0       oCInformationManager::OnInfo(int)
 0001:00261290       oCInformationManager::OnInfo(oCInfo *)
 0001:00261570       oCInformationManager::OnChoiceBegin(void)
 0001:00261780       oCInformationManager::OnChoice(int)
 0001:002619A0       oCInformationManager::OnChoice(oCInfoChoice *)
 0001:00261B90       oCInformationManager::OnChoiceEnd(void)
 0001:00261CF0       oCInformationManager::OnInfoEnd(void)
 0001:00261E60       oCInformationManager::OnTradeBegin(void)
 0001:00261F60       oCInformationManager::OnTradeEnd(void)
 0001:002620D0       oCInformationManager::OnExit(void)
 0001:002621A0       oCInformationManager::OnTermination(void)
 0001:00262320       oCMobMsg::operator delete(void *)
 0001:00262370       oCLogManager::GetLogManager(void)
 0001:002623C0       oCLogManager::operator=(oCLogManager const &)
 0001:002623D0       oCLogManager::oCLogManager(oCLogManager const &)
 0001:002623F0       oCLogManager::oCLogManager(void)
 0001:00262400       oCLogManager::~oCLogManager(void)
 0001:002624E0       oCLogManager::Clear(void)
 0001:00262550       oCLogTopic::~oCLogTopic(void)
 0001:00262640       oCLogManager::Archive(zCArchiver &)
 0001:002626B0       oCLogManager::Unarchive(zCArchiver &)
 0001:00262870       oCLogTopic::AddEntry(zSTRING const &)
 0001:00262A80       oCLogTopic::Archive(zCArchiver &)
 0001:00262B40       oCLogTopic::Unarchive(zCArchiver &)
 0001:00262D10       oCLogEntry::Archive(zCArchiver &)
 0001:00262D30       oCLogEntry::Unarchive(zCArchiver &)
 0001:00262D50       zCList<oCLogEntry>::~zCList<oCLogEntry>(void)
 0001:00262D80       zCList<oCLogEntry>::DeleteListDatas(void)
 0001:00262DF0       oCLogEntry::~oCLogEntry(void)
 0001:00262E40       zCList<oCLogTopic>::~zCList<oCLogTopic>(void)
 0001:00262E70       zCList<oCLogTopic>::DeleteListDatas(void)
 0001:00262EE0       zCList<oCLogEntry>::`scalar deleting destructor'(uint)
 0001:00262F20       zCList<oCLogTopic>::`scalar deleting destructor'(uint)
 0001:00263170       oCNpc::oSDamageDescriptor::Release(void)
 0001:002631C0       oCNpc::oSDamageDescriptor::SetVisualFX(oCVisualFX *)
 0001:00263210       oCNpc::oSDamageDescriptor::SetFXHit(oCVisualFX *)
 0001:00263250       oCNpc::oSDamageDescriptor::oSDamageDescriptor(oCNpc::oSDamageDescriptor const &)
 0001:00263310       oCNpc::oSDamageDescriptor::operator=(oCNpc::oSDamageDescriptor const &)
 0001:002633C0       oCNpc::EnableDamageDebugOutput(int)
 0001:002633D0       oCNpc::NotifyDamageToSpy(zSTRING &)
 0001:00263490       oCNpc::InitDamage(void)
 0001:00263660       oCNpc::EV_DamageOnce(oCMsgDamage *)
 0001:002639A0       oCNpc::EV_DamagePerFrame(oCMsgDamage *)
 0001:002650E0       oCNpc::OnDamage(oCNpc::oSDamageDescriptor &)
 0001:00265610       oCNpc::OnDamage_Hit(oCNpc::oSDamageDescriptor &)
 0001:0026BF30       oCNpc::OnDamage_Condition(oCNpc::oSDamageDescriptor &)
 0001:0026D220       oCNpc::OnDamage_Script(oCNpc::oSDamageDescriptor &)
 0001:0026DAF0       oCNpc::OnDamage_Effects(oCNpc::oSDamageDescriptor &)
 0001:0026DE40       oCNpc::OnDamage_Effects_Start(oCNpc::oSDamageDescriptor &)
 0001:00273210       zSTRING::IsEmpty(void)
 0001:00273220       operator==(zSTRING const &,zSTRING const &)
 0001:00273290       zCEventMessage::GetSubType(void)
 0001:002732A0       zCVob::GetHomeWorld(void)
 0001:002732B0       oCMsgDamage::operator new(uint)
 0001:002732D0       oCVisualFX::operator new(uint)
 0001:002732F0       oCVisualFX::GetName(void)
 0001:00273300       oCNpc::OnDamage_Effects_End(oCNpc::oSDamageDescriptor &)
 0001:00274BD0       oCNpc::OnDamage_Anim(oCNpc::oSDamageDescriptor &)
 0001:002797B0       zSTRING::operator+=(char const *)
 0001:00279890       oCAniCtrl_Human::GetActionMode(void)
 0001:002798A0       oCNpc::OnDamage_Sound(oCNpc::oSDamageDescriptor &)
 0001:00279BE0       oCNpc::OnDamage_Events(oCNpc::oSDamageDescriptor &)
 0001:0027A7E0       oCNpc::OnDamage_State(oCNpc::oSDamageDescriptor &)
 0001:0027A860       oCNpc::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:0027AD20       oCNpc::HasFlag(ulong,ulong)
 0001:0027AD40       zDYNAMIC_CAST(zCObject const *)
 0001:0027B170       oCNpc::oSActionBlock::InitBlock(zCParser *,int,int)
 0001:0027B390       oCNpc::oSActionBlock::GetOwnAction(int)
 0001:0027B3C0       oCNpc::oSFightAI::Init(zCParser *,int)
 0001:0027B3F0       oCNpc::oSFightAI::GetOwnAction(int)
 0001:0027B420       oCNpc::InitFightAI(void)
 0001:0027B770       oCNpc::ExitFightAI(void)
 0001:0027B7D0       oCNpc::IsNpcBetweenMeAndTarget(zCVob *)
 0001:0027B9A0       oCNpc::IsInDoubleFightRange(zCVob *,float &)
 0001:0027BB60       oCNpc::IsInFightRange(zCVob *,float &)
 0001:0027BD80       oCNpc::GetFightRange(void)
 0001:0027BDB0       oCNpc::SetFightRangeBase(int)
 0001:0027BDC0       oCNpc::GetFightRangeBase(void)
 0001:0027BDD0       oCNpc::GetFightRangeDynamic(void)
 0001:0027BDF0       oCNpc::GetFightRangeFist(void)
 0001:0027BE00       oCNpc::GetFightRangeG(void)
 0001:0027BE10       oCNpc::SetFightRangeFist(int)
 0001:0027BE20       oCNpc::SetFightRangeG(int)
 0001:0027BE30       oCNpc::GetFightActionFromTable(int)
 0001:0027BE70       oCNpc::GetCurrentFightMove(void)
 0001:0027C1F0       GetFightMoveStringFromConstant(int)
 0001:0027C490       GetSituationStringFromConstant(int)
 0001:0027C680       oCNpc::FindNextFightAction(void)
 0001:0027D350       oCNpc::ThinkNextFightAction(void)
 0001:0027DE80       oCMsgAttack::operator delete(void *)
 0001:0027DEA0       oCMsgMagic::operator delete(void *)
 0001:0027DEC0       oCNpc::FightAttackMelee(int)
 0001:0027E700       oCNpc::FightAttackBow(void)
 0001:0027E7E0       oCNpc::EV_AttackBow(oCMsgAttack *)
 0001:0027EA60       oCNpc::FightAttackMagic(void)
 0001:0027EB10       oCNpc::EV_AttackMagic(oCMsgAttack *)
 0001:0027EB20       oCNpc::EV_CastSpell(oCMsgMagic *)
 0001:0027EE10       oCNpc::CheckRunningFightAnis(void)
 0001:0027EFC0       oCNpc::GotoFightPosition(void)
 0001:0027F0B0       oCNpc::Fighting(void)
 0001:0027F270       oCNpc::GetSpellItem(int)
 0001:0027F2E0       oCNpc::ReadySpell(int,int)
 0001:0027F480       oCNpc::UnreadySpell(void)
 0001:0027F510       oCNpc::HasRangedWeaponAndAmmo(void)
 0001:0027F5C0       oCNpc::CanDrawWeapon(void)
 0001:0027F620       zCArray<oCNpc::oSFightAI *>::InsertEnd(oCNpc::oSFightAI * const &)
 0001:0027F900       oCNpc::CanDive(void)
 0001:0027F930       oCNpc::CanSwim(void)
 0001:0027F960       oCNpc::GetClimbRange(void)
 0001:0027F970       oCNpc::GetTurnSpeed(void)
 0001:0027F990       oCNpc::GetJumpRange(void)
 0001:0027F9A0       oCNpc::RbtChooseChasmAction(zVEC3 const &,zVEC3 const &)
 0001:0027FB30       oCNpc::CanGo(float,zVEC3 &)
 0001:002801C0       oCNpc::GetAngle(zCVob *)
 0001:002802B0       oCNpc::GetAngles(zVEC3 &,float &,float &)
 0001:00280620       Alg_CalcAziElevUnit(zVEC3 const &,float &,float &)
 0001:00280680       oCNpc::GetAngles(zCVob *,float &,float &)
 0001:002806C0       oCNpc::GetDistanceToPos2(zVEC3 &,int)
 0001:00280790       oCNpc::GetFallDownHeight(void)
 0001:002807B0       oCNpc::GetRbtObstacleVob(void)
 0001:002807C0       oCNpc::GetVecNormalFromBBox(zCVob *,zVEC3 &)
 0001:00280D50       oCNpc::SetFallDownDamage(int)
 0001:00280D60       oCNpc::SetFallDownHeight(float)
 0001:00280D70       oCNpc::SetRoute(zCRoute *)
 0001:00280DA0       oCNpc::CreateFallDamage(float)
 0001:002810C0       oCNpc::Fleeing(void)
 0001:002810D0       oCNpc::ThinkNextFleeAction(void)
 0001:002814C0       oCNpc::Follow(void)
 0001:002814D0       oCNpc::ResetPos(zVEC3 &)
 0001:002817D0       oCNpc::EmergencyResetPos(zVEC3 &)
 0001:00281B40       oCNpc::StandUp(int,int)
 0001:00282000       oCNpc::Turn(zVEC3 &)
 0001:00282120       oCNpc::Turning(zVEC3 &)
 0001:00282210       oCNpc::AI_Flee(oCNpc *)
 0001:00282220       oCNpc::AI_Follow(oCNpc *)
 0001:00282230       oCNpc::EV_AlignToFP(oCMsgMovement *)
 0001:00282480       oCNpc::EV_CanSeeNpc(oCMsgMovement *)
 0001:002824D0       oCNpc::EV_GoRoute(oCMsgMovement *)
 0001:00282C20       oCNpc::EV_Jump(oCMsgMovement *)
 0001:00282C80       oCNpc::EV_RobustTrace(oCMsgMovement *)
 0001:00282CE0       oCNpc::EV_StandUp(oCMsgMovement *)
 0001:00282DE0       oCNpc::EV_Strafe(oCMsgMovement *)
 0001:00283BF0       oCNpc::EV_WhirlAround(oCMsgMovement *)
 0001:00284290       oCNpc::EV_Dodge(oCMsgMovement *)
 0001:002844C0       oCNpc::EV_GotoPos(oCMsgMovement *)
 0001:00284580       oCNpc::EV_GotoVob(oCMsgMovement *)
 0001:00284700       oCNpc::EV_GotoFP(oCMsgMovement *)
 0001:002849F0       oCNpc::EV_SetWalkMode(oCMsgMovement *)
 0001:00284DE0       oCNpc::EV_Turn(oCMsgMovement *)
 0001:00284EC0       oCNpc::EV_TurnAway(oCMsgMovement *)
 0001:00285070       oCNpc::EV_TurnToPos(oCMsgMovement *)
 0001:00285160       oCNpc::EV_TurnToVob(oCMsgMovement *)
 0001:002853F0       oCNpc::ForceRotation(float)
 0001:00285430       oCNpc::RbtCheckForSolution(zVEC3,zVEC3)
 0001:00285560       oCNpc::RbtReset(void)
 0001:00285670       oCNpc::RbtInit(zVEC3 &,zCVob *)
 0001:00285690       oCNpc::RbtUpdate(zVEC3 &,zCVob *)
 0001:00285880       oCNpc::RbtMoveToExactPosition(void)
 0001:00285960       oCNpc::RobustTrace(void)
 0001:00285CA0       oCNpc::RbtCalcTurnDirection(zVEC3 const &,float,int)
 0001:00286080       oCNpc::RbtIsObjectObstacle(zCVob *,zVEC3 const &,zVEC3 const &,zVEC3 &)
 0001:002862E0       oCNpc::RbtGetObstacle(zVEC3 const &,zVEC3 const &,zCVob * &,zVEC3 &)
 0001:00286490       oCNpc::RbtGetSmallObstacle(zVEC3 const &,zCVob * &,zVEC3 &)
 0001:002865E0       oCNpc::RbtAvoidObstacles(void)
 0001:00286C80       oCNpc::RbtIsDirectionValid(zVEC3 const &)
 0001:00286D00       oCNpc::RbtInsertDirection(zVEC3)
 0001:00286F60       oCNpc::RbtCheckLastDirection(float)
 0001:00287240       oCNpc::RbtCheckIfTargetVisible(void)
 0001:00287450       oCNpc::RbtGotoFollowPosition(void)
 0001:00287670       oCNpc::CanStrafe(int,int)
 0001:002878D0       oCNpc::CanJumpBack(int)
 0001:00287A70       oCNpc::SetWalkStopChasm(int)
 0001:00287AB0       oCNpc::GetWalkStopChasm(void)
 0001:00287AE0       zCArray<oCNpc::oSDirectionInfo *>::Remove(oCNpc::oSDirectionInfo * const &)
 0001:00287F30       oCViewDialogInventory::_CreateNewInstance(void)
 0001:00287FD0       zCViewDialog::IsActive(void)
 0001:00287FE0       zCViewDialog::HasFinished(void)
 0001:00287FF0       oCViewDialogInventory::operator delete(void *)
 0001:00288010       oCViewDialogInventory::_GetClassDef(void)
 0001:00288020       oCViewDialogInventory::oCViewDialogInventory(void)
 0001:00288060       oCViewDialogInventory::`scalar deleting destructor'(uint)
 0001:00288090       oCViewDialogInventory::~oCViewDialogInventory(void)
 0001:002880B0       oCViewDialogInventory::Activate(int)
 0001:002880D0       oCViewDialogInventory::SetInventory(oCNpcInventory *)
 0001:00288100       oCViewDialogInventory::SetAlignment(oCViewDialogInventory::oEInventoryAlignment)
 0001:00288110       oCViewDialogInventory::GetSelectedItem(void)
 0001:00288130       oCViewDialogInventory::GetSelectedItemCount(void)
 0001:00288150       oCViewDialogInventory::RemoveSelectedItem(void)
 0001:002881E0       oCViewDialogInventory::InsertItem(oCItem *)
 0001:00288200       oCViewDialogInventory::CanHandleLeft(void)
 0001:00288210       oCViewDialogInventory::CanHandleRight(void)
 0001:00288220       oCViewDialogInventory::HandleEvent(int)
 0001:00288270       oCViewDialogInventory::StartSelection(void)
 0001:002882D0       oCViewDialogInventory::StopSelection(void)
 0001:00288520       oCViewDialogItem::_CreateNewInstance(void)
 0001:002885B0       zCViewDialog::Activate(int)
 0001:002885C0       zCViewDialog::StartSelection(void)
 0001:002885D0       zCViewDialog::StopSelection(void)
 0001:002885E0       oCViewDialogItem::operator delete(void *)
 0001:00288600       oCViewDialogItem::_GetClassDef(void)
 0001:00288610       oCViewDialogItem::oCViewDialogItem(void)
 0001:00288640       oCViewDialogItem::`scalar deleting destructor'(uint)
 0001:00288670       oCViewDialogItem::~oCViewDialogItem(void)
 0001:00288700       oCViewDialogItem::SetItem(oCItem *)
 0001:00288740       oCViewDialogItem::Blit(void)
 0001:00288970       oCViewDialogItemContainer::_CreateNewInstance(void)
 0001:00288A20       oCViewDialogItemContainer::operator delete(void *)
 0001:00288A40       oCViewDialogItemContainer::_GetClassDef(void)
 0001:00288A50       oCViewDialogItemContainer::oCViewDialogItemContainer(void)
 0001:00288AA0       oCViewDialogItemContainer::`vector deleting destructor'(uint)
 0001:00288AD0       oCViewDialogItemContainer::~oCViewDialogItemContainer(void)
 0001:00288AF0       oCViewDialogItemContainer::Activate(int)
 0001:00288B10       oCViewDialogItemContainer::SetItemContainer(oCItemContainer *)
 0001:00288B40       oCViewDialogItemContainer::SetAlignment(oCViewDialogItemContainer::oEItemContainerAlignment)
 0001:00288B50       oCViewDialogItemContainer::GetSelectedItem(void)
 0001:00288B70       oCViewDialogItemContainer::GetSelectedItemCount(void)
 0001:00288B90       oCViewDialogItemContainer::RemoveSelectedItem(void)
 0001:00288C00       oCViewDialogItemContainer::InsertItem(oCItem *)
 0001:00288C20       oCViewDialogItemContainer::RemoveItem(oCItem *)
 0001:00288C40       oCViewDialogItemContainer::TransferAllItemsTo(oCNpcInventory *)
 0001:00288D10       oCViewDialogItemContainer::UpdateValue(void)
 0001:00288D20       oCViewDialogItemContainer::CanHandleLeft(void)
 0001:00288D30       oCViewDialogItemContainer::CanHandleRight(void)
 0001:00288D40       oCViewDialogItemContainer::HandleEvent(int)
 0001:00288D90       oCViewDialogItemContainer::StartSelection(void)
 0001:00288DF0       oCViewDialogItemContainer::StopSelection(void)
 0001:00289220       oCViewDialogStealContainer::_CreateNewInstance(void)
 0001:002892D0       oCViewDialogStealContainer::operator delete(void *)
 0001:002892F0       oCViewDialogStealContainer::_GetClassDef(void)
 0001:00289300       oCViewDialogStealContainer::oCViewDialogStealContainer(void)
 0001:00289350       oCViewDialogStealContainer::`scalar deleting destructor'(uint)
 0001:00289380       oCViewDialogStealContainer::~oCViewDialogStealContainer(void)
 0001:002893A0       oCViewDialogStealContainer::Activate(int)
 0001:002893C0       oCViewDialogStealContainer::SetStealContainer(oCStealContainer *)
 0001:002893F0       oCViewDialogStealContainer::SetAlignment(oCViewDialogStealContainer::oEStealContainerAlignment)
 0001:00289400       oCViewDialogStealContainer::GetSelectedItem(void)
 0001:00289420       oCViewDialogStealContainer::GetSelectedItemCount(void)
 0001:00289440       oCViewDialogStealContainer::RemoveSelectedItem(void)
 0001:00289500       oCViewDialogStealContainer::InsertItem(oCItem *)
 0001:00289550       oCViewDialogStealContainer::RemoveItem(oCItem *)
 0001:002895B0       oCViewDialogStealContainer::TransferAllItemsTo(oCNpcInventory *)
 0001:002896B0       oCViewDialogStealContainer::UpdateValue(void)
 0001:00289750       oCViewDialogStealContainer::CanHandleLeft(void)
 0001:00289760       oCViewDialogStealContainer::CanHandleRight(void)
 0001:00289770       oCViewDialogStealContainer::HandleEvent(int)
 0001:002897C0       oCViewDialogStealContainer::StartSelection(void)
 0001:00289820       oCViewDialogStealContainer::StopSelection(void)
 0001:00289CB0       oCViewDialogTrade::_CreateNewInstance(void)
 0001:00289D10       oCViewDialogTrade::UpdateViewSettings(void)
 0001:00289DB0       oCViewDialogTrade::oCViewDialogTrade(void)
 0001:0028A010       oCViewDialogTrade::_GetClassDef(void)
 0001:0028A020       oCViewDialogTrade::GetTransferCount(void)
 0001:0028A030       oCViewDialogTrade::SetTransferCount(short)
 0001:0028A040       oCViewDialogTrade::IncTransferCount(short)
 0001:0028A050       oCViewDialogTrade::`scalar deleting destructor'(uint)
 0001:0028A080       oCViewDialogTrade::~oCViewDialogTrade(void)
 0001:0028A140       oCViewDialogTrade::AllDialogsStop(void)
 0001:0028A160       oCViewDialogTrade::AllDialogsDisable(void)
 0001:0028A180       oCViewDialogTrade::SetNpcLeft(oCNpc *)
 0001:0028A290       oCViewDialogTrade::SetNpcRight(oCNpc *)
 0001:0028A340       oCViewDialogTrade::StartSelection(void)
 0001:0028A3E0       oCViewDialogTrade::HandleEvent(int)
 0001:0028A750       oCViewDialogTrade::Update(void)
 0001:0028A770       oCViewDialogTrade::OnKeyEnter(void)
 0001:0028A780       oCViewDialogTrade::OnKeyEsc(void)
 0001:0028A790       oCViewDialogTrade::OnMoveLeft(void)
 0001:0028A840       oCViewDialogTrade::OnTransferLeft(short)
 0001:0028AA60       oCViewDialogTrade::OnMoveRight(void)
 0001:0028AB10       oCViewDialogTrade::OnTransferRight(short)
 0001:0028AEA0       oCViewDialogTrade::OnSectionPrevious(void)
 0001:0028AF20       oCViewDialogTrade::OnSectionNext(void)
 0001:0028AFA0       oCViewDialogTrade::OnSection(oCViewDialogTrade::zETradeDialogSection)
 0001:0028B000       oCViewDialogTrade::OnExit(void)
 0001:0028B2C0       oCViewDocument::oCViewDocument(zSTRING &)
 0001:0028B5C0       zCPosition::operator-=(zCPosition &)
 0001:0028B5E0       zCViewDialog::_GetClassDef(void)
 0001:0028B5F0       oCViewDocument::`scalar deleting destructor'(uint)
 0001:0028B620       oCViewDocument::oCViewDocument(void)
 0001:0028B650       oCViewDocument::~oCViewDocument(void)
 0001:0028B670       oCViewDocument::GetPage(int)
 0001:0028B6A0       oCViewDocument::SetPages(int)
 0001:0028B7F0       oCViewDocument::SetMargins(int,zCPosition &,zCPosition &,int)
 0001:0028B970       oCViewDocument::SetPage(int,zSTRING &,int)
 0001:0028BAF0       oCViewDocument::SetFont(int,zSTRING &)
 0001:0028BBB0       oCViewDocument::PrintLine(int,zSTRING &)
 0001:0028BC70       oCViewDocument::PrintLines(int,zSTRING &)
 0001:0028BD30       oCViewDocument::SetTexture(zSTRING &,int)
 0001:0028BDA0       oCViewDocument::AlignPageToParent(void)
 0001:0028BF30       oCViewDocument::Center(void)
 0001:0028BFA0       oCViewDocument::SizeToContent(void)
 0001:0028C050       oCViewDocument::SizeToParent(void)
 0001:0028C090       oCViewDocument::ScaleToParent(void)
 0001:0028C340       oCViewDocumentMap::oCViewDocumentMap(void)
 0001:0028C440       oCViewDocumentMap::`scalar deleting destructor'(uint)
 0001:0028C470       oCViewDocumentMap::~oCViewDocumentMap(void)
 0001:0028C520       oCViewDocumentMap::SetPage(int,zSTRING &,int)
 0001:0028C610       oCViewDocumentMap::SetLevel(zSTRING const &)
 0001:0028C770       oCViewDocumentMap::SetLevelCoords(int,int,int,int)
 0001:0028C7B0       oCViewDocumentMap::UpdatePosition(void)
 0001:0028CE60       oCWorld::GetWorldFilename(void)
 0001:0028CEE0       zCViewBase::zCViewBase(void)
 0001:0028CEF0       zCViewBase::anx(int)
 0001:0028CF00       zCViewBase::any(int)
 0001:0028CF10       zCViewBase::nax(int)
 0001:0028CF20       zCViewBase::nay(int)
 0001:0028CF30       zCViewBase::ClipLine(int &,int &,int &,int &)
 0001:0028CF40       zCViewBase::Line(int,int,int,int,zCOLOR const &)
 0001:0028CF50       zCViewBase::GetViewport(int &,int &,int &,int &)
 0001:0028CF60       zCViewBase::GetCode(int,int)
 0001:0028CF70       zCViewBase::~zCViewBase(void)
 0001:0028CF80       zCViewBase::FillZBuffer(void)
 0001:0028D450       zCViewDialog::_CreateNewInstance(void)
 0001:0028D5A0       zCViewDialog::zCViewDialog(void)
 0001:0028D6B0       zCViewDialog::`scalar deleting destructor'(uint)
 0001:0028D6E0       zCViewDialog::~zCViewDialog(void)
 0001:0028D970       zCViewDialogChoice::_CreateNewInstance(void)
 0001:0028DA50       zCViewDialogChoice::_GetClassDef(void)
 0001:0028DA60       zCViewDialogChoice::zCViewDialogChoice(void)
 0001:0028DAE0       zCViewDialogChoice::`scalar deleting destructor'(uint)
 0001:0028DB10       zCViewDialogChoice::~zCViewDialogChoice(void)
 0001:0028DBA0       zCViewDialogChoice::HandleEvent(int)
 0001:0028DF70       zCViewDialogChoice::StartSelection(void)
 0001:0028DFB0       zCViewDialogChoice::StopSelection(void)
 0001:0028DFE0       zCViewDialogChoice::BlitText(void)
 0001:0028E050       zCViewDialogChoice::ScrollUp(void)
 0001:0028E090       zCViewDialogChoice::ScrollDown(void)
 0001:0028E0D0       zCViewDialogChoice::IsSelectedOutsideAbove(void)
 0001:0028E0F0       zCViewDialogChoice::IsSelectedOutsideBelow(void)
 0001:0028E180       zCViewDialogChoice::ShowSelected(void)
 0001:0028E220       zCViewDialogChoice::SelectPrevious(void)
 0001:0028E330       zCViewDialogChoice::SelectNext(void)
 0001:0028E440       zCViewDialogChoice::Select(int)
 0001:0028E540       zCViewDialogChoice::GetSelection(void)
 0001:0028E550       zCViewDialogChoice::GetSelectedText(void)
 0001:0028E620       zCViewDialogChoice::HighlightSelected(void)
 0001:0028E710       zCViewDialogChoice::AddChoice(zSTRING &,int)
 0001:0028E9A0       zCViewDialogChoice::RemoveChoice(zSTRING &)
 0001:0028E9B0       zCViewDialogChoice::RemoveChoice(int)
 0001:0028E9C0       zCViewDialogChoice::RemoveAllChoices(void)
 0001:0028EC00       zCViewDraw::_CreateNewInstance(void)
 0001:0028ECF0       zCViewDraw::operator delete(void *)
 0001:0028ED10       zCViewDraw::_GetClassDef(void)
 0001:0028ED20       zCViewDraw::zCViewDraw(void)
 0001:0028EDB0       zCViewDraw::`scalar deleting destructor'(uint)
 0001:0028EDE0       zCViewDraw::~zCViewDraw(void)
 0001:0028EE60       zCViewDraw::RemoveChild(zSTRING &)
 0001:0028EF50       zCViewDraw::SetTextureAlphaBlendFunc(zTRnd_AlphaBlendFunc const &)
 0001:0028EF60       zCViewDraw::SetTexture(zSTRING const &)
 0001:0028F040       zCViewDraw::SetTexture(zCTexture *)
 0001:0028F080       zCViewDraw::SetTextureColor(zCOLOR const &)
 0001:0028F090       zCViewDraw::SetTextureAlpha(int)
 0001:0028F0A0       zCViewDraw::TextureCacheIn(float)
 0001:0028F0E0       zCViewDraw::Render(void)
 0001:0028F1F0       zCViewDraw::Draw(void)
 0001:0028F300       zCViewDraw::DrawChildren(void)
 0001:0028F430       zCViewDraw::Blit(void)
 0001:0028F490       zCViewDraw::BlitTexture(void)
 0001:0028F540       zCViewDraw::EvaluateTexturePosition(void)
 0001:0028F5C0       zCViewDraw::GetScreen(void)
 0001:0028F6F0       zCViewDraw::CleanupScreen(void)
 0001:0028F940       zCViewFX::_CreateNewInstance(void)
 0001:0028FA30       zCViewFX::operator delete(void *)
 0001:0028FA50       zCViewFX::_GetClassDef(void)
 0001:0028FA60       zCViewFX::zCViewFX(void)
 0001:0028FB10       zCViewFX::`scalar deleting destructor'(uint)
 0001:0028FB40       zCViewFX::~zCViewFX(void)
 0001:0028FB60       zCViewFX::Init(zCViewObject *,int,ulong,ulong,float,float,zSTRING &)
 0001:0028FBE0       zCViewFX::Open(void)
 0001:0028FC10       zCViewFX::OpenSafe(void)
 0001:0028FC90       zCViewFX::OpenImmediately(void)
 0001:0028FCB0       zCViewFX::Close(void)
 0001:0028FD00       zCViewFX::CloseSafe(void)
 0001:0028FD90       zCViewFX::CloseImmediately(void)
 0001:0028FDB0       zCViewFX::ApplyOpenCloseFX(void)
 0001:00290020       zVEC2::operator-=(zVEC2 const &)
 0001:00290040       zVEC2::operator*=(float)
 0001:00290060       zCViewFX::ApplyOpenFX(void)
 0001:002901A0       zCViewFX::ApplyCloseFX(void)
 0001:002902E0       zCViewFX::ApplyOpenFade(void)
 0001:00290330       zCViewFX::ApplyOpenZoom(void)
 0001:002903C0       zCViewFX::ApplyCloseFade(void)
 0001:00290420       zCViewFX::ApplyCloseZoom(void)
 0001:002904B0       zCViewFX::Blit(void)
 0001:002905E0       zCViewFX::EvaluateTexturePosition(void)
 0001:00290830       zCViewObject::_CreateNewInstance(void)
 0001:00290890       zCViewObject::operator delete(void *)
 0001:002908B0       zCViewObject::zCViewObject(void)
 0001:00290990       zCViewObject::_GetClassDef(void)
 0001:002909A0       zCViewObject::Compare(zCViewObject *,zCViewObject *)
 0001:002909B0       zCViewObject::`scalar deleting destructor'(uint)
 0001:002909E0       zCViewObject::~zCViewObject(void)
 0001:00290B00       zCViewObject::AddChild(zCViewObject *)
 0001:00290B20       zCViewObject::AddChild(zCViewObject &)
 0001:00290B40       zCViewObject::AddChildren(zCListSort<zCViewObject> &)
 0001:00290BB0       zCViewObject::RemoveChild(zCViewObject *)
 0001:00290C30       zCViewObject::RemoveChild(zCViewObject &)
 0001:00290CB0       zCViewObject::RemoveAllChildren(void)
 0001:00290D80       zCViewObject::GetChild(ulong)
 0001:00290DE0       zCViewObject::SetVirtualPosition(zCPosition &)
 0001:00290EA0       zCViewObject::SetPixelPosition(zCPosition &)
 0001:00290F60       zCViewObject::SetVirtualSize(zCPosition &)
 0001:00291140       zCPosition::operator+=(zCPosition &)
 0001:00291160       zCViewObject::SetPixelSize(zCPosition &)
 0001:00291330       zCViewObject::GetViewport(int &,int &,int &,int &)
 0001:00291360       zCViewObject::EvaluatePixelPosition(zCPosition &)
 0001:002913C0       zCViewObject::EvaluatePixelSize(zCPosition &)
 0001:00291460       zCViewObject::UpdatePixelPosition(void)
 0001:00291510       zCViewObject::UpdatePixelSize(void)
 0001:00291600       zCViewObject::UpdatePixelPositionChildren(void)
 0001:002916C0       zCViewObject::UpdatePixelSizeChildren(void)
 0001:002917B0       zCViewObject::UpdatePixelDimensionsChildren(void)
 0001:00291950       zCViewObject::ConvertPositionVirtualToPixel(zCPosition &)
 0001:00291990       zCViewObject::ConvertSizeVirtualToPixel(zCPosition &)
 0001:002919D0       zCViewObject::ConvertPositionPixelToVirtual(zCPosition &)
 0001:00291A20       zCViewObject::ConvertSizePixelToVirtual(zCPosition &)
 0001:00291A70       zCViewObject::ConvertToPixel(zCPosition &)
 0001:00291AD0       zCViewObject::ConvertToPixelLocal(zCPosition &)
 0001:00291B10       zCViewObject::ConvertToVirtualLocal(zCPosition &)
 0001:00291B60       zCViewObject::nax(int)
 0001:00291B80       zCViewObject::nay(int)
 0001:00291BA0       zCViewObject::anx(int)
 0001:00291BC0       zCViewObject::any(int)
 0001:00291BE0       zCViewObject::ClipLine(int &,int &,int &,int &)
 0001:00291D90       zCViewObject::Line(int,int,int,int,zCOLOR const &)
 0001:00291E40       zCViewObject::GetCode(int,int)
 0001:00291E80       zCListSort<zCViewObject>::~zCListSort<zCViewObject>(void)
 0001:00291EB0       zCListSort<zCViewObject>::InsertSort(zCViewObject *)
 0001:00291F30       zCListSort<zCViewObject>::`scalar deleting destructor'(uint)
 0001:00292180       zCViewPrint::_CreateNewInstance(void)
 0001:002921E0       zCViewPrint::operator delete(void *)
 0001:00292200       zCViewPrint::zCViewPrint(void)
 0001:002922D0       zCViewPrint::_GetClassDef(void)
 0001:002922E0       zCViewPrint::`scalar deleting destructor'(uint)
 0001:00292310       zCViewPrint::~zCViewPrint(void)
 0001:00292400       zCViewPrint::SizeHeightToContent(int)
 0001:002924A0       zCViewPrint::Blit(void)
 0001:002924E0       zCViewPrint::BlitText(void)
 0001:00292590       zCViewPrint::BlitTextLine(zCViewText2 *)
 0001:00292650       zCViewPrint::BlitTextCharacters(zCViewText2 *,zCFont *,zCOLOR &)
 0001:00292880       zCViewPrint::GetPixelBorder(zCPosition &,zCPosition &)
 0001:002928E0       zCViewPrint::ClearText(void)
 0001:00292970       zCViewPrint::Print(zSTRING &)
 0001:00292A50       zCViewPrint::PrintLine(zSTRING &)
 0001:00292C00       zCViewPrint::PrintLines(zSTRING &)
 0001:00293070       zCViewPrint::AddText(zCViewText2 *)
 0001:00293180       zCViewPrint::RemoveText(zCViewText2 *)
 0001:002931E0       zCViewPrint::RemoveAllTexts(void)
 0001:00293250       zCArray<zCViewText2 *>::~zCArray<zCViewText2 *>(void)
 0001:00293270       zCArray<zCViewText2 *>::InsertEnd(zCViewText2 * const &)
 0001:00293340       zCArray<zCViewText2 *>::AllocDelta(int)
 0001:002933D0       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCOLOR &,float,zCFont *,int,zTRnd_AlphaBlendFunc)
 0001:002934B0       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCOLOR &,zCFont *,int,zTRnd_AlphaBlendFunc)
 0001:00293590       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCOLOR &,float,zCFont *)
 0001:00293680       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCOLOR &,zCFont *)
 0001:00293760       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCOLOR &)
 0001:00293840       zCViewText2::zCViewText2(zSTRING &,zCPosition &,float,zCFont *)
 0001:00293930       zCViewText2::zCViewText2(zSTRING &,zCPosition &,zCFont *)
 0001:00293A20       zCViewText2::zCViewText2(zSTRING &,zCPosition &,float)
 0001:00293B10       zCViewText2::zCViewText2(zSTRING &,zCPosition &)
 0001:00293BF0       zCViewText2::~zCViewText2(void)
 0001:00293C40       zCViewFont::zCViewFont(zCFont *,zCOLOR &,int,zTRnd_AlphaBlendFunc)
 0001:00293C70       zCViewFont::zCViewFont(zCFont *,zCOLOR &)
 0001:00293CA0       zCViewFont::zCViewFont(zCFont *)
 0001:00293CE0       zCViewFont::zCViewFont(void)
 0001:00293D20       zCViewFont::~zCViewFont(void)
 0001:00293D30       zCViewFont::SetFont(zSTRING &)
 0001:00293FC0       CapsLock(void)
 0001:00293FE0       SetCapsLock(int)
 0001:00294040       ToggleCapsLock(void)
 0001:002941A0       oCAIHuman::oCAIHuman(void)
 0001:00294280       oCAIHuman::_GetClassDef(void)
 0001:00294290       oCAIHuman::`scalar deleting destructor'(uint)
 0001:002942C0       oCAIHuman::~oCAIHuman(void)
 0001:00294390       oCAIHuman::Init(oCNpc *)
 0001:002943B0       oCAIHuman::DoSimpleAI(void)
 0001:00294540       oCAIHuman::Pressed(int)
 0001:00294560       oCAIHuman::Toggled(int)
 0001:00294570       oCAIHuman::SetCamModeMob(oCMobInter *)
 0001:00294780       oCAIHuman::ChangeCamMode(zSTRING const &)
 0001:00294790       oCAIHuman::InitCamModes(int)
 0001:00294A60       oCAIHuman::SetCamMode(zSTRING const &,int)
 0001:00294A90       oCAIHuman::WeaponChoose(void)
 0001:00294F00       oCAIHuman::BowMode(int)
 0001:00295950       oCAIHuman::GetEnemyThreat(void)
 0001:00295E60       oCAIHuman::CheckFightCamera(void)
 0001:00295EC0       oCAIHuman::FightMelee(void)
 0001:002972B0       oCAIHuman::CheckMobInteraction(void)
 0001:002976B0       oCAIHuman::CheckItemInteraction(void)
 0001:00297E50       oCItem::GetSchemeName(void)
 0001:00297EA0       oCAIHuman::StandActions(void)
 0001:00298510       oCAIHuman::PC_CheckSpecialStates(void)
 0001:00298C60       oCAIHuman::PC_Diving(void)
 0001:00298DD0       oCAIHuman::PC_Turn(float,int)
 0001:00298DF0       oCAIHuman::PC_SpecialMove(int)
 0001:00298F60       oCAIHuman::PC_ActionMove(int)
 0001:002990E0       oCAIHuman::PC_WeaponMove(int)
 0001:00299350       oCAIHuman::PC_SlowMove(int)
 0001:00299790       oCAIHuman::PC_Sneak(int)
 0001:00299940       oCAIHuman::PC_Turnings(int)
 0001:00299C80       oCAIHuman::PC_Strafe(int)
 0001:00299E20       oCAIHuman::_WalkCycle(void)
 0001:0029A0E0       oCAIHuman::ResetObserveSuspectCounter(void)
 0001:0029A0F0       oCAIHuman::CreateObserveSuspect(int)
 0001:0029A180       oCAIHuman::CreateFootStepSound(int)
 0001:0029A250       oCAIHuman::ResetAssessUseMobCounter(void)
 0001:0029A260       oCAIHuman::CreateAssessUseMob(void)
 0001:0029A2F0       oCAIHuman::SetCrawlMode(int)
 0001:0029A570       oCAIHuman::SetSprintMode(int)
 0001:0029A780       oCAIHuman::MoveCamera(void)
 0001:0029A790       oCAIHuman::CamMessages(void)
 0001:0029A7A0       oCAIHuman::CheckFocusVob(int)
 0001:0029A9B0       oCAIHuman::Moving(void)
 0001:0029AAB0       oCAIHuman::DoAI(zCVob *,int &)
 0001:0029B390       oCAIHuman::DoHackSpecials(void)
 0001:0029BD60       oCAIHuman::ChangeCamModeBySituation(void)
 0001:0029C800       zCAICamera::GetPreviousMode(void)
 0001:0029C850       oCAIHuman::DoMonsterSpecial(void)
 0001:0029C860       oCAIHuman::SetShowAI(int)
 0001:0029C880       oCAIHuman::GetShowAI(void)
 0001:0029C890       oCAIHuman::CanThisCollideWith(zCVob *)
 0001:0029C8D0       oCAIHuman::AddIgnoreCD(zCVob *)
 0001:0029C8E0       oCAIHuman::SubIgnoreCD(zCVob *)
 0001:0029C940       oCAIHuman::StartFlyDamage(float,zVEC3 &)
 0001:0029CCC0       oCAIHuman::Archive(zCArchiver &)
 0001:0029CCE0       oCAIHuman::Unarchive(zCArchiver &)
 0001:0029CD00       oCAICamera::oCAICamera(void)
 0001:0029CE40       oCAICamera::_GetClassDef(void)
 0001:0029CE50       oCAICamera::HasAIDetectedCollision(void)
 0001:0029CE60       oCAICamera::`scalar deleting destructor'(uint)
 0001:0029CE90       oCAICamera::~oCAICamera(void)
 0001:0029CEA0       oCAICamera::DoAI(zCVob *,int &)
 0001:0029D0E0       oCAIHuman_Stand::oCAIHuman_Stand(zCVob *)
 0001:0029D200       oCAIHuman_Stand::_GetClassDef(void)
 0001:0029D210       oCAIHuman_Stand::`scalar deleting destructor'(uint)
 0001:0029D240       oCAIHuman_Stand::~oCAIHuman_Stand(void)
 0001:0029D250       oCAIHuman_Stand::DoAI(zCVob *,int &)
 0001:0029D500       oCAIHuman::_CreateNewInstance(void)
 0001:0029D560       oCAIHuman::operator delete(void *)
 0001:0029D760       oCAICamera::_CreateNewInstance(void)
 0001:0029D8A0       oCAICamera::operator delete(void *)
 0001:0029DAA0       oCAIHuman_Stand::_CreateNewInstance(void)
 0001:0029DBC0       oCAIHuman_Stand::operator delete(void *)
 0001:0029DE80       oCAISound::RemoveSlideSound(void)
 0001:0029DEA0       oCAISound::CheckSlideSound(zCVob *)
 0001:0029DF30       oCAISound::GetSoundMaterial(zCVob *,zCSoundManager::zTSndManMedium &)
 0001:0029E0B0       oCAISound::StartCollisionSound(zCVob *,zCCollisionReport const &)
 0001:0029E220       oCAIVobMove::oCAIVobMove(void)
 0001:0029E2F0       oCAIVobMove::_GetClassDef(void)
 0001:0029E300       oCAIVobMove::CanThisCollideWith(zCVob *)
 0001:0029E340       oCAIVobMove::`scalar deleting destructor'(uint)
 0001:0029E370       oCAIVobMove::~oCAIVobMove(void)
 0001:0029E490       oCAISound::_GetClassDef(void)
 0001:0029E4A0       oCAISound::~oCAISound(void)
 0001:0029E510       oCAISound::`scalar deleting destructor'(uint)
 0001:0029E540       oCAIVobMove::Init(zCVob *,zCVob *,zVEC3 &,float,float,zMAT4 *)
 0001:0029E8C0       oCAIVobMove::DoAI(zCVob *,int &)
 0001:0029EA30       oCAIVobMove::ReportCollisionToAI(zCCollisionReport const &)
 0001:0029EA80       oCAIVobMove::Archive(zCArchiver &)
 0001:0029EAE0       oCAIVobMove::Unarchive(zCArchiver &)
 0001:0029EBD0       oCAIVobMove::AddIgnoreCDVob(zCVob *)
 0001:0029EBF0       oCAIVobMove::ClearIgnoreCDVob(void)
 0001:0029EC60       oCAIVobMoveTorch::oCAIVobMoveTorch(void)
 0001:0029ECF0       oCAIVobMoveTorch::_GetClassDef(void)
 0001:0029ED00       oCAIVobMoveTorch::`scalar deleting destructor'(uint)
 0001:0029ED30       oCAIVobMoveTorch::~oCAIVobMoveTorch(void)
 0001:0029EE40       oCAIVobMoveTorch::Init(zCVob *,zCVob *,zVEC3 &,float,float,zMAT4 *)
 0001:0029EE60       oCAIVobMoveTorch::DoAI(zCVob *,int &)
 0001:0029EE90       oCAIVobMoveTorch::CheckWater(void)
 0001:0029EF40       oCAIVobMoveTorch::BurnedOut(void)
 0001:0029F120       oCAIArrowBase::oCAIArrowBase(void)
 0001:0029F210       oCAIArrowBase::_GetClassDef(void)
 0001:0029F220       oCAIArrowBase::HasAIDetectedCollision(void)
 0001:0029F230       oCAIArrowBase::AICollisionResponseSelfDetected(zVEC3 const &,int &)
 0001:0029F240       oCAIArrowBase::GetIsProjectile(void)
 0001:0029F250       oCAIArrowBase::`scalar deleting destructor'(uint)
 0001:0029F280       oCAIArrowBase::~oCAIArrowBase(void)
 0001:0029F390       oCAIArrowBase::AddIgnoreCDVob(zCVob *)
 0001:0029F3B0       oCAIArrowBase::ClearIgnoreCDVob(void)
 0001:0029F420       oCAIArrowBase::CreateTrail(zCVob *)
 0001:0029F640       oCAIArrowBase::DoAI(zCVob *,int &)
 0001:0029F9C0       oCAIArrowBase::ReportCollisionToAI(zCCollisionReport const &)
 0001:0029FCD0       oCAIArrowBase::Archive(zCArchiver &)
 0001:0029FD50       oCAIArrowBase::Unarchive(zCArchiver &)
 0001:0029FE10       oCAIArrow::oCAIArrow(void)
 0001:0029FEC0       oCAIArrow::_GetClassDef(void)
 0001:0029FED0       oCAIArrow::`scalar deleting destructor'(uint)
 0001:0029FF00       oCAIArrow::~oCAIArrow(void)
 0001:0029FFF0       oCAIArrow::SetTarget(zCVob *)
 0001:002A0030       oCAIArrow::ClearUsedVobs(void)
 0001:002A00E0       oCAIArrow::SetupAIVob(zCVob *,zCVob *,zCVob *)
 0001:002A0460       oCAIArrow::DoAI(zCVob *,int &)
 0001:002A0490       oCAIArrow::CanThisCollideWith(zCVob *)
 0001:002A0530       oCAIArrow::ReportCollisionToAI(zCCollisionReport const &)
 0001:002A0CC0       oCAIArrow::Archive(zCArchiver &)
 0001:002A0D90       oCAIArrow::Unarchive(zCArchiver &)
 0001:002A0EA0       oCAIDrop::oCAIDrop(void)
 0001:002A0F80       oCAIDrop::_GetClassDef(void)
 0001:002A0F90       oCAIDrop::HasAIDetectedCollision(void)
 0001:002A0FA0       oCAIDrop::CanThisCollideWith(zCVob *)
 0001:002A0FE0       oCAIDrop::`scalar deleting destructor'(uint)
 0001:002A1010       oCAIDrop::~oCAIDrop(void)
 0001:002A1130       oCAIDrop::AddIgnoreCDVob(zCVob *)
 0001:002A1150       oCAIDrop::ClearIgnoreCDVob(void)
 0001:002A11C0       oCAIDrop::SetupAIVob(zCVob *,zCVob *)
 0001:002A1420       oCAIDrop::DoAI(zCVob *,int &)
 0001:002A1490       oCAIDrop::ReportCollisionToAI(zCCollisionReport const &)
 0001:002A14E0       oCAIDrop::SetVelocity(float,float)
 0001:002A1590       oCAIDrop::SetStartPosition(zVEC3 &)
 0001:002A1710       oCAIDrop::Archive(zCArchiver &)
 0001:002A1720       oCAIDrop::Unarchive(zCArchiver &)
 0001:002A1AF0       oCAIArrowBase::_CreateNewInstance(void)
 0001:002A1BC0       oCAIArrowBase::operator delete(void *)
 0001:002A1DC0       oCAIArrow::_CreateNewInstance(void)
 0001:002A1EA0       oCAIArrow::operator delete(void *)
 0001:002A20A0       oCAIDrop::_CreateNewInstance(void)
 0001:002A2160       oCAIDrop::operator delete(void *)
 0001:002A2360       oCAIVobMove::_CreateNewInstance(void)
 0001:002A2420       oCAIVobMove::operator delete(void *)
 0001:002A2620       oCAIVobMoveTorch::_CreateNewInstance(void)
 0001:002A26E0       oCAIVobMoveTorch::operator delete(void *)
 0001:002A2700       zCList<zCVob>::DeleteList(void)
 0001:002A2A10       oTGilValues::~oTGilValues(void)
 0001:002A2A80       oTGilValues::oTGilValues(void)
 0001:002A2AF0       oCAniCtrl_Human::oCAniCtrl_Human(void)
 0001:002A2C40       oCAniCtrl_Human::_GetClassDef(void)
 0001:002A2C50       oCAniCtrl_Human::`scalar deleting destructor'(uint)
 0001:002A2C80       oCAniCtrl_Human::~oCAniCtrl_Human(void)
 0001:002A2D60       oCAniCtrl_Human::Init(oCNpc *)
 0001:002A2DC0       oCAniCtrl_Human::StartAni(int,int)
 0001:002A2FA0       oCAniCtrl_Human::SetNextAni(int,int)
 0001:002A3010       oCAniCtrl_Human::InitAnimations(void)
 0001:002A3D20       oCAniCtrl_Human::SearchStandAni(int)
 0001:002A4060       oCAniCtrl_Human::StartStandAni(void)
 0001:002A4080       oCAniCtrl_Human::Reset(void)
 0001:002A40C0       oCAniCtrl_Human::InitAngleValuesForConsole(void)
 0001:002A4110       oCAniCtrl_Human::SetScriptValues(void)
 0001:002A4A40       oCAniCtrl_Human::SetInterruptFollowAni(int)
 0001:002A4BF0       oCAniCtrl_Human::InitAllAnis(void)
 0001:002A8800       zCModelAni::GetAniID(void)
 0001:002A8810       zCAIPlayer::GetModel(void)
 0001:002A8820       oCAniCtrl_Human::SetWalkMode(int)
 0001:002A90B0       oCAniCtrl_Human::InitFightAnis(int)
 0001:002A9A40       oCAniCtrl_Human::SetFightAnis(int)
 0001:002A9B60       oCAniCtrl_Human::StartAniWithOffset(int,float)
 0001:002A9B70       oCAniCtrl_Human::DoAniWithOffset(void)
 0001:002A9B80       oCAniCtrl_Human::CorrectFightPosition(void)
 0001:002A9E40       oCAniCtrl_Human::GetWalkModeString(void)
 0001:002A9FA0       oCAniCtrl_Human::CorrectAniStates(void)
 0001:002AA130       oCAniCtrl_Human::CheckWaterLevel(void)
 0001:002AADB0       oCAniCtrl_Human::SetAlwaysWalk(int)
 0001:002AAF80       oCAniCtrl_Human::IsAlwaysWalk(void)
 0001:002AAFB0       oCAniCtrl_Human::CanToggleWalkModeTo(int)
 0001:002ABC10       oCAniCtrl_Human::CanToggleWalkMode(void)
 0001:002AC500       oCAniCtrl_Human::ToggleWalkMode(int)
 0001:002AC540       oCAniCtrl_Human::IsDead(void)
 0001:002ACC30       oCAniCtrl_Human::IsFallen(void)
 0001:002ACD40       oCAniCtrl_Human::IsAiming(void)
 0001:002ACE10       oCAniCtrl_Human::IsStateAniActive(int)
 0001:002ACE90       oCAniCtrl_Human::IsStateAniActive(zCModelAni *)
 0001:002ACEE0       oCAniCtrl_Human::IsStanding(void)
 0001:002AD080       oCAniCtrl_Human::IsJumpStanding(void)
 0001:002AD0E0       oCAniCtrl_Human::IsWalking(void)
 0001:002AD200       oCAniCtrl_Human::IsRunning(void)
 0001:002AD410       oCAniCtrl_Human::IsWalkingBackward(void)
 0001:002AD530       oCAniCtrl_Human::StopTurnAnis(void)
 0001:002AD540       oCAniCtrl_Human::Turn(float,int)
 0001:002ADA40       oCAniCtrl_Human::DoAutoRoll(void)
 0001:002ADB10       oCAniCtrl_Human::TurnDegrees(float,int)
 0001:002ADBF0       oCAniCtrl_Human::WallInFront(float)
 0001:002ADC60       oCAniCtrl_Human::GetWeaponString(int)
 0001:002ADEF0       oCAniCtrl_Human::GetWeaponHitString(int)
 0001:002AE180       oCAniCtrl_Human::IsDefending(void)
 0001:002AE1E0       oCAniCtrl_Human::GetFightLimbs(void)
 0001:002AEC50       oCAniCtrl_Human::DoSparks(zVEC3 &,zSTRING const &)
 0001:002AED80       oCAniCtrl_Human::GetLayerAni(int)
 0001:002AEDB0       oCAniCtrl_Human::CheckLayerAni(int,zSTRING const &)
 0001:002AEDF0       oCAniCtrl_Human::CheckLimbHit(zSTRING const &,zCList<zCModelNodeInst> &)
 0001:002AEE70       oCAniCtrl_Human::ShowWeaponTrail(void)
 0001:002AF0C0       oCAniCtrl_Human::StartHitCombo(int,zCVob *)
 0001:002AF120       oCAniCtrl_Human::SetComboHitTarget(zCVob const *)
 0001:002AF130       oCAniCtrl_Human::StartHitGraphical(int,zCVob *)
 0001:002AF200       oCAniCtrl_Human::GetStopTurnVobSign(void)
 0001:002AF260       oCAniCtrl_Human::HitCombo(int)
 0001:002AF5C0       oCAniCtrl_Human::CheckHitTarget(void)
 0001:002AF830       oCAniCtrl_Human::CreateHit(zCVob *)
 0001:002AFCD0       oCAniCtrl_Human::CheckMeleeWeaponHitsLevel(oCItem *)
 0001:002B01A0       oCAniCtrl_Human::HitInterrupt(void)
 0001:002B01E0       oCAniCtrl_Human::HitGraphical(void)
 0001:002B0350       oCAniCtrl_Human::IsInPreHit(void)
 0001:002B03A0       oCAniCtrl_Human::IsInPostHit(void)
 0001:002B0430       oCAniCtrl_Human::IsInCombo(void)
 0001:002B0480       oCAniCtrl_Human::FirstPersonDrawWeapon(void)
 0001:002B0490       oCAniCtrl_Human::GetHitDirection(void)
 0001:002B0550       oCAniCtrl_Human::IsParadeRunning(void)
 0001:002B05B0       oCAniCtrl_Human::CanParade(oCNpc *)
 0001:002B06F0       oCAniCtrl_Human::StartParadeEffects(oCNpc *)
 0001:002B0B40       oCAniCtrl_Human::StrafeLeft(void)
 0001:002B0B80       oCAniCtrl_Human::StrafeRight(void)
 0001:002B0BC0       oCAniCtrl_Human::GetFootPos(void)
 0001:002B0D70       oCAniCtrl_Human::PC_GoForward(void)
 0001:002B0DC0       oCAniCtrl_Human::PC_GoBackward(void)
 0001:002B0E00       oCAniCtrl_Human::PC_JumpForward(void)
 0001:002B0FE0       oCAniCtrl_Human::CanJump(int)
 0001:002B1050       oCAniCtrl_Human::CanJumpLedge(void)
 0001:002B11E0       oCAniCtrl_Human::JumpForward(void)
 0001:002B1400       oCAniCtrl_Human::Swim_CanClimbLedge(void)
 0001:002B1440       oCAniCtrl_Human::Swim_ClimbLedge(void)
 0001:002B15A0       oCAniCtrl_Human::CanWalkOnPoly(zVEC3 const &)
 0001:002B1610       oCAniCtrl_Human::DrawWeapon1(int,int,int)
 0001:002B1900       oCAniCtrl_Human::ChooseNextWeapon2(int)
 0001:002B1CF0       oCAniCtrl_Human::DrawWeapon2(void)
 0001:002B2040       oCAniCtrl_Human::RemoveWeapon1(void)
 0001:002B23B0       oCAniCtrl_Human::RemoveWeapon2(void)
 0001:002B2660       oCAniCtrl_Human::StartUp(zCVob *)
 0001:002B2670       oCAniCtrl_Human::LerpFeetToTarget(int,int,zVEC3 const &)
 0001:002B29B0       oCAniCtrl_Human::RelaxHandToTarget(zVEC3 const &,zVEC3 const &,int,float)
 0001:002B3290       oCAniCtrl_Human::CheckSpecialStates(void)
 0001:002B3FE0       oCAniCtrl_Human::CheckJump(void)
 0001:002B4220       oCAniCtrl_Human::StartFallDownAni(void)
 0001:002B4500       oCAniCtrl_Human::HackNPCToSwim(void)
 0001:002B4810       oCAniCtrl_Human::CheckFallStates(void)
 0001:002B5110       oCAniCtrl_Human::CombineAniLerp(float,float,float,float)
 0001:002B5170       oCAniCtrl_Human::InterpolateCombineAni(float,float,int)
 0001:002B52F0       oCAniCtrl_Human::LookAtTarget(void)
 0001:002B5310       oCAniCtrl_Human::SetLookAtTarget(float,float)
 0001:002B5360       oCAniCtrl_Human::SetLookAtTarget(zVEC3 &)
 0001:002B5490       oCAniCtrl_Human::SetLookAtTarget(zCVob *)
 0001:002B5640       oCAniCtrl_Human::StopLookAtTarget(void)
 0001:002B57F0       oCAniCtrl_Human::StartCombineAni(zVEC3 &,int,float,float)
 0001:002B5930       oCAniCtrl_Human::StartCombineAni(zCVob *,int,float,float)
 0001:002B5A80       oCAniCtrl_Human::StopCombineAni(int)
 0001:002B5A90       oCAniCtrl_Human::DetectChasm(zVEC3 const &,zVEC3 const &,float &,zVEC3 &)
 0001:002B5C10       oCAniCtrl_Human::IsInCriticalAni(void)
 0001:002B6270       oCAniCtrl_Human::Archive(zCArchiver &)
 0001:002B6320       oCAniCtrl_Human::Unarchive(zCArchiver &)
 0001:002B6410       oCAniCtrl_Human::SetActionMode(int)
 0001:002B6490       oCAniCtrl_Human::_Stand(void)
 0001:002B6900       oCAniCtrl_Human::_Forward(void)
 0001:002B6BC0       oCAniCtrl_Human::_Backward(void)
 0001:002B6EA0       oCAniCtrl_Human::SetAnimations(int,zSTRING const &)
 0001:002B7350       oCAniCtrl_Human::TransitionToInvest(void)
 0001:002B74A0       oCAniCtrl_Human::TransitionToCast(void)
 0001:002B76A0       oCAniCtrl_Human::TransitionToStand(void)
 0001:002B7860       oCAniCtrl_Human::IsInCastAni(void)
 0001:002B7930       oCAniCtrl_Human::IsInWeaponChoose(void)
 0001:002B79D0       oCAniCtrl_Human::GetWaterLevel(void)
 0001:002B7A40       oCAniCtrl_Human::IsInWater(void)
 0001:002B7CC0       oCAniCtrl_Human::_CreateNewInstance(void)
 0001:002B7D20       oCAniCtrl_Human::operator delete(void *)
 0001:002B7D40       zCArray<zCModelAniEvent *>::operator=(zCArray<zCModelAniEvent *> const &)
 0001:002B7DE0       zCList<zCVob::zTModelLimbColl>::~zCList<zCVob::zTModelLimbColl>(void)
 0001:002B7E10       zCList<zCVob::zTModelLimbColl>::DeleteListDatas(void)
 0001:002B7E80       zCList<zCVob::zTModelLimbColl>::`scalar deleting destructor'(uint)
 0001:002B7EC0       zCList<zCModelNodeInst>::`scalar deleting destructor'(uint)
 0001:002B7F90       myThunder::~myThunder(void)
 0001:002B7FC0       oCBarrier::oCBarrier(void)
 0001:002B8190       oCBarrier::~oCBarrier(void)
 0001:002B83D0       myThunder::`vector deleting destructor'(uint)
 0001:002B8440       oCBarrier::Init(void)
 0001:002B8BF0       oCBarrier::Initialise(int)
 0001:002B8CD0       myThunder::myThunder(void)
 0001:002B8CE0       oCBarrier::AddTremor(zTRenderContext &)
 0001:002B8CF0       oCBarrier::RenderLayer(zTRenderContext &,int,int &)
 0001:002B8F30       oCBarrier::Render(zTRenderContext &,int,int)
 0001:002B99C0       oCBarrier::InitThunder(myThunder *)
 0001:002B99F0       oCBarrier::RemoveThunder(myThunder *)
 0001:002B9AA0       oCBarrier::AddThunderSub(myThunder *,int,int,int,int)
 0001:002B9DE0       oCBarrier::AddThunder(int,int,float,zTThunderSector)
 0001:002BA4B0       oCBarrier::RenderThunder(myThunder *,zTRenderContext &)
 0001:002BA770       oCBarrier::RenderThunderList(zTRenderContext &)
 0001:002BA7B0       oCSkyControler_Barrier::oCSkyControler_Barrier(void)
 0001:002BA830       oCSkyControler_Barrier::`scalar deleting destructor'(uint)
 0001:002BA860       oCSkyControler_Barrier::~oCSkyControler_Barrier(void)
 0001:002BA8D0       oCSkyControler_Barrier::RenderSkyPre(void)
 0001:002BAC80       oCAskBox::oCAskBox(void)
 0001:002BADC0       oCAskBox::`scalar deleting destructor'(uint)
 0001:002BADF0       oCAskBox::~oCAskBox(void)
 0001:002BAE70       oCAskBox::Init(oCNpc *,oCNpc *)
 0001:002BB140       oCAskBox::Delete(void)
 0001:002BB150       oCAskBox::DoAI(zCVob *,int &)
 0001:002BB2F0       oCAskBox::SetNeutral(void)
 0001:002BB3F0       oCAskBox::SetYes(void)
 0001:002BB4F0       oCAskBox::SetNo(void)
 0001:002BB5F0       oCAskBox::SetPosition(void)
 0001:002BB730       oCNpc::IsWaitingForAnswer(void)
 0001:002BB780       oCNpc::SetCurrentAnswer(int,int,oCNpc *)
 0001:002BBCA0       oCNpc::EV_Ask(oCMsgConversation *)
 0001:002BBD20       oCNpc::EV_WaitForQuestion(oCMsgConversation *)
 0001:002BBEF0       oCNpc::CanTalk(void)
 0001:002BBF10       oCNpc::SetCanTalk(int)
 0001:002BBF30       oCNpc::SetTalkingWith(oCNpc *,int)
 0001:002BBF60       oCNpc::GetTalkingWith(void)
 0001:002BBF70       oCNpc::StartTalkingWith(oCNpc *)
 0001:002BBF90       oCNpc::StopTalkingWith(void)
 0001:002BBFB0       oCNpc::GetTalkingWithMessage(oCNpc *)
 0001:002BC060       oCNpc::CanBeTalkedTo(void)
 0001:002BC240       oCNpc::StopRunningOU(void)
 0001:002BC3B0       oCNpc::AssessGivenItem(oCItem *,oCNpc *)
 0001:002BC550       oCNpc::GetTradeNpc(void)
 0001:002BC560       oCNpc::SetTradeNpc(oCNpc *)
 0001:002BC570       oCNpc::GetTradeItem(void)
 0001:002BC590       oCNpc::OpenTradeContainer(oCItem *,oCNpc *,int)
 0001:002BC770       oCNpc::CloseTradeContainer(void)
 0001:002BC820       oCNpc::OpenTradeOffer(oCNpc *)
 0001:002BC940       oCNpc::CheckItemReactModule(oCNpc *,oCItem *)
 0001:002BCAC0       oCNpc::ExchangeTradeModules(oCNpc *)
 0001:002BCCE0       zCListSort<oCNpc>::IsInList(oCNpc *)
 0001:002BCF80       oCDoc::oCDoc(zSTRING const &)
 0001:002BD210       oCDoc::`scalar deleting destructor'(uint)
 0001:002BD230       oCDoc::~oCDoc(void)
 0001:002BD320       oCDoc::Show(void)
 0001:002BD330       oCDoc::HandleEvent(int)
 0001:002BD360       oCDoc::MapInitCoordinates(float,float,float,float,float,float,float,float)
 0001:002BD3C0       oCDoc::MapDrawCoordinates(float,float)
 0001:002BD690       oCDoc::SetLevelName(zSTRING const &)
 0001:002BDA80       oCNpcFocus::InitFocusModes(void)
 0001:002BDBB0       oCNpcFocus::ExitFocusModes(void)
 0001:002BDC20       oCNpcFocus::SetFocusMode(int)
 0001:002BDD00       oCNpcFocus::GetFocusName(void)
 0001:002BDDD0       oCNpcFocus::oCNpcFocus(void)
 0001:002BDDF0       oCNpcFocus::~oCNpcFocus(void)
 0001:002BDE40       oCNpcFocus::Init(zSTRING &)
 0001:002BDE70       oCNpcFocus::Init(int)
 0001:002BDF20       oCNpcFocus::IsValid(int)
 0001:002BDF70       oCNpcFocus::GetMaxRange(void)
 0001:002BDF80       oCNpcFocus::GetRange2(void)
 0001:002BDF90       oCNpcFocus::GetItemThrowRange(void)
 0001:002BDFA0       oCNpcFocus::GetMobThrowRange(void)
 0001:002BDFB0       oCNpcFocus::HasLowerPriority(int,int)
 0001:002BE030       oCNpcFocus::GetPriority(int)
 0001:002BE070       oCNpcFocus::IsInRange(int,float)
 0001:002BE100       oCNpcFocus::IsInAngle(int,float,float)
 0001:002BE1E0       oCNpcFocus::IsNpcInRange(float)
 0001:002BE230       oCNpcFocus::IsNpcInAngle(float,float)
 0001:002BE280       oCNpcFocus::IsItemInRange(float)
 0001:002BE2B0       oCNpcFocus::IsItemInAngle(float,float)
 0001:002BE300       oCNpcFocus::IsMobInRange(float)
 0001:002BE330       oCNpcFocus::IsMobInAngle(float,float)
 0001:002BE380       oCNpcFocus::GetAzi(void)
 0001:002BE390       oCNpcFocus::StartHighlightningFX(oCNpc *)
 0001:002BE4C0       oCNpcFocus::StopHighlightningFX(void)
 0001:002BE5A0       oUlfi_StartUp(void)
 0001:002BE5B0       oUlfi_ShutDown(void)
 0001:002BE7A0       SearchVobByInstance(zCTree<zCVob> *,int &)
 0001:002BE810       oCGame::oCGame(void)
 0001:002BEE30       oCGame::SetDrawWaynet(int)
 0001:002BEE40       oCGame::GetDrawWaynet(void)
 0001:002BEE50       oCGame::GetStartPos(void)
 0001:002BEE80       oCGame::`scalar deleting destructor'(uint)
 0001:002BEEA0       oCGame::~oCGame(void)
 0001:002BF280       oCGame::TObjectRoutine::Release(void)
 0001:002BF2A0       oCGame::TObjectRoutine::~TObjectRoutine(void)
 0001:002BF2F0       oCGame::WorldInit(void)
 0001:002BF5C0       oCGame::CamInit(void)
 0001:002BF5D0       oCGame::CamInit(zCVob *,zCCamera *)
 0001:002BF5E0       oCGame::SetCameraPosition(void)
 0001:002BF680       oCGame::DesktopInit(void)
 0001:002BFC60       oCGame::UpdateViewSettings(void)
 0001:002BFD00       oCGame::NpcInit(void)
 0001:002BFD30       oCGame::NpcInit(zCTree<zCVob> *)
 0001:002BFD80       oCGame::Done(void)
 0001:002C0040       oCGame::TObjectRoutine::`scalar deleting destructor'(uint)
 0001:002C0060       oCGame::Init(void)
 0001:002C0C20       oCGame::SetGameInfo(oCGameInfo *)
 0001:002C0C70       oCGame::CallScriptStartup(void)
 0001:002C0F60       oCGame::CallScriptInit(void)
 0001:002C1250       oCGame::OpenSavescreen(bool)
 0001:002C15F0       oCViewGothicProgressBar::`scalar deleting destructor'(uint)
 0001:002C1610       oCViewGothicProgressBar::~oCViewGothicProgressBar(void)
 0001:002C1630       oCGame::CloseSavescreen(void)
 0001:002C1690       oCGame::OpenLoadscreen(bool,zSTRING)
 0001:002C1BD0       oCGame::CloseLoadscreen(void)
 0001:002C1C30       oCGame::GetGameWorld(void)
 0001:002C1C60       oCGame::GetSelfPlayerVob(void)
 0001:002C1C70       oCGame::GetTextView(void)
 0001:002C1C80       oCGame::GetWorldTimer(void)
 0001:002C1C90       oCGame::GetInfoManager(void)
 0001:002C1CA0       oCGame::GetNewsManager(void)
 0001:002C1CB0       oCGame::GetSVMManager(void)
 0001:002C1CC0       oCGame::GetTradeManager(void)
 0001:002C1CD0       oCGame::GetGuilds(void)
 0001:002C1CE0       oCGame::GetGameInfo(void)
 0001:002C1CF0       oCGame::GetPortalRoomManager(void)
 0001:002C1D00       oCGame::GetSpawnManager(void)
 0001:002C1D10       oCGame::GetHeroStatus(void)
 0001:002C1D50       oCGame::SetShowNews(oCNpc *)
 0001:002C1D90       oCGame::SetShowPlayerStatus(int)
 0001:002C1DF0       oCGame::GetShowPlayerStatus(void)
 0001:002C1E00       oCGame::UpdateScreenResolution(void)
 0001:002C2140       oCGame::UpdatePlayerStatus(void)
 0001:002C2C10       oCGame::RemoveHelperVobs(zCTree<zCVob> *)
 0001:002C2CD0       oCGame::CreateVobList(zCList<zCVob> &,zCTree<zCVob> *,zTVobType)
 0001:002C2D20       oCGame::SetAsPlayer(zSTRING const &)
 0001:002C2FA0       oCGame::SetupPlayers(oCNpc * &,zSTRING const &)
 0001:002C3710       oCGame::SetRanges(void)
 0001:002C3760       oCGame::SetRangesByCommandLine(void)
 0001:002C3A60       oCGame::EnvironmentInit(void)
 0001:002C3BE0       oCGame::LoadParserFile(zSTRING const &)
 0001:002C3DE0       oCGame::SetTime(int,int,int)
 0001:002C3E70       oCGame::GetTime(int &,int &,int &)
 0001:002C3EA0       oCGame::LoadWorld(zSTRING const &,zCWorld::zTWorldLoadMode)
 0001:002C3EF0       oCGame::SaveWorld(zSTRING const &,zCWorld::zTWorldSaveMode,int,int)
 0001:002C4020       oCGame::RemovePlayerFromWorld(void)
 0001:002C4070       oCGame::InsertPlayerIntoWorld(oCNpc *,zMAT4 &)
 0001:002C4120       oCGame::PreSaveGameProcessing(int)
 0001:002C41C0       oCGame::PostSaveGameProcessing(void)
 0001:002C4250       oCGame::WriteSavegame(int,int)
 0001:002C4B50       oCGame::CheckObjectConsistency(int)
 0001:002C4ED0       oCGame::ClearGameState(void)
 0001:002C51D0       oCGame::InitNpcAttitudes(void)
 0001:002C5240       oCGame::RecurseCacheVobs(zCTree<zCVob> *)
 0001:002C52D0       oCGame::CacheVisualsIn(void)
 0001:002C5530       oCGame::CacheVisualsOut(void)
 0001:002C55A0       oCGame::LoadGame(int,zSTRING const &)
 0001:002C57D0       oCGame::LoadSavegame(int,int)
 0001:002C6290       oCGame::ChangeLevel(zSTRING const &,zSTRING const &)
 0001:002C6AF0       oCGame::TriggerChangeLevel(zSTRING const &,zSTRING const &)
 0001:002C6D40       oCGame::CheckIfSavegameExists(zSTRING const &)
 0001:002C6F70       oCGame::RenderWaynet(void)
 0001:002C6FB0       oCGame::ShowDebugInfos(void)
 0001:002C76A0       oCGame::Render(void)
 0001:002C7AD0       oCGame::Pause(int)
 0001:002C7D50       oCGame::Unpause(void)
 0001:002C7E80       oCGame::DeleteNpcs(oCNpc *,oCNpc *,float)
 0001:002C7FC0       Game_Particle_Changed(zSTRING const &)
 0001:002C7FD0       Game_OpenParticleConsole(zSTRING &)
 0001:002C8000       Game_CloseParticleConsole(void)
 0001:002C8030       Game_DeleteAllPfx(zCTree<zCVob> *)
 0001:002C80A0       nullsub_56
 0001:002C80B0       oCGame::LoadWorld(int,zSTRING const &)
 0001:002C8530       oCGame::InitWorldSavegame(int &,zSTRING &)
 0001:002C86F0       oCGame::EnterWorld(oCNpc *,int,zSTRING const &)
 0001:002C8A50       oCGame::CompileWorld(void)
 0001:002C8C10       oCGame::LoadWorldStartup(zSTRING const &)
 0001:002C9010       oCGame::LoadWorldStat(zSTRING)
 0001:002C9280       oCGame::LoadWorldDyn(zSTRING const &)
 0001:002C9770       oCGame::IsInWorld(zSTRING const &)
 0001:002C9910       oCGame::RenderBlit(void)
 0001:002C9930       oCGame::Sort_Routine(oCGame::TObjectRoutine *,oCGame::TObjectRoutine *)
 0001:002C9960       oCGame::InsertObjectRoutine(int,zSTRING const &,int,int,int)
 0001:002C9B20       oCGame::ResetObjectRoutineList(void)
 0001:002C9B40       oCGame::ClearObjectRoutineList(void)
 0001:002C9BB0       oCGame::CheckObjectRoutines(void)
 0001:002C9CB0       oCGame::SetObjectRoutineTimeChange(int,int,int,int)
 0001:002CA270       oCGame::ToggleShowFreePoints(void)
 0001:002CA290       oCGame::ShowFreePoints(void)
 0001:002CA5F0       oCGame::RefreshNpcs(void)
 0001:002CA640       oCGame::DeleteTorches(void)
 0001:002CA7C0       Game_CreateInstance(zSTRING &,zSTRING &)
 0001:002CACF0       Game_GotoWP(zSTRING const &,zSTRING &)
 0001:002CAED0       Game_SaveSCPos(void)
 0001:002CAF10       Game_LoadSCPos(void)
 0001:002CAF60       Game_ToggleTestMode(int)
 0001:002CAF80       Game_ToggleHoldTime(void)
 0001:002CAFA0       Game_ParserDebug(zSTRING &)
 0001:002CAFC0       Game_ParserDebugOff(void)
 0001:002CAFD0       Game_PlaySound(zSTRING &)
 0001:002CB010       Game_ToggleScreenMode(void)
 0001:002CB040       Edit_Changed(zSTRING const &)
 0001:002CB0A0       oCGame::ConsoleEvalFunc(zSTRING const &,zSTRING &)
 0001:002CEE50       zSTRING::zSTRING(long)
 0001:002CEF50       operator==(zSTRING const &,char const * const)
 0001:002CEFB0       zCVob::SetStaticVob(int)
 0001:002CEFD0       zCVob::GetVobType(void)
 0001:002CEFE0       zCVob::SetDrawBBox3D(int)
 0001:002CF000       zCVob::SetCollDet(int)
 0001:002CF020       zCWorld::GetBspTree(void)
 0001:002CF030       oCMsgMovement::operator new(uint)
 0001:002CF050       oCTriggerChangeLevel::operator new(uint)
 0001:002CF190       Game_StartParticleEffects(zCTree<zCVob> *)
 0001:002CF1F0       Game_InitConsole(void)
 0001:002D1090       Game_OpenConsole(void)
 0001:002D10E0       Game_ChangeAIConsole(zSTRING const &)
 0001:002D1290       Game_ToggleAIConsole(void)
 0001:002D16B0       Game_SpeciesChanged(zSTRING const &)
 0001:002D1C60       Game_OpenSpeciesConsole(void)
 0001:002D28B0       oCNpc::GetBloodTexture(void)
 0001:002D2900       Game_OpenFightConsole(void)
 0001:002D2B90       oCGame::IsDebuggingChannel(int)
 0001:002D2BB0       oCGame::IsDebuggingInstance(zCVob *)
 0001:002D2BF0       oCGame::IsDebuggingAllInstances(void)
 0001:002D2C00       oCGame::OpenView(oCGame::oEGameDialogView)
 0001:002D2C30       oCGame::CloseView(oCGame::oEGameDialogView)
 0001:002D2C60       zCArray<zCVob *>::Insert(zCVob * const &)
 0001:002D2D30       zCArray<zCVob *>::Remove(zCVob * const &)
 0001:002D2D80       zCArray<zCVob *>::IsInList(zCVob * const &)
 0001:002D2DC0       zCArray<zCVisual *>::~zCArray<zCVisual *>(void)
 0001:002D2DE0       zCArray<zCVisual *>::DeleteList(void)
 0001:002D2E00       zCListSort<oCGame::TObjectRoutine>::~zCListSort<oCGame::TObjectRoutine>(void)
 0001:002D2E30       zCListSort<oCGame::TObjectRoutine>::DeleteListDatas(void)
 0001:002D2E90       zCListSort<oCGame::TObjectRoutine>::`scalar deleting destructor'(uint)
 0001:002D2EC0       zCArray<zCVisual *>::InsertEnd(zCVisual * const &)
 0001:002D2F90       zCArray<zCVisual *>::AllocDelta(int)
 0001:002D3260       NotifyInfoToSpy(zSTRING &)
 0001:002D3320       NotifyInfoToSpy(char *,char *,char *)
 0001:002D35B0       PlayVideo(void)
 0001:002D3690       PlayVideoEx(void)
 0001:002D3780       oCGame::DefineExternals_Ulfi(zCParser *)
 0001:002D8B80       zSTRING::Init(void)
 0001:002DFCC0       oCMOB::operator delete(void *)
 0001:002E10B0       oCMsgState::operator delete(void *)
 0001:002FA93A       std::locale::classic(void)
 0001:002FA95A       std::locale::classic(void)
 0001:002FA9A9       std::locale::classic(void)
 0001:002FA9C9       std::locale::classic(void)
 0001:002FA9E9       std::locale::classic(void)
 0001:002FAA00       zCList<oCLogTopic>::Insert(oCLogTopic *)
 0001:002FACC0       ToggleShowStateDebug(oCNpc *)
 0001:002FAED0       ToggleShowAI(oCNpc *)
 0001:002FAF40       oCGame::SwitchCamToNextNpc(void)
 0001:002FB170       oCGame::HandleEvent(int)
 0001:002FC560       oCGame::TestKeys(int)
 0001:002FF0E0       oCGame::IA_TestWay(int)
 0001:002FF9F0       zCVobWaypoint::operator delete(void *)
 0001:002FFC30       oCGuilds::oCGuilds(void)
 0001:002FFD20       oCGuilds::~oCGuilds(void)
 0001:002FFD40       oCGuilds::GetAttitude(int,int)
 0001:002FFF70       oCGuilds::SetAttitude(int,int,uchar)
 0001:002FFFA0       oCGuilds::InitGuildTable(zSTRING const &)
 0001:003001E0       oCGuilds::GetGuildName(int)
 0001:00300360       oCGuilds::SaveGuildTable(zCArchiver &)
 0001:00300390       oCGuilds::LoadGuildTable(zCArchiver &)
 0001:003005D0       oCHelp::oCHelp(void)
 0001:00300D70       oCHelp::~oCHelp(void)
 0001:00300D8F       CDaoRecordset::MoveNext(void)
 0001:00300DA0       oCHelp::CalcPos(void)
 0001:00300E50       oCHelp::Toggle(void)
 0001:00301000       oCHelp::Update(void)
 0001:00301010       oCHelp::Redraw(zCVob *)
 0001:003013F0       oCInfoManager::oCInfoManager(zCParser *)
 0001:003016F0       oCInfoManager::CompareInfos(oCInfo *,oCInfo *)
 0001:00301720       oCInfoManager::~oCInfoManager(void)
 0001:003017B0       oCInfoManager::GetInformation(oCNpc *,oCNpc *,int)
 0001:00301910       oCInfoManager::GetInformation(int)
 0001:00301940       oCInfoManager::GetInfoCount(oCNpc *,oCNpc *)
 0001:00301AA0       oCInfoManager::GetInfoCountImportant(oCNpc *,oCNpc *)
 0001:00301C00       oCInfoManager::GetInfoCountUnimportant(oCNpc *,oCNpc *)
 0001:00301D60       oCInfoManager::GetInfo(oCNpc *,oCNpc *,int)
 0001:00301EC0       oCInfoManager::GetInfoImportant(oCNpc *,oCNpc *,int)
 0001:00302030       oCInfoManager::GetInfoUnimportant(oCNpc *,oCNpc *,int)
 0001:003021A0       oCInfoManager::InformationTold(int)
 0001:003021E0       oCInfoManager::Archive(zCArchiver &)
 0001:00302240       oCInfoManager::Unarchive(zCArchiver &)
 0001:00302390       oCInfoManager::RestoreParserInstances(void)
 0001:003023B0       oCInfo::oCInfo(void)
 0001:00302420       oCInfo::~oCInfo(void)
 0001:003024F0       oCInfo::Tpd::~Tpd(void)
 0001:00302540       oCInfo::SetInstance(int)
 0001:003026E0       oCInfo::GetInstance(void)
 0001:003026F0       oCInfo::DoCheck(void)
 0001:003028E0       oCInfo::GetNpcID(void)
 0001:003028F0       oCInfo::GetConditionFunc(void)
 0001:00302900       oCInfo::WasTold(void)
 0001:00302910       oCInfo::SetTold(int)
 0001:00302920       oCInfo::GetDataSize(void)
 0001:00302930       oCInfo::GetDataAdr(void)
 0001:00302940       oCInfo::GetText(void)
 0001:00302950       oCInfo::InfoConditions(void)
 0001:00302970       oCInfo::Info(void)
 0001:00302990       oCInfo::Archive(zCArchiver &)
 0001:003029D0       oCInfo::Unarchive(zCArchiver &)
 0001:00302B00       oCInfo::RestoreParserInstance(void)
 0001:00302B20       oCInfo::AddChoice(zSTRING,int)
 0001:00302C20       oCInfo::RemoveChoice(zSTRING)
 0001:00302D70       oCInfo::RemoveAllChoices(void)
 0001:00302E00       oCInfoChoice::~oCInfoChoice(void)
 0001:00302E50       zCList<oCInfoChoice>::~zCList<oCInfoChoice>(void)
 0001:00302E80       zCListSort<oCInfo>::~zCListSort<oCInfo>(void)
 0001:00302EB0       zCList<oCInfoChoice>::`scalar deleting destructor'(uint)
 0001:00302EF0       zCListSort<oCInfo>::`scalar deleting destructor'(uint)
 0001:003035E0       oCItemContainer::GetInvSplitScreen(void)
 0001:00303610       oCItemContainer::GetInvMaxColumns(void)
 0001:00303660       oCItemContainer::GetInvMaxRows(void)
 0001:003036B0       oCItemContainer::TransferCountToAmount(short)
 0001:003036F0       oCItemContainer::GetValueMultiplier(void)
 0001:00303810       oCItemContainer::GetCurrencyInstanceName(void)
 0001:00303A00       oCItemContainer::GetCurrencyInstance(void)
 0001:00303AA0       oCItemContainer::CreateCurrencyItem(short)
 0001:00303B50       oCItemContainer::RemoveCurrencyItem(oCItem *)
 0001:00303B80       oCItemContainer::Container_PrepareDraw(void)
 0001:00303B90       oCItemContainer::Container_Draw(void)
 0001:00303BC0       oCItemContainer::GetNextContainerLeft(oCItemContainer *)
 0001:00303C60       oCItemContainer::GetNextContainerRight(oCItemContainer *)
 0001:00303D00       oCItemContainer::oCItemContainer(void)
 0001:00303F10       oCItemContainer::GetName(void)
 0001:00303F60       oCItemContainer::SetName(zSTRING &)
 0001:003040A0       oCItemContainer::GetMode(void)
 0001:003040B0       oCItemContainer::SetMode(int)
 0001:003040D0       oCItemContainer::IsActive(void)
 0001:003040E0       oCItemContainer::DisableManipulateItems(int)
 0001:003040F0       oCItemContainer::CanManipulateItems(void)
 0001:00304100       oCItemContainer::DisableTransferMoreThanOneItem(int)
 0001:00304120       oCItemContainer::CanTransferMoreThanOneItem(void)
 0001:00304130       oCItemContainer::GetTransferCount(void)
 0001:00304140       oCItemContainer::SetTransferCount(short)
 0001:00304150       oCItemContainer::IncTransferCount(short)
 0001:003052C0       oCItemContainer::`scalar deleting destructor'(uint)
 0001:003052E0       oCItemContainer::~oCItemContainer(void)
 0001:00305430       oCItemContainer::LoadGrafix(void)
 0001:00305870       oCItemContainer::Init(int,int,int)
 0001:00305A70       oCItemContainer::GetSize(int &,int &)
 0001:00305A90       oCItemContainer::GetPosition(int &,int &)
 0001:00305AB0       oCItemContainer::JumpOffset(int &,int &)
 0001:00305B60       oCItemContainer::DrawCategory(void)
 0001:00305E40       oCItemContainer::DrawItemInfo(oCItem *,zCWorld *)
 0001:003066B0       oCItemContainer::Draw(void)
 0001:003074F0       oCItemContainer::SetContents(zCListSort<oCItem> *)
 0001:00307540       oCItemContainer::GetContents(void)
 0001:00307550       oCItemContainer::Open(int,int,int)
 0001:003076D0       oCItemContainer::OpenPassive(int,int,int)
 0001:00307F20       oCItemContainer::IsPassive(void)
 0001:00307F30       oCItemContainer::Close(void)
 0001:00308200       oCItemContainer::IsOpen(void)
 0001:00308230       oCItemContainer::Activate(void)
 0001:00308290       oCItemContainer::Deactivate(void)
 0001:003082C0       oCItemContainer::GetSelectedItem(void)
 0001:003082F0       oCItemContainer::GetSelectedItemCount(void)
 0001:00308360       oCItemContainer::Insert(oCItem *)
 0001:00308430       oCItemContainer::Remove(oCItem *)
 0001:003084D0       oCItemContainer::RemoveByPtr(oCItem *,int)
 0001:003084E0       oCItemContainer::Remove(oCItem *,int)
 0001:00308590       oCItemContainer::DeleteContents(void)
 0001:00308630       zCListSort<oCItem>::`scalar deleting destructor'(uint)
 0001:00308660       oCItemContainer::CheckSelectedItem(void)
 0001:00308740       oCItemContainer::NextItem(void)
 0001:003089A0       oCItemContainer::NextItemLine(void)
 0001:00308B00       oCItemContainer::PrevItem(void)
 0001:00308D30       oCItemContainer::PrevItemLine(void)
 0001:00308E10       oCItemContainer::IsEmpty(void)
 0001:00308E40       oCItemContainer::IsSplitScreen(void)
 0001:00308F40       oCItemContainer::TransferItem(int,int)
 0001:00309150       oCItemContainer::ActivateNextContainer(int)
 0001:00309270       oCItemContainer::Archive(zCArchiver &)
 0001:00309460       oCItemContainer::Unarchive(zCArchiver &)
 0001:00309640       oCItemContainer::HandleEvent(int)
 0001:00309BF0       oCStealContainer::oCStealContainer(void)
 0001:00309C10       oCStealContainer::`scalar deleting destructor'(uint)
 0001:00309C30       oCStealContainer::~oCStealContainer(void)
 0001:00309DB0       oCStealContainer::SetOwner(oCNpc *)
 0001:00309DD0       oCStealContainer::GetOwner(void)
 0001:00309DE0       oCStealContainer::CreateList(void)
 0001:0030A090       oCStealContainer::HandleEvent(int)
 0001:0030A3C0       oCNpcContainer::oCNpcContainer(void)
 0001:0030A3E0       oCNpcContainer::`scalar deleting destructor'(uint)
 0001:0030A400       oCNpcContainer::~oCNpcContainer(void)
 0001:0030A570       oCNpcContainer::CreateList(void)
 0001:0030A6F0       oCNpcContainer::HandleEvent(int)
 0001:0030A9F0       oCNpcContainer::Insert(oCItem *)
 0001:0030AA30       oCNpcContainer::Remove(oCItem *)
 0001:0030AAF0       oCNpcInventory::oCNpcInventory(void)
 0001:0030ABE0       oCNpcInventory::`scalar deleting destructor'(uint)
 0001:0030AC00       oCNpcInventory::~oCNpcInventory(void)
 0001:0030ADB0       oCNpcInventory::ClearInventory(void)
 0001:0030AF10       oCNpcInventory::Open(int,int,int)
 0001:0030B2F0       oCNpcInventory::Close(void)
 0001:0030B310       oCNpcInventory::Draw(void)
 0001:0030B320       oCNpcInventory::SetOwner(oCNpc *)
 0001:0030B330       oCNpcInventory::GetOwner(void)
 0001:0030B340       oCNpcInventory::GetNumItemsInCategory(void)
 0001:0030B450       oCNpcInventory::GetItem(int)
 0001:0030B690       oCNpcInventory::GetCategory(oCItem *)
 0001:0030B730       oCNpcInventory::Insert(oCItem *)
 0001:0030B970       oCNpcInventory::GetAmount(int)
 0001:0030BA80       oCNpcInventory::IsIn(oCItem *,int)
 0001:0030BAC0       oCNpcInventory::IsIn(zSTRING const &,int)
 0001:0030BAF0       oCNpcInventory::IsIn(int,int)
 0001:0030BBE0       oCNpcInventory::Remove(oCItem *)
 0001:0030BC70       oCNpcInventory::RemoveByPtr(oCItem *,int)
 0001:0030BE20       oCNpcInventory::Remove(oCItem *,int)
 0001:0030C080       oCNpcInventory::Remove(int,int)
 0001:0030C170       oCNpcInventory::Remove(zSTRING const &,int)
 0001:0030C1A0       oCNpcInventory::IsEmpty(int,int)
 0001:0030C210       oCNpcInventory::Archive(zCArchiver &)
 0001:0030C550       oCNpcInventory::Unarchive(zCArchiver &)
 0001:0030C950       Inventory_GetCategory(oCItem *)
 0001:0030C97F       __RTC_NumErrors
 0001:0030C9B4       __RTC_NumErrors_0
 0001:0030C9E0       _GetCategorySelfPlayerPrefix(void)
 0001:0030CBD0       oCNpcInventory::DrawCategory(void)
 0001:0030CE00       oCNpcInventory::HandleTrade(int)
 0001:0030D040       oCNpcInventory::HandleEvent(int)
 0001:0030E390       oCNpcInventory::CheckForEquippedItems(int)
 0001:0030E4D0       oCNpcInventory::CanCarry(oCItem *)
 0001:0030E600       oCNpcInventory::SetPackAbility(int)
 0001:0030E620       oCNpcInventory::UnpackCategory(void)
 0001:0030E630       oCNpcInventory::GetNumItemsInPackString(void)
 0001:0030E720       oCNpcInventory::GetPackedItemBySlot(int,zSTRING &)
 0001:0030E860       oCNpcInventory::CreateFromPackString(zSTRING const &)
 0001:0030E8F0       oCNpcInventory::GetPackedItemInfo(zSTRING const &,int,int &,int &)
 0001:0030ECB0       oCNpcInventory::PackSingleItem(oCItem *)
 0001:0030F020       oCNpcInventory::PackAllItems(int)
 0001:0030F030       oCNpcInventory::UnpackAllItems(void)
 0001:0030F040       oCNpcInventory::PackItemsInCategory(int)
 0001:0030FA20       oCNpcInventory::UnpackItemsInCategory(void)
 0001:0030FF80       zCList<oCItemContainer>::~zCList<oCItemContainer>(void)
 0001:0030FFB0       zCList<oCItemContainer>::Insert(oCItemContainer *)
 0001:00310000       zCListSort<oCItem>::~zCListSort<oCItem>(void)
 0001:00310030       zCListSort<oCItem>::DeleteListDatas(void)
 0001:003100A0       zCListSort<oCItem>::InsertSort(oCItem *)
 0001:00310120       zCListSort<oCItem>::GetNumInList(void)
 0001:00310140       zCList<oCItemContainer>::`scalar deleting destructor'(uint)
 0001:00310270       oCItem::SetLightingSwell(int)
 0001:00310280       oCItem::GetLightingSwell(void)
 0001:00310290       oCItem::oCItem(void)
 0001:003103E0       oCVob::DoFocusCheckBBox(void)
 0001:003103F0       oCVob::SetSoundMaterial(oTSndMaterial)
 0001:00310400       oCVob::GetCSStateFlags(void)
 0001:00310410       oCItem::_GetClassDef(void)
 0001:00310420       oCItem::GetInstance(void)
 0001:00310430       oCItem::GetSoundMaterial(void)
 0001:00310440       oCItem::`scalar deleting destructor'(uint)
 0001:00310470       oCItem::oCItem(zSTRING &,int)
 0001:003105D0       oCItem::oCItem(int,int)
 0001:00310730       oCItem::~oCItem(void)
 0001:00310910       oCItem::SetVisual(zCVisual *)
 0001:00310930       oCItem::CreateVisual(void)
 0001:00310970       oCItem::Init(void)
 0001:00310BD0       oCItem::InitByScript(int,int)
 0001:003110E0       oCItem::GetDescription(void)
 0001:003110F0       oCItem::GetText(int)
 0001:00311160       oCItem::GetCount(int)
 0001:00311180       oCItem::GetHealMode(int &)
 0001:00311200       oCItem::GetProtectionByIndex(oEIndexDamage)
 0001:00311210       oCItem::GetProtectionByType(oETypeDamage)
 0001:003112B0       oCItem::GetProtectionByMode(ulong)
 0001:00311340       oCItem::GetFullProtection(void)
 0001:00311360       oCItem::CopyDamage(oCItem *)
 0001:003113A0       oCItem::GetDamageByIndex(oEIndexDamage)
 0001:003113B0       oCItem::GetDamageByType(oETypeDamage)
 0001:00311450       oCItem::GetDamageByMode(ulong)
 0001:003114E0       oCItem::GetDamages(ulong *)
 0001:00311500       oCItem::GetFullDamage(void)
 0001:00311520       oCItem::GetDamageTypes(void)
 0001:00311530       oCItem::HasDamageType(oETypeDamage)
 0001:00311550       oCItem::IsDeadly(void)
 0001:00311570       oCItem::IsOneHandWeapon(void)
 0001:003115A0       oCItem::MultiSlot(void)
 0001:00311610       oCItem::SplitSlot(void)
 0001:00311650       oCItem::GetValue(void)
 0001:003116B0       oCItem::GetWeight(void)
 0001:003116D0       oCItem::HasFlag(int)
 0001:003116F0       oCItem::ClearFlag(int)
 0001:00311710       oCItem::SetFlag(int)
 0001:00311730       oCItem::TwoHanded(void)
 0001:00311760       oCItem::IsOwned(int,int)
 0001:003117A0       oCItem::IsOwnedByNpc(int)
 0001:003117C0       oCItem::IsOwnedByGuild(int)
 0001:003117E0       oCItem::GetDisguiseGuild(void)
 0001:003117F0       oCItem::AddManipulation(void)
 0001:00311850       oCItem::GetSoundMaterial_AM(zCSoundManager::zTSndManMedium &,oTSndMaterial &,int)
 0001:00311870       oCItem::Identify(void)
 0001:00311880       oCItem::GetName(int)
 0001:003118D0       oCItem::GetStatus(void)
 0001:00311A30       oCItem::UseItem(void)
 0001:00311A40       oCItem::GetVisualChange(void)
 0001:00311B30       oCItem::GetEffectName(void)
 0001:00311B80       oCItem::GetStateEffectFunc(int)
 0001:00311BA0       oCItem::SplitItem(int)
 0001:00311C00       oCItem::RemoveEffect(void)
 0001:00311C40       oCItem::InsertEffect(void)
 0001:00311DF0       oCItem::ThisVobAddedToWorld(zCWorld *)
 0001:00311EA0       oCItem::ThisVobRemovedFromWorld(zCWorld *)
 0001:00311F10       oCItem::RotateForInventory(int)
 0001:003122E0       oCItem::RotateInInventory(void)
 0001:003123C0       oCItem::RenderItem(int,int)
 0001:00312800       oCItem::RenderItemPlaceCamera(zCCamera *,float)
 0001:00312AC0       oCItem::RenderItem(zCWorld *,zCViewBase *,float)
 0001:00312CC0       oCItem::GetScriptInstance(zSTRING * &,int &)
 0001:00312CF0       oCItem::SetByScriptInstance(zSTRING const *,int)
 0001:00312D30       oCItem::GetInstanceName(void)
 0001:00312D70       oCItem::Archive(zCArchiver &)
 0001:00312EB0       oCItem::Unarchive(zCArchiver &)
 0001:00312F40       oCItem::GetAIVobMove(void)
 0001:00313020       oCItem::Render(zTRenderContext &)
 0001:00313440       oCItem::_CreateNewInstance(void)
 0001:003134A0       oCItem::operator delete(void *)
 0001:003134C0       zCArray<zSEnvValues>::InsertEnd(zSEnvValues const &)
 0001:003137E0       oCTradeManager::oCTradeManager(zCParser *)
 0001:00313A30       oCTradeManager::~oCTradeManager(void)
 0001:00313A80       oCTradeManager::GetModule(oCNpc *,oCNpc *,oCItem *)
 0001:00313C40       oCItemReactModule::oCItemReactModule(int)
 0001:00313C80       oCItemReactModule::~oCItemReactModule(void)
 0001:00313C90       oCItemReactModule::Validate(void)
 0001:00313CA0       oCItemReactModule::Conditions(int,int)
 0001:00313CB2       std::basic_streambuf<wchar_t,std::char_traits<wchar_t>>::setbuf(wchar_t *,int)
 0001:00313CD0       oCItemReactModule::GetOfferedInstance(int &,int &)
 0001:00313CF0       oCItemReactModule::StartReaction(int)
 0001:00313D10       oCItemReactModule::GetDataSize(void)
 0001:00313D20       oCItemReactModule::GetNpcInstance(void)
 0001:00313FD0       oCMissionManager::oCMissionManager(void)
 0001:00314000       oCMissionManager::~oCMissionManager(void)
 0001:003140F0       oCMissionManager::ClearMissions(void)
 0001:00314140       oCMissionManager::SortMissions(void const *,void const *)
 0001:00314170       oCMissionManager::GetMission(int)
 0001:003141D0       oCMissionManager::CreateAllMissions(void)
 0001:003143B0       oCMissionManager::OfferThisMission(oCNpc *,oCNpc *,int)
 0001:00314680       oCMissionManager::GetAvailableMission(oCNpc *,oCNpc *,int)
 0001:00314950       oCMissionManager::GetStatus(oCNpc *,int)
 0001:00314B10       oCMissionManager::SetStatus(oCNpc *,int,int)
 0001:00314D40       oCMissionManager::CancelMission(oCNpc *,int)
 0001:00314F10       oCMissionManager::CreateMissionInfoList(oCNpc *,zCArray<oCMission *> &)
 0001:00315160       oCMissionManager::TestNextMission(void)
 0001:003151A0       oCMissionManager::Archive(zCArchiver &)
 0001:003151E0       oCMissionManager::Unarchive(zCArchiver &)
 0001:00315390       oCMission::oCMission(int)
 0001:003154C0       oCMission::~oCMission(void)
 0001:003155B0       oCMission::AddEntry(zSTRING const &)
 0001:003156C0       oCMission::SetCurrentUser(oCNpc *,oCNpc *)
 0001:00315800       oCMission::GetCurrentUser(oCNpc * &,oCNpc * &)
 0001:00315820       oCMission::GetStatusInfo(void)
 0001:00315970       oCMission::CheckMission(void)
 0001:003159E0       oCMission::IsAvailable(void)
 0001:003159F0       oCMission::OfferConditions(void)
 0001:00315BA0       oCMission::Offer(void)
 0001:00315D50       oCMission::SuccessConditions(void)
 0001:00315F00       oCMission::Success(void)
 0001:003160B0       oCMission::FailureConditions(void)
 0001:00316260       oCMission::Failure(void)
 0001:00316410       oCMission::ObsoleteConditions(void)
 0001:003165C0       oCMission::Obsolete(void)
 0001:00316770       oCMission::Running(void)
 0001:00316920       oCMission::GetStatus(void)
 0001:00316930       oCMission::SetStatus(int)
 0001:00316A70       oCMission::OnTime(void)
 0001:00316AD0       oCMission::Archive(zCArchiver &)
 0001:00316BB0       oCMission::Unarchive(zCArchiver &)
 0001:00316DB0       zCArraySort<oCMission *>::~zCArraySort<oCMission *>(void)
 0001:00316DD0       zCArraySort<oCMission *>::InsertSort(oCMission * const &)
 0001:00316F20       zCArray<oCMission::TMisStatus *>::~zCArray<oCMission::TMisStatus *>(void)
 0001:00316F40       zCArraySort<oCMission *>::AllocDelta(int)
 0001:00316FA0       zCArray<oCMission::TMisStatus *>::AllocDelta(int)
 0001:00317000       zCArray<oCMission::TMisStatus *>::InsertEnd(oCMission::TMisStatus * const &)
 0001:00317590       oCMOB::_CreateNewInstance(void)
 0001:003177E0       oCMobInter::_CreateNewInstance(void)
 0001:00317840       oCMobInter::operator delete(void *)
 0001:00317A50       oCMobBed::_CreateNewInstance(void)
 0001:00317C80       oCMobInter::GetState(void)
 0001:00317C90       oCMobInter::GetStateNum(void)
 0001:00317CA0       oCMobInter::GetDirection(void)
 0001:00317CB0       oCMobInter::SetDirection(oCMobInter::TMobInterDirection)
 0001:00317CC0       oCMobInter::IsOccupied(void)
 0001:00317CD0       oCMobInter::IsIn(int)
 0001:00317CE0       oCMobInter::GetTriggerTarget(int)
 0001:00317D00       oCMobBed::operator delete(void *)
 0001:00317D20       oCMobBed::_GetClassDef(void)
 0001:00317F20       oCMobSwitch::_CreateNewInstance(void)
 0001:00318040       oCMobSwitch::operator delete(void *)
 0001:00318060       oCMobSwitch::_GetClassDef(void)
 0001:00318440       oCMobContainer::_CreateNewInstance(void)
 0001:00318610       oCMobLockable::_GetClassDef(void)
 0001:00318620       oCMobLockable::SetLocked(int)
 0001:00318640       oCMobLockable::SetKeyInstance(zSTRING const &)
 0001:00318780       oCMobLockable::SetPickLockStr(zSTRING const &)
 0001:003188C0       oCMobLockable::OnMessage(zCEventMessage *,zCVob *)
 0001:00318970       oCMobContainer::operator delete(void *)
 0001:00318990       oCMobContainer::_GetClassDef(void)
 0001:00318B90       oCMobWheel::_CreateNewInstance(void)
 0001:00318CC0       oCMobWheel::operator delete(void *)
 0001:00318CE0       oCMobWheel::_GetClassDef(void)
 0001:00318EE0       oCMobLadder::_CreateNewInstance(void)
 0001:00319020       oCMobLadder::operator delete(void *)
 0001:00319040       oCMobLadder::_GetClassDef(void)
 0001:00319050       oCMobLadder::DoFocusCheckBBox(void)
 0001:00319250       oCMobDoor::_CreateNewInstance(void)
 0001:00319400       oCMobDoor::operator delete(void *)
 0001:00319420       oCMobDoor::_GetClassDef(void)
 0001:00319430       oCMobDoor::Open(oCNpc *)
 0001:00319440       oCMobDoor::Close(oCNpc *)
 0001:00319640       oCMobFire::_CreateNewInstance(void)
 0001:00319830       oCMobFire::operator delete(void *)
 0001:00319850       oCMobFire::_GetClassDef(void)
 0001:00319A50       oCMobItemSlot::_CreateNewInstance(void)
 0001:00319AE0       oCMobItemSlot::operator delete(void *)
 0001:00319B00       oCMobItemSlot::_GetClassDef(void)
 0001:00319D00       oCDummyVobGenerator::_CreateNewInstance(void)
 0001:00319DA0       oCDummyVobGenerator::operator delete(void *)
 0001:00319DC0       oCDummyVobGenerator::_GetClassDef(void)
 0001:00319DD0       oCDummyVobGenerator::`scalar deleting destructor'(uint)
 0001:00319E00       oCDummyVobGenerator::~oCDummyVobGenerator(void)
 0001:0031A030       oCMobMsg::_CreateNewInstance(void)
 0001:0031A1D0       std::char_traits<char>::copy(char *,char const *,uint)
 0001:0031A200       oCMobMsg::_GetClassDef(void)
 0001:0031A210       oCMobMsg::IsNetRelevant(void)
 0001:0031A220       oCMobMsg::oCMobMsg(oCMobMsg::TMobMsgSubType,oCNpc *)
 0001:0031A360       oCMobMsg::`scalar deleting destructor'(uint)
 0001:0031A390       oCMobMsg::~oCMobMsg(void)
 0001:0031A3A0       oCMobMsg::oCMobMsg(void)
 0001:0031A4D0       oCMobMsg::oCMobMsg(oCMobMsg::TMobMsgSubType,oCNpc *,int)
 0001:0031A620       oCMobMsg::Pack(zCBuffer &,zCEventManager *)
 0001:0031A6A0       oCMobMsg::Unpack(zCBuffer &,zCEventManager *)
 0001:0031A740       oCMobMsg::MD_GetNumOfSubTypes(void)
 0001:0031A750       oCMobMsg::MD_GetSubTypeString(int)
 0001:0031A8F0       oCMOB::oCMOB(void)
 0001:0031AA20       oCMOB::_GetClassDef(void)
 0001:0031AA30       oCMOB::`scalar deleting destructor'(uint)
 0001:0031AA60       oCMOB::~oCMOB(void)
 0001:0031ABF0       oCMOB::SetVisual(zCVisual *)
 0001:0031AC10       oCMOB::SetName(zSTRING const &)
 0001:0031AC30       oCMOB::GetName(void)
 0001:0031AD00       oCMOB::GetScemeName(void)
 0001:0031AEC0       oCMOB::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:0031AED0       oCMOB::OnMessage(zCEventMessage *,zCVob *)
 0001:0031AEE0       oCMOB::GetModel(void)
 0001:0031AF00       oCMOB::SetMoveable(int)
 0001:0031AF20       oCMOB::IsMoveable(void)
 0001:0031AF30       oCMOB::SetSoundMaterial(oTSndMaterial)
 0001:0031AF50       oCMOB::GetSoundMaterial(void)
 0001:0031AF60       oCMOB::GetSoundMaterial_AM(zCSoundManager::zTSndManMedium &,oTSndMaterial &,int)
 0001:0031AF80       oCMOB::SetOwner(zSTRING const &,zSTRING const &)
 0001:0031B170       oCMOB::SetOwner(int,int)
 0001:0031B190       oCMOB::IsOwnedByGuild(int)
 0001:0031B1B0       oCMOB::IsOwnedByNpc(int)
 0001:0031B1D0       oCMOB::IsOwner(oCNpc *)
 0001:0031B220       oCMOB::Hit(int)
 0001:0031B230       oCMOB::Destroy(void)
 0001:0031B490       oCMOB::InsertInIgnoreList(zCVob *)
 0001:0031B4C0       oCMOB::RemoveFromIgnoreList(zCVob *)
 0001:0031B520       oCMOB::CanThisCollideWith(zCVob *)
 0001:0031B560       oCMOB::Archive(zCArchiver &)
 0001:0031B6A0       oCMOB::Unarchive(zCArchiver &)
 0001:0031BCC0       oCMOB::AllowDiscardingOfSubtree(void)
 0001:0031BCD0       oCMobInter::SetAllMobsToState(oCWorld *,zSTRING const &,int)
 0001:0031BD00       oCMobInter::TraverseMobs(zCTree<zCVob> *,zSTRING const &,int,int *)
 0001:0031BE90       oCMobInter::TriggerAllMobsToTmpState(zCWorld *)
 0001:0031BF50       oCMobInter::TraverseTriggerMobs(zCTree<zCVob> *)
 0001:0031C010       oCMobInter::oCMobInter(void)
 0001:0031C190       oCMobInter::_GetClassDef(void)
 0001:0031C1A0       oCMobInter::`scalar deleting destructor'(uint)
 0001:0031C1D0       oCMobInter::~oCMobInter(void)
 0001:0031C3C0       oCMobInter::SetVisual(zCVisual *)
 0001:0031C540       oCMobInter::SetTempState(int)
 0001:0031C580       oCMobInter::IsTempStateChanged(void)
 0001:0031C590       oCMobInter::SetStateToTempState(void)
 0001:0031C610       oCMobInter::SetMobBodyState(oCNpc *)
 0001:0031C940       oCMobInter::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:0031C950       oCMobInter::OnMessage(zCEventMessage *,zCVob *)
 0001:0031CA00       oCMobInter::SetUseWithItem(zSTRING const &)
 0001:0031CB40       oCMobInter::GetUseWithItem(void)
 0001:0031CB60       oCMobInter::HasUseWithItem(oCNpc *)
 0001:0031CBE0       oCMobInter::GetScemeName(void)
 0001:0031CC30       oCMobInter::ScanIdealPositions(void)
 0001:0031CF50       oCMobInter::GetFreePosition(oCNpc *,zVEC3 &)
 0001:0031CFC0       oCMobInter::SearchFreePosition(oCNpc *,float)
 0001:0031D1F0       oCMobInter::SetHeading(oCNpc *)
 0001:0031D240       oCMobInter::SetIdealPosition(oCNpc *)
 0001:0031D490       oCMobInter::Reset(void)
 0001:0031D750       oCMobInter::OnTick(void)
 0001:0031D7D0       oCMobInter::OnTrigger(zCVob *,zCVob *)
 0001:0031DAC0       oCMobInter::OnUntrigger(zCVob *,zCVob *)
 0001:0031DD90       oCMobInter::SendStateChange(int,int)
 0001:0031E080       oCMobInter::SendEndInteraction(oCNpc *,int,int)
 0001:0031E210       oCMobInter::Interact(oCNpc *,int,int,int,int,int)
 0001:0031E5E0       oCMobInter::GetTransitionNames(int,int,zSTRING &,zSTRING &)
 0001:0031EB00       oCMobInter::IsInState(oCNpc *,int)
 0001:0031EC40       oCMobInter::CanChangeState(oCNpc *,int,int)
 0001:0031EEA0       oCMobInter::StartStateChange(oCNpc *,int,int)
 0001:0031F150       oCMobInter::StartTransitionAniNpc(oCNpc *,zSTRING const &)
 0001:0031F440       oCMobInter::CheckStateChange(oCNpc *)
 0001:0031F870       oCMobInter::CallOnStateFunc(oCNpc *,int)
 0001:0031FAD0       oCMobInter::SendCallOnStateFunc(oCNpc *,int)
 0001:0031FC70       oCMobInter::OnBeginStateChange(oCNpc *,int,int)
 0001:0031FC80       oCMobInter::OnEndStateChange(oCNpc *,int,int)
 0001:0031FCE0       oCMobInter::InterruptInteraction(oCNpc *)
 0001:0031FEB0       oCMobInter::IsMultiMob(void)
 0001:0031FEC0       oCMobInter::IsAvailable(oCNpc *)
 0001:0031FF20       oCMobInter::MarkAsUsed(float,zCVob *)
 0001:0031FF40       oCMobInter::CanInteractWith(oCNpc *)
 0001:00320550       oCMobInter::IsInteractingWith(oCNpc *)
 0001:00320580       oCMobInter::StartInteraction(oCNpc *)
 0001:00320950       oCMobInter::EndInteraction(oCNpc *,int)
 0001:00320C20       oCMobInter::StopInteraction(oCNpc *)
 0001:00320F00       oCMobInter::AI_UseMobToState(oCNpc *,int)
 0001:00321310       oCMobInter::Archive(zCArchiver &)
 0001:003213B0       oCMobInter::Unarchive(zCArchiver &)
 0001:00321460       oCMobFire::oCMobFire(void)
 0001:00321640       oCMobFire::`scalar deleting destructor'(uint)
 0001:00321670       oCMobFire::~oCMobFire(void)
 0001:00321850       oCMobFire::DeleteEffects(void)
 0001:003218A0       oCMobFire::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:003218F0       oCMobFire::OnEndStateChange(oCNpc *,int,int)
 0001:00321980       oCMobFire::OnTrigger(zCVob *,zCVob *)
 0001:00321B90       oCMobFire::OnUntrigger(zCVob *,zCVob *)
 0001:00321C00       oCMobFire::PreSave(void)
 0001:00321C60       oCMobFire::Archive(zCArchiver &)
 0001:00321D40       oCMobFire::PostSave(void)
 0001:00321D70       oCMobFire::Unarchive(zCArchiver &)
 0001:00321E50       oCMobBed::oCMobBed(void)
 0001:00322010       oCMobBed::`scalar deleting destructor'(uint)
 0001:00322040       oCMobBed::~oCMobBed(void)
 0001:00322220       oCMobBed::StartInteraction(oCNpc *)
 0001:00322230       oCMobBed::OnBeginStateChange(oCNpc *,int,int)
 0001:00322240       oCMobBed::OnEndStateChange(oCNpc *,int,int)
 0001:003222A0       oCMobBed::GetScemeName(void)
 0001:00322350       oCMobBed::SearchFreePosition(oCNpc *,float)
 0001:003224E0       oCMobSwitch::oCMobSwitch(void)
 0001:003225D0       oCMobSwitch::`scalar deleting destructor'(uint)
 0001:00322600       oCMobSwitch::~oCMobSwitch(void)
 0001:003227D0       oCMobSwitch::Archive(zCArchiver &)
 0001:00322870       oCMobSwitch::Unarchive(zCArchiver &)
 0001:00322920       oCMobLockable::oCMobLockable(void)
 0001:00322AD0       oCMobLockable::`scalar deleting destructor'(uint)
 0001:00322B00       oCMobLockable::~oCMobLockable(void)
 0001:00322CC0       oCMobLockable::CanInteractWith(oCNpc *)
 0001:00322CF0       oCMobLockable::Interact(oCNpc *,int,int,int,int,int)
 0001:003232E0       oCMobLockable::CanChangeState(oCNpc *,int,int)
 0001:00323330       oCMobLockable::OnEndStateChange(oCNpc *,int,int)
 0001:003234F0       oCMobLockable::CanOpen(oCNpc *)
 0001:00323800       oCMobLockable::PickLock(oCNpc *,char)
 0001:00323A70       oCMobLockable::Unlock(oCNpc *,int)
 0001:003241C0       oCMobLockable::Lock(oCNpc *)
 0001:003243B0       oCMobLockable::Archive(zCArchiver &)
 0001:003244A0       oCMobLockable::Unarchive(zCArchiver &)
 0001:003247E0       oCMobContainer::oCMobContainer(void)
 0001:00324970       oCMobContainer::`scalar deleting destructor'(uint)
 0001:003249A0       oCMobContainer::~oCMobContainer(void)
 0001:00324BB0       oCMobContainer::OnMessage(zCEventMessage *,zCVob *)
 0001:00324CB0       oCMobContainer::Destroy(void)
 0001:00324E60       oCMobContainer::Reset(void)
 0001:00324FC0       oCMobContainer::Insert(oCItem *)
 0001:00324FF0       oCMobContainer::Remove(oCItem *)
 0001:00325080       oCMobContainer::Remove(oCItem *,int)
 0001:00325190       oCMobContainer::CreateContents(zSTRING const &)
 0001:003254C0       oCMobContainer::IsIn(int)
 0001:00325500       oCMobContainer::Open(oCNpc *)
 0001:00325640       oCMobContainer::Close(oCNpc *)
 0001:00325680       oCMobContainer::Archive(zCArchiver &)
 0001:00325820       oCMobContainer::Unarchive(zCArchiver &)
 0001:003259B0       oCMobDoor::oCMobDoor(void)
 0001:00325B80       oCMobDoor::`scalar deleting destructor'(uint)
 0001:00325BB0       oCMobDoor::~oCMobDoor(void)
 0001:00325D60       oCMobDoor::GetScemeName(void)
 0001:00325E10       oCMobDoor::SearchFreePosition(oCNpc *,float)
 0001:00325FA0       oCMobWheel::oCMobWheel(void)
 0001:003260A0       oCMobWheel::`scalar deleting destructor'(uint)
 0001:003260D0       oCMobWheel::OnTrigger(zCVob *,zCVob *)
 0001:003261E0       oCMobWheel::OnUntrigger(zCVob *,zCVob *)
 0001:003262E0       oCMobWheel::Interact(oCNpc *,int,int,int,int,int)
 0001:003262F0       oCMobWheel::~oCMobWheel(void)
 0001:003264C0       oCMobLadder::oCMobLadder(void)
 0001:003265D0       oCMobLadder::`scalar deleting destructor'(uint)
 0001:00326600       oCMobLadder::~oCMobLadder(void)
 0001:003267D0       oCMobLadder::StartInteraction(oCNpc *)
 0001:00326990       oCMobLadder::CanChangeState(oCNpc *,int,int)
 0001:003269E0       oCMobLadder::CanInteractWith(oCNpc *)
 0001:003269F0       oCMobLadder::SearchFreePosition(oCNpc *,float)
 0001:00326A60       oCMobLadder::Interact(oCNpc *,int,int,int,int,int)
 0001:00326E60       oCMobLadder::EndInteraction(oCNpc *,int)
 0001:00326E80       oCMobItemSlot::oCMobItemSlot(void)
 0001:00326EA0       oCMobItemSlot::`scalar deleting destructor'(uint)
 0001:00326ED0       oCMobItemSlot::~oCMobItemSlot(void)
 0001:003270B0       oCMobItemSlot::GetUseWithItem(void)
 0001:003270F0       oCMobItemSlot::CanInteractWith(oCNpc *)
 0001:00327110       oCMobItemSlot::GetInsertedItem(void)
 0001:00327120       oCMobItemSlot::PlaceItem(oCItem *)
 0001:003273C0       oCMobItemSlot::RemoveItem(void)
 0001:00327400       oCMobItemSlot::IsIn(int)
 0001:00327430       oCMobItemSlot::Archive(zCArchiver &)
 0001:00327500       oCMobItemSlot::Unarchive(zCArchiver &)
 0001:003275F0       oCDummyVobGenerator::oCDummyVobGenerator(void)
 0001:00327660       oCDummyVobGenerator::OnTrigger(zCVob *,zCVob *)
 0001:00327870       zCListSort<oCItem>::Insert(oCItem *)
 0001:003278C0       zCList<TMobOptPos>::~zCList<TMobOptPos>(void)
 0001:003278F0       zCList<TMobOptPos>::DeleteListDatas(void)
 0001:00327960       zCList<TMobOptPos>::`scalar deleting destructor'(uint)
 0001:003279A0       TMobOptPos::`scalar deleting destructor'(uint)
 0001:003279C0       TMobOptPos::~TMobOptPos(void)
 0001:00327C80       oCNewsManager::oCNewsManager(void)
 0001:00327CA0       oCNewsManager::~oCNewsManager(void)
 0001:00327CB0       oCNewsManager::CreateNews(int,int,oCNpc *,oCNpc *,oCNpc *,int)
 0001:00327FB0       oCNewsManager::SpreadToGuild(int)
 0001:00327FD0       oCNewsManager::IsInSpreadList(int)
 0001:00328000       oCNewsManager::SpreadNews(oCNews *)
 0001:00328580       oCNewsMemory::oCNewsMemory(void)
 0001:003285A0       oCNewsMemory::~oCNewsMemory(void)
 0001:003286B0       oCNewsMemory::Insert(oCNews *)
 0001:00328790       oCNewsMemory::Remove(oCNews *)
 0001:00328810       oCNewsMemory::GetNews(int,oCNpc *,oCNpc *)
 0001:00328850       oCNewsMemory::CheckSpreadNews(void)
 0001:003288E0       oCNewsMemory::SearchNews(int,oCNpc *,oCNpc *)
 0001:00328960       oCNewsMemory::ShowDebugInfos(void)
 0001:00328F60       oCNewsMemory::GetNewsByNumber(int)
 0001:00328F90       oCNewsMemory::ClearNews(void)
 0001:003290A0       oCNewsMemory::DeleteNewsByNumber(int)
 0001:00329140       oCNewsMemory::Archive(zCArchiver &)
 0001:003291C0       oCNewsMemory::Unarchive(zCArchiver &)
 0001:00329370       oCNews::GetRemainingNews(void)
 0001:00329380       oCNews::CheckRemainingNews(void)
 0001:00329830       oCNews::oCNews(void)
 0001:003299D0       oCNews::oCNews(int,int,oCNpc *,oCNpc *,oCNpc *,int)
 0001:00329C50       oCNews::~oCNews(void)
 0001:00329DC0       oCNews::GetID(void)
 0001:00329DD0       oCNews::IsIdentical(int,oCNpc *,oCNpc *)
 0001:00329E00       oCNews::SetSpreadTime(float)
 0001:00329E30       oCNews::GetSpreadTime(void)
 0001:00329E40       oCNews::SetGossip(int)
 0001:00329E60       oCNews::IsGossip(void)
 0001:00329E70       oCNews::IsGuildVictim(void)
 0001:00329E80       oCNews::GetNewsData(int &,int &,oCNpc * &,oCNpc * &,oCNpc * &)
 0001:00329F90       oCNews::Archive(zCArchiver &)
 0001:0032A1F0       oCNews::Unarchive(zCArchiver &)
 0001:0032A410       zCList<oCNews>::~zCList<oCNews>(void)
 0001:0032A440       zCList<oCNews>::DeleteListDatas(void)
 0001:0032A4B0       zCList<oCNews>::Insert(oCNews *)
 0001:0032A500       zCList<oCNews>::Get(int)
 0001:0032A530       zCList<oCNews>::GetNumInList(void)
 0001:0032A550       zCList<oCNews>::`scalar deleting destructor'(uint)
 0001:0032A590       zCArray<oCNews *>::AllocDelta(int)
 0001:0032B330       oCNpcTalent::_CreateNewInstance(void)
 0001:0032B490       oCNpcTalent::operator delete(void *)
 0001:0032B4B0       oCNpcTalent::_GetClassDef(void)
 0001:0032B4C0       oCNpcTalent::oCNpcTalent(void)
 0001:0032B630       oCNpcTalent::`scalar deleting destructor'(uint)
 0001:0032B660       oCNpcTalent::~oCNpcTalent(void)
 0001:0032B670       oCNpcTalent::CreateTalentList(zCArray<oCNpcTalent *> *)
 0001:0032B7B0       oCNpcTalent::Archive(zCArchiver &)
 0001:0032B7F0       oCNpcTalent::Unarchive(zCArchiver &)
 0001:0032B840       BitToNumber(int)
 0001:0032B860       TNpcSlot::SetVob(oCVob *)
 0001:0032B910       TNpcSlot::ClearVob(void)
 0001:0032B960       oCNpc::TActiveInfo::TActiveInfo(oCNpc const *)
 0001:0032B970       oCNpc::TActiveInfo::~TActiveInfo(void)
 0001:0032B9B0       oCNpc::GetActiveInfo(void)
 0001:0032B9D0       oCNpc::GetActiveInfoWritable(void)
 0001:0032BA20       oCNpc::Shrink(void)
 0001:0032BBA0       oCNpc::UnShrink(void)
 0001:0032C250       oCNpc::AvoidShrink(int)
 0001:0032C2C0       oCNpc::ApplyOverlay(zSTRING const &)
 0001:0032C570       zTOverlayIndex::~zTOverlayIndex(void)
 0001:0032C5C0       oCNpc::RemoveOverlay(zSTRING const &)
 0001:0032C7B0       oCNpc::SetModelScale(zVEC3 const &)
 0001:0032C8A0       oCNpc::SetFatness(float)
 0001:0032C950       oCNpc::oCNpc(void)
 0001:0032D300       oCVob::IsOwnedByGuild(int)
 0001:0032D310       oCVob::IsOwnedByNpc(int)
 0001:0032D320       oCVob::GetSoundMaterial(void)
 0001:0032D330       TNpcSlot::TNpcSlot(void)
 0001:0032D370       oCNpc::_GetClassDef(void)
 0001:0032D380       oCNpc::GetInstance(void)
 0001:0032D390       oCNpc::IsAniMessageRunning(void)
 0001:0032D3A0       oCNpc::`scalar deleting destructor'(uint)
 0001:0032D3D0       oCNpc::oTRobustTrace::~oTRobustTrace(void)
 0001:0032D3F0       oCNpc::SetVisual(zCVisual *)
 0001:0032D410       oCNpc::CleanUp(void)
 0001:0032D6A0       oCNpc::~oCNpc(void)
 0001:0032DD90       TNpcSlot::~TNpcSlot(void)
 0001:0032DE70       oCNpc::InitByScript(int,int)
 0001:0032E5B0       oCNpc::InitHumanAI(void)
 0001:0032E650       oCNpc::DeleteHumanAI(void)
 0001:0032E690       oCNpc::GetGuildName(void)
 0001:0032E820       oCNpc::GetName(int)
 0001:0032E870       oCNpc::IsHostile(oCNpc *)
 0001:0032E900       oCNpc::IsFriendly(oCNpc *)
 0001:0032E990       oCNpc::IsNeutral(oCNpc *)
 0001:0032EA20       oCNpc::IsAngry(oCNpc *)
 0001:0032EAB0       oCNpc::GetAttitude(oCNpc *)
 0001:0032EB30       oCNpc::GetPermAttitude(oCNpc *)
 0001:0032EB80       oCNpc::SetAttitude(int)
 0001:0032EBD0       oCNpc::SetTmpAttitude(int)
 0001:0032EC20       oCNpc::GetProtectionByIndex(oEIndexDamage)
 0001:0032EC30       oCNpc::GetProtectionByType(oETypeDamage)
 0001:0032ECD0       oCNpc::GetProtectionByMode(ulong)
 0001:0032ED60       oCNpc::GetFullProtection(void)
 0001:0032ED80       oCNpc::SetProtectionByIndex(oEIndexDamage,int)
 0001:0032EDA0       oCNpc::GetDamageByIndex(oEIndexDamage)
 0001:0032EDB0       oCNpc::GetDamageByType(oETypeDamage)
 0001:0032EE50       oCNpc::GetDamageByMode(ulong)
 0001:0032EEE0       oCNpc::GetFullDamage(void)
 0001:0032EF00       oCNpc::SetDamages(int *)
 0001:0032EF20       oCNpc::GetAttribute(int)
 0001:0032EF30       oCNpc::GetHitChance(int)
 0001:0032EF40       oCNpc::SetHitChance(int,int)
 0001:0032EF60       oCNpc::ChangeAttribute(int,int)
 0001:0032EFF0       oCNpc::SetAttribute(int,int)
 0001:0032F010       oCNpc::GetOverlay(zSTRING &)
 0001:0032F1D0       oCNpc::CheckModelOverlays(void)
 0001:0032F3F0       oCNpc::SetToMad(float)
 0001:0032F530       oCNpc::HealFromMad(void)
 0001:0032F650       oCNpc::SetToDrunk(float)
 0001:0032F660       oCNpc::HealFromDrunk(void)
 0001:0032F670       oCNpc::CheckAngryTime(void)
 0001:0032F720       oCNpc::CanRecruitSC(void)
 0001:0032F730       oCNpc::IsDisguised(void)
 0001:0032F750       oCNpc::GetGuild(void)
 0001:0032F760       oCNpc::SetGuild(int)
 0001:0032F770       oCNpc::GetTrueGuild(void)
 0001:0032F780       oCNpc::SetTrueGuild(int)
 0001:0032F790       oCNpc::GetCamp(void)
 0001:0032F7A0       oCNpc::IsGuildFriendly(int)
 0001:0032F7D0       oCNpc::GetGuildAttitude(int)
 0001:0032F800       oCNpc::CreateItems(int,int)
 0001:0032F9C0       oCNpc::SetFlag(int)
 0001:0032F9E0       oCNpc::HasFlag(int)
 0001:0032FA00       oCNpc::GetTalent(int,int)
 0001:0032FBE0       oCNpc::SetTalentValue(int,int)
 0001:0032FDC0       oCNpc::GetTalentValue(int)
 0001:0032FF60       oCNpc::SetTalentSkill(int,int)
 0001:003307F0       oCNpc::GetTalentSkill(int)
 0001:00330990       oCNpc::HasTalent(int,int)
 0001:003309A5       std::basic_streambuf<wchar_t,std::char_traits<wchar_t>>::setbuf(wchar_t *,int)
 0001:003309B0       oCNpc::CanUse(oCItem *)
 0001:00330CB0       oCNpc::DisplayCannotUse(void)
 0001:00330DE0       oCNpc::CheckAllCanUse(void)
 0001:00330EF0       oCNpc::GetSlotVob(zSTRING const &)
 0001:00330F90       oCNpc::GetSlotItem(zSTRING const &)
 0001:00331030       oCNpc::GetItem(int,int)
 0001:00331050       oCNpc::GetSlotNpc(zSTRING const &)
 0001:003310F0       oCNpc::AddItemEffects(oCItem *)
 0001:00331270       oCNpc::RemoveItemEffects(oCItem *)
 0001:003313C0       oCNpc::EquipItem(oCItem *)
 0001:003316C0       oCNpc::UnequipItem(oCItem *)
 0001:003319A0       oCNpc::GetCutsceneDistance(void)
 0001:003319F0       oCNpc::SetCSEnabled(int)
 0001:00331A10       oCNpc::GetCSStateFlags(void)
 0001:00331B60       oCNpc::SetFocusVob(zCVob *)
 0001:00331BB0       oCNpc::GetFocusVob(void)
 0001:00331BC0       oCNpc::ClearFocusVob(void)
 0001:00331BF0       oCNpc::GetFocusNpc(void)
 0001:00331C20       oCNpc::GetNearestFightNpcLeft(void)
 0001:00331DB0       oCNpc::GetNearestFightNpcRight(void)
 0001:00331F40       oCNpc::FocusCheckBBox(zCVob const *,int,int,float,float &)
 0001:003321C0       oCNpc::FocusCheck(zCVob const *,int,int,float,float &)
 0001:003325B0       oCNpc::ToggleFocusVob(int)
 0001:00332A10       oCNpc::CollectFocusVob(int)
 0001:003334F0       oCNpc::GetNearestValidVob(float)
 0001:00333860       oCNpc::GetNearestVob(float)
 0001:00333B40       oCNpc::GetAnictrl(void)
 0001:00333B50       oCNpc::ResetToHumanAI(void)
 0001:00333BC0       oCNpc::SetEnemy(oCNpc *)
 0001:00333E30       oCNpc::GetNextEnemy(void)
 0001:00334130       oCNpc::IsConditionValid(void)
 0001:00334290       oCNpc::IsInFightFocus(zCVob *)
 0001:00334300       oCNpc::HasEquippedStolenItem(oCNpc *)
 0001:00334520       oCNpc::Burn(int,float)
 0001:003347A0       oCNpc::StopBurn(void)
 0001:00334A40       RotateVec(zVEC3 &,zVEC3 &,float,float)
 0001:00334AB0       oCNpc::Interrupt(int,int)
 0001:00334E30       oCNpc::GetWeaponDamage(oCItem *)
 0001:00334E80       oCNpc::GetBluntDamage(oCItem *)
 0001:00334EB0       oCNpc::DropUnconscious(float,oCNpc *)
 0001:00335230       oCNpc::CheckUnconscious(void)
 0001:00335680       oCNpc::GetInterruptPrefix(void)
 0001:00335720       oCNpc::CompleteHeal(void)
 0001:00335740       oCNpc::IsDead(void)
 0001:00335750       oCNpc::IsUnconscious(void)
 0001:00335760       oCNpc::DoDie(oCNpc *)
 0001:00335D40       oCNpc::StartFadeAway(void)
 0001:00335E30       oCNpc::IsFadingAway(void)
 0001:00335E40       oCNpc::FadeAway(void)
 0001:00335EE0       oCNpc::BeamTo(zSTRING const &)
 0001:00336350       oCNpc::DropInventory(void)
 0001:00336360       oCNpc::HasInHand(int)
 0001:003364B0       oCNpc::HasInHand(zCVob *)
 0001:003365E0       oCNpc::DropAllInHand(void)
 0001:003367A0       oCNpc::GetWeapon(void)
 0001:00336930       oCNpc::GetEquippedMeleeWeapon(void)
 0001:00336A40       oCNpc::GetEquippedRangedWeapon(void)
 0001:00336B50       oCNpc::GetEquippedArmor(void)
 0001:00336BE0       oCNpc::IsSameHeight(zCVob *)
 0001:00336CD0       oCNpc::TurnToEnemy(void)
 0001:00336E50       oCNpc::ShieldEquipped(void)
 0001:00336F20       oCNpc::GetWeaponDamage(void)
 0001:003370B0       oCNpc::SetMovLock(int)
 0001:003370E0       oCNpc::IsMovLock(void)
 0001:003370F0       oCNpc::SetHead(void)
 0001:00337350       oCNpc::SetAdditionalVisuals(zSTRING &,int,int,zSTRING &,int,int,int)
 0001:00337480       oCNpc::InitModel(void)
 0001:00337720       oCNpc::GetModel(void)
 0001:003377C0       oCNpc::GetVisualBody(void)
 0001:00337810       oCNpc::GetVisualHead(void)
 0001:00337860       oCNpc::StartFaceAni(zSTRING const &,float,float)
 0001:00337960       oCNpc::StartStdFaceAni(int)
 0001:00337B50       oCNpc::StopFaceAni(zSTRING const &)
 0001:00337C40       oCNpc::GetWeaponMode(void)
 0001:00337C60       oCNpc::SetWeaponMode2(zSTRING const &)
 0001:00337E80       oCNpc::SetWeaponMode2(int)
 0001:00338940       oCNpc::SetWeaponMode(int)
 0001:00338A30       oCNpc::GetNextWeaponMode(int,int,int)
 0001:00338C90       oCNpc::Equip(oCItem *)
 0001:00339030       oCNpc::EquipWeapon(oCItem *)
 0001:00339310       oCNpc::EquipFarWeapon(oCItem *)
 0001:00339490       oCNpc::EquipArmor(oCItem *)
 0001:00339740       oCNpc::SetToFightMode(oCItem *,int)
 0001:00339940       oCNpc::SetToFistMode(void)
 0001:00339B40       oCNpc::Activate(int,int)
 0001:00339B50       oCNpc::GetRightHand(void)
 0001:00339BE0       oCNpc::GetLeftHand(void)
 0001:00339C70       oCNpc::DropVob(oCVob *,zVEC3 &)
 0001:00339E00       oCNpc::SetCarryVob(zCVob *)
 0001:0033A0B0       oCNpc::GetCarryVob(void)
 0001:0033A0C0       oCNpc::SetLeftHand(oCVob *)
 0001:0033A1C0       oCNpc::SetRightHand(oCVob *)
 0001:0033A2C0       oCNpc::HasTorch(void)
 0001:0033A400       oCNpc::ExchangeTorch(void)
 0001:0033A410       oCNpc::SetTorchAni(int,int)
 0001:0033A670       zCSparseArrayIterator::zCSparseArrayIterator(zCSparseArrayBase &)
 0001:0033A6D0       oCNpc::CheckSetTorchAni(void)
 0001:0033A940       oCNpc::CheckPutbackTorch(void)
 0001:0033AC10       oCNpc::UseItem(oCItem *)
 0001:0033B230       oCNpc::GetThrowSpeed(float,float)
 0001:0033B260       oCNpc::HasArrowInHand(void)
 0001:0033B3B0       oCNpc::HasArrowInInv(void)
 0001:0033B4A0       oCNpc::HasBoltInInv(void)
 0001:0033B590       oCNpc::HasBoltInHand(void)
 0001:0033B6E0       oCNpc::IsMunitionAvailable(oCItem *)
 0001:0033B860       oCNpc::GetTalentInfo(int,zSTRING &,zSTRING &,zSTRING &)
 0001:0033BA90       oCNpc::GetSpellInfo(int,zSTRING &,zSTRING &)
 0001:0033BC80       oCNpc::GetAttribInfo(int,zSTRING &,zSTRING &)
 0001:0033BE20       oCNpc::CreateSpell(int)
 0001:0033BE80       oCNpc::LearnSpell(int)
 0001:0033BEC0       oCNpc::HasSpell(int)
 0001:0033BEE0       oCNpc::DestroySpell(int)
 0001:0033BF20       oCNpc::SetActiveSpellInfo(int)
 0001:0033BF60       oCNpc::GetActiveSpellNr(void)
 0001:0033BFA0       oCNpc::GetActiveSpellCategory(void)
 0001:0033BFE0       oCNpc::GetActiveSpellLevel(void)
 0001:0033C020       oCNpc::GetActiveSpellIsScroll(void)
 0001:0033C070       oCNpc::InsertActiveSpell(oCSpell *)
 0001:0033C090       oCNpc::RemoveActiveSpell(oCSpell *)
 0001:0033C120       oCNpc::RemoveActiveSpell(int)
 0001:0033C1D0       oCNpc::DoActiveSpells(void)
 0001:0033C2B0       oCNpc::KillActiveSpells(void)
 0001:0033C340       oCNpc::IsSpellActive(int)
 0001:0033C380       oCNpc::HasMagic(void)
 0001:0033C3B0       oCNpc::GetNumberOfSpells(void)
 0001:0033C3D0       oCNpc::CopyTransformSpellInvariantValuesTo(oCNpc *)
 0001:0033C5B0       oCNpc::OpenScreen_Help(void)
 0001:0033C5C0       oCNpc::OpenScreen_Log(void)
 0001:0033C8D0       oCNpc::OpenScreen_Map(int)
 0001:0033C980       oCNpc::OpenScreen_Status(void)
 0001:0033CFA0       oCNpc::ThisVobAddedToWorld(zCWorld *)
 0001:0033D170       oCNpc::ThisVobRemovedFromWorld(zCWorld *)
 0001:0033D350       oCNpc::IsVoiceActive(void)
 0001:0033D360       oCNpc::StopAllVoices(void)
 0001:0033D3C0       oCNpc::UpdateNextVoice(void)
 0001:0033D480       oCNpc::ProcessNpc(void)
 0001:0033D8D0       oCNpc::oCNpcTimedOverlay::GetMdsName(void)
 0001:0033D910       oCNpc::oCNpcTimedOverlay::`scalar deleting destructor'(uint)
 0001:0033D930       oCNpc::oCNpcTimedOverlay::~oCNpcTimedOverlay(void)
 0001:0033D980       oCNpc::DoSpellBook(void)
 0001:0033D990       oCNpc::OpenSpellBook(int)
 0001:0033D9E0       oCNpc::CloseSpellBook(int)
 0001:0033DA00       oCNpc::GetSpellBook(void)
 0001:0033DA10       oCNpc::GetSoundMaterial_MA(zCSoundManager::zTSndManMedium &,oTSndMaterial &,zSTRING)
 0001:0033DB80       oCNpc::GetSoundMaterial_AM(zCSoundManager::zTSndManMedium &,oTSndMaterial &,int)
 0001:0033DC50       oCNpc::GetSoundMaterial_MH_HM(zCSoundManager::zTSndManMedium &,oTSndMaterial &)
 0001:0033DD20       oCNpc::HasSenseHear(void)
 0001:0033DD30       oCNpc::HasSenseSee(void)
 0001:0033DD40       oCNpc::HasSenseSmell(void)
 0001:0033DD50       oCNpc::SetSenses(int)
 0001:0033DD60       oCNpc::PrintStateCallDebug(zSTRING const &,int,int)
 0001:0033DFD0       oCNpc::GetOldScriptState(void)
 0001:0033DFE0       oCNpc::GetAIState(void)
 0001:0033DFF0       oCNpc::GetAIStateTime(void)
 0001:0033E000       oCNpc::IsAIState(int)
 0001:0033E010       oCNpc::ShowState(int,int)
 0001:0033ECC0       oCNpc::IsNear(oCNpc *)
 0001:0033ED40       oCNpc::DetectItem(int,int)
 0001:0033EE00       oCNpc::DetectPlayer(void)
 0001:0033EE70       oCNpc::FindMobInter(zSTRING const &)
 0001:0033F0E0       oCNpc::FindSpot(zSTRING const &,int,float)
 0001:0033F470       oCNpc::ForceVobDetection(zCVob *)
 0001:0033F5B0       oCNpc::HasVobDetected(zCVob *)
 0001:0033F5F0       oCNpc::CheckForOwner(zCVob *)
 0001:0033F730       oCNpc::AI_ForceDetection(void)
 0001:0033F740       oCNpc::CanSense(zCVob *)
 0001:0033F7E0       oCNpc::DetectWitnesses(oCNpc *,int)
 0001:0033FA80       oCNpc::FindNpc(int,int,int,int)
 0001:0033FB80       oCNpc::FindNpcEx(int,int,int,int,int,int)
 0001:0033FE00       oCNpc::FindNpcExAtt(int,int,int,int,int,int,int)
 0001:003400B0       oCNpc::GetComrades(void)
 0001:003402E0       oCNpc::AreWeStronger(oCNpc *)
 0001:00340600       oCNpc::IsEnemyBehindFriend(oCNpc *)
 0001:00340800       oCNpc::InMobInteraction(zSTRING const &,int)
 0001:003408E0       oCNpc::FreeLineOfSight(zCVob *)
 0001:00340940       oCNpc::FreeLineOfSight(zVEC3 &,zCVob *)
 0001:00340AA0       oCNpc::FreeLineOfSight_WP(zVEC3 &,zCVob *)
 0001:00340C10       oCNpc::CanSee(zCVob *,int)
 0001:00340F70       oCNpc::SetSwimDiveTime(float,float)
 0001:00340FA0       oCNpc::GetSwimDiveTime(float &,float &,float &)
 0001:00340FD0       oCNpc::Regenerate(void)
 0001:00341110       oCNpc::RefreshNpc(void)
 0001:00341370       oCNpc::RenderNpc(zCView *)
 0001:003415A0       oCNpc::IsAPlayer(void)
 0001:003415B0       oCNpc::IsSelfPlayer(void)
 0001:003415C0       oCNpc::GetPlayerNumber(void)
 0001:003415D0       oCNpc::SetKnowsPlayer(int)
 0001:003415E0       oCNpc::KnowsPlayer(oCNpc *)
 0001:003415F0       oCNpc::KnowsPlayer(int)
 0001:00341600       oCNpc::IsMonster(void)
 0001:00341640       oCNpc::IsHuman(void)
 0001:00341650       oCNpc::IsGoblin(void)
 0001:00341670       oCNpc::IsOrc(void)
 0001:00341680       oCNpc::IsSkeleton(void)
 0001:003416A0       oCNpc::SetAsPlayer(void)
 0001:00341A20       oCNpc::DoDoAniEvents(void)
 0001:00342DC0       oCNpc::DoModelSwapMesh(zSTRING const &,zSTRING const &)
 0001:00343040       oCNpc::HasMunitionInHand(oCItem *)
 0001:00343190       oCNpc::DoInsertMunition(zSTRING const &)
 0001:00343470       oCNpc::DoRemoveMunition(void)
 0001:003436B0       oCNpc::DoShootArrow(int)
 0001:003439C0       oCNpc::DoTakeVob(zCVob *)
 0001:00343DD0       oCNpc::DoDropVob(zCVob *)
 0001:003440B0       oCNpc::DoThrowVob(zCVob *,float)
 0001:003442E0       oCNpc::DoPutInInventory(oCItem *)
 0001:00344300       oCNpc::DoRemoveFromInventory(oCItem *)
 0001:00344350       oCNpc::DoSetToFightMode(oCItem *)
 0001:00344370       oCNpc::DoExchangeTorch(void)
 0001:003445B0       oCNpc::Pack(zCBuffer &)
 0001:00344640       oCNpc::Unpack(zCBuffer &)
 0001:003446E0       oCNpc::IsInFightMode_S(int)
 0001:00344760       oCNpc::IsAiming_S(oCNpc *)
 0001:00344880       oCNpc::GetInstanceName(void)
 0001:003448C0       oCNpc::GetScriptInstance(zSTRING * &,int &)
 0001:003448F0       oCNpc::SetByScriptInstance(zSTRING const *,int)
 0001:00344940       oCNpc::GetInstanceByID(int)
 0001:003449A0       oCNpc::GetIDByInstance(zSTRING const &)
 0001:00344A20       oCNpc::Disable(void)
 0001:00344D40       oCNpc::Enable(zVEC3 &)
 0001:00345400       oCNpc::ClearEM(void)
 0001:00345470       oCNpc::Archive(zCArchiver &)
 0001:00346230       oCNpc::Unarchive(zCArchiver &)
 0001:00347880       oCNpc::PreSaveGameProcessing(void)
 0001:00347B90       oCNpc::PostSaveGameProcessing(void)
 0001:00347DE0       oCNpc::AllowDiscardingOfSubtree(void)
 0001:00347DF0       oCNpc::IdentifyMushroom(oCItem *)
 0001:00347FE0       oCNpc::IdentifyAllMushrooms(void)
 0001:00348110       oCNpc::HasMissionItem(void)
 0001:00348160       oCNpc::IsInInv(oCItem *,int)
 0001:00348180       oCNpc::GetFromInv(int,int)
 0001:003481E0       oCNpc::IsInInv(int,int)
 0001:00348200       oCNpc::IsInInv(zSTRING const &,int)
 0001:00348220       oCNpc::CanCarry(oCItem *)
 0001:00348350       oCNpc::PutInInv(oCItem *)
 0001:003484C0       oCNpc::PutInInv(int,int)
 0001:00348570       oCNpc::PutInInv(zSTRING const &,int)
 0001:003485A0       oCNpc::RemoveFromInv(oCItem *,int)
 0001:003485F0       oCNpc::RemoveFromInv(int,int)
 0001:00348640       oCNpc::RemoveFromInv(zSTRING const &,int)
 0001:00348690       oCNpc::IsSlotFree(zSTRING const &)
 0001:00348760       oCNpc::IsSlotFree(TNpcSlot *)
 0001:00348780       oCNpc::SetToSlotPosition(zCVob *,zSTRING const &)
 0001:00348800       oCNpc::CreateInvSlot(zSTRING const &)
 0001:003489E0       oCNpc::DeleteInvSlot(zSTRING const &)
 0001:00348AE0       oCNpc::GetInvSlot(zSTRING const &)
 0001:00348BA0       oCNpc::GetInvSlot(zCVob *)
 0001:00348BE0       oCNpc::IsInvSlotAvailable(zSTRING const &)
 0001:00348CB0       oCNpc::PutInSlot(zSTRING const &,oCVob *,int)
 0001:00348D80       oCNpc::PutInSlot(TNpcSlot *,oCVob *,int)
 0001:00349230       oCNpc::RemoveFromAllSlots(int)
 0001:00349270       oCNpc::RemoveFromSlot(zSTRING const &,int,int)
 0001:00349340       oCNpc::RemoveFromSlot(TNpcSlot *,int,int)
 0001:00349590       oCNpc::DropFromSlot(zSTRING const &)
 0001:00349660       oCNpc::DropFromSlot(TNpcSlot *)
 0001:003499D0       oCNpc::UpdateSlots(void)
 0001:00349B00       oCNpc::SetInteractMob(oCMobInter *)
 0001:00349CA0       oCNpc::GetInteractMob(void)
 0001:00349CB0       oCNpc::GetCharacterClass(void)
 0001:00349CC0       oCNpc::SetInteractItem(oCItem *)
 0001:00349F00       TNpcSlot::`scalar deleting destructor'(uint)
 0001:00349F20       oCNpc::OnTouch(zCVob *)
 0001:0034A020       oCNpc::OnMessage(zCEventMessage *,zCVob *)
 0001:0034BBC0       zCEvMsgCutscene::GetCutsceneName(void)
 0001:0034BC10       oCNpc::EV_DrawWeapon(oCMsgWeapon *)
 0001:0034C2E0       oCNpc::EV_DrawWeapon1(oCMsgWeapon *)
 0001:0034C580       oCNpc::EV_DrawWeapon2(oCMsgWeapon *)
 0001:0034CB20       oCNpc::EV_RemoveWeapon(oCMsgWeapon *)
 0001:0034D4B0       oCNpc::EV_RemoveWeapon1(oCMsgWeapon *)
 0001:0034D630       oCNpc::EV_RemoveWeapon2(oCMsgWeapon *)
 0001:0034D980       oCNpc::EV_ChooseWeapon(oCMsgWeapon *)
 0001:0034DC40       oCNpc::EV_ForceRemoveWeapon(oCMsgWeapon *)
 0001:0034DF10       oCNpc::EV_EquipBestWeapon(oCMsgWeapon *)
 0001:0034DF30       oCNpc::EquipBestWeapon(int)
 0001:0034E020       oCNpc::EV_EquipBestArmor(oCMsgWeapon *)
 0001:0034E0B0       oCNpc::EquipBestArmor(void)
 0001:0034E130       oCNpc::EV_UnequipWeapons(oCMsgWeapon *)
 0001:0034E2F0       oCNpc::EV_UnequipArmor(oCMsgWeapon *)
 0001:0034E3A0       oCNpc::EV_EquipArmor(oCMsgWeapon *)
 0001:0034E400       oCNpc::EV_AttackForward(oCMsgAttack *)
 0001:0034F160       oCNpc::EV_AttackLeft(oCMsgAttack *)
 0001:0034FD00       oCNpc::EV_AttackRight(oCMsgAttack *)
 0001:003507D0       oCNpc::EV_AttackRun(oCMsgAttack *)
 0001:00350AF0       oCNpc::EV_AttackFinish(oCMsgAttack *)
 0001:003512D0       oCNpc::EV_Parade(oCMsgAttack *)
 0001:003519A0       oCNpc::InitAim(oCMsgAttack *,oCNpc * *,int *,int *,int)
 0001:00351B30       oCNpc::TransitionAim(int,int)
 0001:00351CC0       oCNpc::InterpolateAim(oCNpc *)
 0001:00351E00       oCNpc::FinalizeAim(int,int)
 0001:00351F20       oCNpc::EV_StopAim(oCMsgAttack *)
 0001:00351F40       oCNpc::EV_AimAt(oCMsgAttack *)
 0001:00352010       oCNpc::EV_ShootAt(oCMsgAttack *)
 0001:00352190       oCNpc::EV_Defend(oCMsgAttack *)
 0001:003521C0       oCNpc::EV_Drink(oCMsgUseItem *)
 0001:003524E0       oCNpc::EV_TakeVob(oCMsgManipulate *)
 0001:003528C0       oCNpc::EV_DropVob(oCMsgManipulate *)
 0001:00352BB0       oCNpc::EV_ThrowVob(oCMsgManipulate *)
 0001:00352E30       oCNpc::EV_Exchange(oCMsgManipulate *)
 0001:00353130       oCNpc::EV_DropMob(oCMsgManipulate *)
 0001:003531F0       oCNpc::EV_TakeMob(oCMsgManipulate *)
 0001:00353290       oCNpc::EV_UseMob(oCMsgManipulate *)
 0001:00353490       oCNpc::EV_UseMobWithItem(oCMsgManipulate *)
 0001:003534E0       oCNpc::EV_InsertInteractItem(oCMsgManipulate *)
 0001:003536F0       oCNpc::EV_ExchangeInteractItem(oCMsgManipulate *)
 0001:00353880       oCNpc::EV_RemoveInteractItem(oCMsgManipulate *)
 0001:00353890       oCNpc::EV_CreateInteractItem(oCMsgManipulate *)
 0001:00353B40       oCNpc::EV_DestroyInteractItem(oCMsgManipulate *)
 0001:00353D10       oCNpc::InteractItemGetAni(zSTRING const &,int,int)
 0001:00354020       oCNpc::EV_PlaceInteractItem(oCMsgManipulate *)
 0001:00354150       oCNpc::GetInteractItemMaxState(zSTRING const &)
 0001:00354360       oCNpc::InteractItemIsInState(zSTRING const &,int)
 0001:00354580       oCNpc::EV_EquipItem(oCMsgManipulate *)
 0001:00354620       oCNpc::EV_UseItem(oCMsgManipulate *)
 0001:003548F0       oCNpc::EV_UseItemToState(oCMsgManipulate *)
 0001:003551D0       oCNpc::CallScript(zSTRING const &)
 0001:00355200       oCNpc::CallScript(int)
 0001:00355220       oCNpc::EV_CallScript(oCMsgManipulate *)
 0001:00355390       oCNpc::EV_Unconscious(oCMsgState *)
 0001:00355600       oCNpc::EV_DoState(oCMsgState *)
 0001:00355820       oCNpc::EV_Wait(oCMsgState *)
 0001:00355890       oCNpc::ApplyTimedOverlayMds(zSTRING const &,float)
 0001:00355A60       oCNpc::EV_OutputSVM_Overlay(oCMsgConversation *)
 0001:003561F0       oCNpc::EV_OutputSVM(oCMsgConversation *)
 0001:003566F0       oCNpc::EV_Output(oCMsgConversation *)
 0001:00356AB0       oCNpc::EV_PlayAni(oCMsgConversation *)
 0001:00356CE0       oCNpc::EV_PlayAniFace(oCMsgConversation *)
 0001:00356DE0       oCNpc::StartDialogAni(void)
 0001:00357050       oCNpc::EV_PlayAniSound(oCMsgConversation *)
 0001:00357130       oCNpc::ActivateDialogCam(float)
 0001:00357360       oCNpc::DeactivateDialogCam(void)
 0001:003574F0       oCNpc::EV_PlaySound(oCMsgConversation *)
 0001:003580A0       oCNpc::EV_SndPlay(oCMsgConversation *)
 0001:00358270       oCNpc::EV_PrintScreen(oCMsgConversation *)
 0001:00358530       oCNpc::AddEffect(zSTRING const &,zCVob const *)
 0001:003587D0       oCNpc::RemoveEffect(zSTRING const &)
 0001:003588F0       oCNpc::EV_StartFX(oCMsgConversation *)
 0001:00358910       oCNpc::EV_StopFX(oCMsgConversation *)
 0001:00358A40       oCNpc::EV_LookAt(oCMsgConversation *)
 0001:00358E80       oCNpc::EV_StopLookAt(oCMsgConversation *)
 0001:00358F40       oCNpc::EV_PointAt(oCMsgConversation *)
 0001:003590E0       oCNpc::EV_StopPointAt(oCMsgConversation *)
 0001:00359130       oCNpc::EV_QuickLook(oCMsgConversation *)
 0001:003593C0       oCNpc::EV_Cutscene(oCMsgConversation *)
 0001:003595B0       oCNpc::EV_WaitTillEnd(oCMsgConversation *)
 0001:00359660       oCNpc::EV_StopProcessInfos(oCMsgConversation *)
 0001:00359680       oCNpc::EV_ProcessInfos(oCMsgConversation *)
 0001:00359740       oCNpc::AssessPlayer_S(oCNpc *)
 0001:00359940       oCNpc::AssessEnemy_S(oCNpc *)
 0001:00359B40       oCNpc::AssessFighter_S(oCNpc *)
 0001:00359D40       oCNpc::AssessBody_S(oCNpc *)
 0001:00359F40       oCNpc::AssessItem_S(oCItem *)
 0001:0035A140       oCNpc::SetNpcsToState(int,int)
 0001:0035A210       oCNpc::StopCutscenes(void)
 0001:0035A270       oCNpc::CreatePassivePerception(int,zCVob *,zCVob *)
 0001:0035AB70       oCNpc::CreateSoundPerception(int,zCVob *,zVEC3 const &,zCVob *,int)
 0001:0035B040       oCNpc::AssessMurder_S(oCNpc *)
 0001:0035B060       oCNpc::AssessThreat_S(oCNpc *)
 0001:0035B260       oCNpc::AssessDefeat_S(oCNpc *)
 0001:0035B280       oCNpc::AssessDamage_S(oCNpc *,int)
 0001:0035B420       oCNpc::AssessOthersDamage_S(oCNpc *,oCNpc *,int)
 0001:0035B440       oCNpc::AssessRemoveWeapon_S(oCNpc *)
 0001:0035B460       oCNpc::ObserveIntruder_S(void)
 0001:0035B4A0       oCNpc::AssessFightSound_S(zCVob *,zVEC3 const &,zCVob *)
 0001:0035B4D0       oCNpc::AssessQuietSound_S(zCVob *,zVEC3 const &)
 0001:0035B510       oCNpc::AssessWarn_S(oCNpc *)
 0001:0035B530       oCNpc::CatchThief_S(oCNpc *)
 0001:0035B6D0       oCNpc::AssessTheft_S(oCNpc *)
 0001:0035B6F0       oCNpc::AssessCall_S(oCNpc *)
 0001:0035B890       oCNpc::AssessTalk_S(oCNpc *)
 0001:0035BA30       oCNpc::AssessGivenItem_S(oCNpc *,oCItem *)
 0001:0035BC30       oCNpc::AssessMagic_S(oCNpc *,int)
 0001:0035BF30       oCNpc::AssessStopMagic_S(oCNpc *,int)
 0001:0035C200       oCNpc::AssessCaster_S(oCSpell *)
 0001:0035C220       oCNpc::AssessFakeGuild_S(void)
 0001:0035C250       oCNpc::MoveMob_S(oCMOB *)
 0001:0035C300       oCNpc::AssessUseMob_S(oCMobInter *)
 0001:0035C350       oCNpc::MoveNpc_S(oCNpc *)
 0001:0035C4F0       oCNpc::AssessEnterRoom_S(void)
 0001:0035C500       oCNpc::GetDistToSound(void)
 0001:0035C5C0       oCNpc::GetSoundSource(void)
 0001:0035C5D0       oCNpc::SetSoundSource(int,zCVob *,zVEC3 &)
 0001:0035C640       oCNpc::ClearPerceptionLists(void)
 0001:0035C6E0       oCNpc::IsMoreImportant(zCVob *,zCVob *)
 0001:0035C730       oCNpc::CreateVobList(zCArray<zCVob *> &,float)
 0001:0035C7F0       oCNpc::ClearVobList(void)
 0001:0035C870       oCNpc::InsertInVobList(zCVob *)
 0001:0035C9B0       oCNpc::RemoveFromVobList(zCVob *)
 0001:0035CA40       oCNpc::CreateVobList(float)
 0001:0035CBA0       oCNpc::SetPerceptionTime(float)
 0001:0035CBE0       oCNpc::PerceiveAll(void)
 0001:0035CD30       oCNpc::PerceptionCheck(void)
 0001:0035D1D0       oCNpc::PercFilterNpc(oCNpc *)
 0001:0035D1E0       oCNpc::PercFilterItem(oCItem *)
 0001:0035D200       oCNpc::ClearPerception(void)
 0001:0035D220       oCNpc::EnablePerception(int,int)
 0001:0035D360       oCNpc::DisablePerception(int)
 0001:0035D3C0       oCNpc::HasPerception(int)
 0001:0035D400       oCNpc::GetPerceptionFunc(int)
 0001:0035D440       oCNpc::SetPerceptionRange(int,float)
 0001:0035D460       oCNpc::IsInPerceptionRange(int,float)
 0001:0035D490       oCNpc::IsInPerceptionRange(int,zCVob *,zCVob *)
 0001:0035D4D0       oCNpc::InitStatics(void)
 0001:0035D8B0       oCNpc::ReleaseStatics(void)
 0001:0035D8C0       oCNpc::InitBodyStates(void)
 0001:0035D920       oCNpc::SetBodyState(int)
 0001:0035DAE0       oCNpc::GetBodyState(void)
 0001:0035DAF0       oCNpc::GetFullBodyState(void)
 0001:0035DB10       oCNpc::GetBodyStateName(void)
 0001:0035DBF0       oCNpc::HasBodyStateModifier(int)
 0001:0035DC10       oCNpc::SetBodyStateModifier(int)
 0001:0035DC40       oCNpc::ClrBodyStateModifier(int)
 0001:0035DC70       oCNpc::GetBodyStateModifierNames(void)
 0001:0035DF50       oCNpc::ModifyBodyState(int,int)
 0001:0035DFA0       oCNpc::IsBodyStateInterruptable(void)
 0001:0035DFD0       oCNpc::HasBodyStateFreeHands(void)
 0001:0035E000       oCNpc::IsInGlobalCutscene(void)
 0001:0035E040       oCNpc::MakeSpellBook(void)
 0001:0035E0C0       oCNpc::DestroySpellBook(void)
 0001:0035E0F0       oCNpc::ShowDebugInfo(zCCamera *)
 0001:0035E2F0       oCNpc::GetDamageMultiplier(void)
 0001:0035E300       oCNpc::SetDamageMultiplier(float)
 0001:0035E310       oCNpc::SetNpcAIDisabled(int)
 0001:0035E31B       __cfltcvt_init_11
 0001:0035E360       oCNpc::ProcessAITimer(void)
 0001:0035E3E0       oCNpc::IsScriptStateAIEnabled(void)
 0001:0035E430       oCNpc::IsMessageAIEnabled(void)
 0001:0035E480       oCNpc::SetShowNews(int)
 0001:0035E4A0       oCNpc::oCNpcTimedOverlay::Process(void)
 0001:0035E4D0       oCNpc::UseStandAI(void)
 0001:0035E560       oCNpc::SetItemEffectControledByModel(oCItem *,zCModelNodeInst *,int,int,int)
 0001:0035EA00       oCNpc::_CreateNewInstance(void)
 0001:0035EA60       oCNpc::operator delete(void *)
 0001:0035EA80       zCArray<zSTRING>::ShrinkToFit(void)
 0001:0035ECC0       zCArray<oCNpc::oSDirectionInfo *>::~zCArray<oCNpc::oSDirectionInfo *>(void)
 0001:0035ECE0       zCList<oCNpc::oCNpcTimedOverlay>::~zCList<oCNpc::oCNpcTimedOverlay>(void)
 0001:0035ED10       zCList<oCNpc::oCNpcTimedOverlay>::DeleteListDatas(void)
 0001:0035ED80       zCArray<oCNpcTalent *>::~zCArray<oCNpcTalent *>(void)
 0001:0035EDA0       zCList<oCSpell>::~zCList<oCSpell>(void)
 0001:0035EDD0       zCList<oCSpell>::Insert(oCSpell *)
 0001:0035EE20       zCList<oCSpell>::Remove(oCSpell *)
 0001:0035EE80       zCArray<TNpcSlot *>::~zCArray<TNpcSlot *>(void)
 0001:0035EEA0       zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>(ulong,ulong)
 0001:0035EF20       zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::~zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>(void)
 0001:0035F050       zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::PurgeCache(void)
 0001:0035F220       zCCache<oCNpc const *,oCNpc::TActiveInfo>::ClearCache(void)
 0001:0035F330       zCCache<oCNpc const *,oCNpc::TActiveInfo>::PurgeCache(void)
 0001:0035F450       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::~zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>(void)
 0001:0035F4A0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::SizeIndex(void)
 0001:0035F4B0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::SizeData(void)
 0001:0035F4C0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::SizeAll(void)
 0001:0035F4D0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::IndexPtr(ulong)
 0001:0035F4E0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::DataPtr(ulong)
 0001:0035F4F0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::ManDatPtr(ulong)
 0001:0035F500       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::IndexIsEqual(void const *,void const *)
 0001:0035F520       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::CopyIndex(void *,void const *)
 0001:0035F540       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::DestructIndex(void *)
 0001:0035F550       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::Hash(void const *,ulong &,ulong &)
 0001:0035F570       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::ConstructData(void *)
 0001:0035F590       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::DestructData(void *)
 0001:0035F5B0       zCCacheAsk<oCNpc const *,oCShrinkHelper>::zCCacheAsk<oCNpc const *,oCShrinkHelper>(ulong,ulong)
 0001:0035F630       zCCacheAsk<oCNpc const *,oCShrinkHelper>::~zCCacheAsk<oCNpc const *,oCShrinkHelper>(void)
 0001:0035F750       zCCacheAsk<oCNpc const *,oCShrinkHelper>::PurgeCache(void)
 0001:0035F9C0       zCCache<oCNpc const *,oCShrinkHelper>::ClearCache(void)
 0001:0035FAE0       zCCache<oCNpc const *,oCShrinkHelper>::PurgeCache(void)
 0001:0035FC20       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::~zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>(void)
 0001:0035FC70       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::SizeIndex(void)
 0001:0035FC80       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::SizeData(void)
 0001:0035FC90       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::SizeAll(void)
 0001:0035FCA0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::IndexPtr(ulong)
 0001:0035FCB0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::DataPtr(ulong)
 0001:0035FCC0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::ManDatPtr(ulong)
 0001:0035FCD0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::IndexIsEqual(void const *,void const *)
 0001:0035FCF0       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::CopyIndex(void *,void const *)
 0001:0035FD10       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::DestructIndex(void *)
 0001:0035FD20       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::Hash(void const *,ulong &,ulong &)
 0001:0035FD40       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::ConstructData(void *)
 0001:0035FD60       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::DestructData(void *)
 0001:0035FED0       std::basic_string<char,std::char_traits<char>,std::allocator<char>>::empty(void)
 0001:0035FEE0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::zCSparseArray<zTOverlayIndex,zCModelPrototype *>(ulong)
 0001:0035FF40       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::~zCSparseArray<zTOverlayIndex,zCModelPrototype *>(void)
 0001:0035FF90       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::SizeIndex(void)
 0001:0035FFA0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::SizeData(void)
 0001:0035FFB0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::SizeAll(void)
 0001:0035FFC0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::IndexPtr(ulong)
 0001:0035FFD0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::DataPtr(ulong)
 0001:0035FFE0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::ManDatPtr(ulong)
 0001:0035FFF0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::IndexIsEqual(void const *,void const *)
 0001:00360060       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::CopyIndex(void *,void const *)
 0001:003600D0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::DestructIndex(void *)
 0001:003600E0       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::Hash(void const *,ulong &,ulong &)
 0001:00360150       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::ConstructData(void *)
 0001:00360160       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::DestructData(void *)
 0001:00360170       zCArray<oCNpc *>::~zCArray<oCNpc *>(void)
 0001:00360190       zCList<oCNpc::oCNpcTimedOverlay>::`scalar deleting destructor'(uint)
 0001:003601D0       zCList<oCSpell>::`scalar deleting destructor'(uint)
 0001:00360210       zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::`scalar deleting destructor'(uint)
 0001:00360230       zCCache<oCNpc const *,oCNpc::TActiveInfo>::`vector deleting destructor'(uint)
 0001:00360250       zCCache<oCNpc const *,oCNpc::TActiveInfo>::~zCCache<oCNpc const *,oCNpc::TActiveInfo>(void)
 0001:00360380       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::`scalar deleting destructor'(uint)
 0001:003603A0       zCCacheAsk<oCNpc const *,oCShrinkHelper>::`scalar deleting destructor'(uint)
 0001:003603C0       zCCache<oCNpc const *,oCShrinkHelper>::`scalar deleting destructor'(uint)
 0001:003603E0       zCCache<oCNpc const *,oCShrinkHelper>::~zCCache<oCNpc const *,oCShrinkHelper>(void)
 0001:00360510       zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::`scalar deleting destructor'(uint)
 0001:00360530       zCSparseArray<zTOverlayIndex,zCModelPrototype *>::`scalar deleting destructor'(uint)
 0001:00360550       zCArray<oCNpcTalent *>::AllocDelta(int)
 0001:003605B0       zCArray<TNpcSlot *>::InsertEnd(TNpcSlot * const &)
 0001:00360680       zCArray<oCNpc *>::AllocDelta(int)
 0001:003606E0       zCCacheData<oCNpc const *,oCNpc::TActiveInfo>::Clear(void)
 0001:00360700       zCCacheData<oCNpc const *,oCNpc::TActiveInfo>::GetData(oCNpc const * const &)
 0001:00360750       zCCacheData<oCNpc const *,oCShrinkHelper>::Clear(void)
 0001:00360900       zCCacheData<oCNpc const *,oCShrinkHelper>::GetData(oCNpc const * const &)
 0001:003609C0       oCNpc::TActiveInfo::`scalar deleting destructor'(uint)
 0001:003609E0       oCShrinkHelper::`scalar deleting destructor'(uint)
 0001:00360B80       zCArray<TNpcSlot *>::AllocDelta(int)
 0001:00360BE0       zDYNAMIC_CAST(zCObject const *)
 0001:00360C10       zDYNAMIC_CAST(zCObject const *)
 0001:00360C40       zDYNAMIC_CAST(zCObject const *)
 0001:00360C70       zDYNAMIC_CAST(zCObject const *)
 0001:00360EF0       oCNpc::IsVictimAwareOfTheft(void)
 0001:00360F80       oCNpc::CheckSpecialSituations(void)
 0001:00361160       oCNpc::StopTheft(oCNpc *,int)
 0001:00361240       nullsub_57
 0001:00361250       oCNpc::OpenInventory(int)
 0001:00361410       oCNpc::CloseInventory(void)
 0001:00361430       oCNpc::OpenSteal(void)
 0001:00361950       oCNpc::CloseSteal(void)
 0001:00361970       oCNpc::OpenDeadNpc(void)
 0001:00361B40       oCNpc::CloseDeadNpc(void)
 0001:00361FF0       oCNpcMessage::_CreateNewInstance(void)
 0001:003620D0       oCNpcMessage::operator delete(void *)
 0001:003620F0       oCNpcMessage::_GetClassDef(void)
 0001:00362100       oCNpcMessage::Delete(void)
 0001:00362110       oCNpcMessage::SetInUse(int)
 0001:00362130       oCNpcMessage::IsInUse(void)
 0001:00362140       oCNpcMessage::SetHighPriority(int)
 0001:00362160       oCNpcMessage::GetIgnoreCutsceneMode(void)
 0001:00362170       oCNpcMessage::IsOverlay(void)
 0001:00362180       oCNpcMessage::IsJob(void)
 0001:00362190       oCNpcMessage::IsDeleted(void)
 0001:003621A0       oCNpcMessage::IsDeleteable(void)
 0001:003621B0       oCNpcMessage::IsHighPriority(void)
 0001:003623B0       oCMsgDamage::_CreateNewInstance(void)
 0001:003624B0       oCMsgDamage::_GetClassDef(void)
 0001:003624C0       oCMsgDamage::IsNetRelevant(void)
 0001:003624D0       oCMsgDamage::IsOverlay(void)
 0001:003624E0       oCMsgDamage::IsDeleteable(void)
 0001:003624F0       oCMsgDamage::IsHighPriority(void)
 0001:003626E0       oCMsgWeapon::_CreateNewInstance(void)
 0001:003627D0       oCMsgWeapon::_GetClassDef(void)
 0001:003627E0       oCMsgWeapon::`scalar deleting destructor'(uint)
 0001:00362810       oCMsgWeapon::~oCMsgWeapon(void)
 0001:00362A50       oCMsgMovement::_CreateNewInstance(void)
 0001:00362B50       oCMsgMovement::_GetClassDef(void)
 0001:00362D40       oCMsgAttack::_CreateNewInstance(void)
 0001:00362E40       oCMsgAttack::_GetClassDef(void)
 0001:00362E50       oCMsgAttack::IsNetRelevant(void)
 0001:00362E60       oCMsgAttack::IsOverlay(void)
 0001:00363060       oCMsgUseItem::_CreateNewInstance(void)
 0001:00363150       oCMsgUseItem::operator delete(void *)
 0001:00363170       oCMsgUseItem::_GetClassDef(void)
 0001:00363180       oCMsgUseItem::IsNetRelevant(void)
 0001:00363370       oCMsgState::_CreateNewInstance(void)
 0001:00363470       oCMsgState::_GetClassDef(void)
 0001:00363480       oCMsgState::IsOverlay(void)
 0001:00363680       oCMsgManipulate::_CreateNewInstance(void)
 0001:00363780       oCMsgManipulate::_GetClassDef(void)
 0001:00363790       oCMsgManipulate::IsNetRelevant(void)
 0001:003639A0       oCMsgConversation::_CreateNewInstance(void)
 0001:00363AB0       oCMsgConversation::_GetClassDef(void)
 0001:00363CB0       oCMsgMagic::_CreateNewInstance(void)
 0001:00363D80       oCMsgMagic::_GetClassDef(void)
 0001:00363D90       oCMsgMagic::IsJob(void)
 0001:00363DA0       oCMsgMagic::IsHighPriority(void)
 0001:00363DB0       oCMsgMagic::IsNetRelevant(void)
 0001:00363DC0       oCNpcMessage::oCNpcMessage(void)
 0001:00363E70       oCNpcMessage::`scalar deleting destructor'(uint)
 0001:00363EA0       oCNpcMessage::~oCNpcMessage(void)
 0001:00363F00       oCNpcMessage::Archive(zCArchiver &)
 0001:00363F70       oCNpcMessage::Unarchive(zCArchiver &)
 0001:00364010       oCMsgDamage::oCMsgDamage(void)
 0001:003640E0       oCMsgDamage::`scalar deleting destructor'(uint)
 0001:00364110       oCMsgDamage::oCMsgDamage(oCMsgDamage::TDamageSubType)
 0001:003641E0       oCMsgDamage::oCMsgDamage(oCMsgDamage::TDamageSubType,oCNpc::oSDamageDescriptor const &)
 0001:003642D0       oCMsgDamage::~oCMsgDamage(void)
 0001:003643B0       oCMsgDamage::MD_GetNumOfSubTypes(void)
 0001:003643C0       oCMsgDamage::MD_GetSubTypeString(int)
 0001:003644F0       oCMsgDamage::Pack(zCBuffer &,zCEventManager *)
 0001:00364500       oCMsgDamage::Unpack(zCBuffer &,zCEventManager *)
 0001:00364510       oCMsgDamage::Archive(zCArchiver &)
 0001:00364590       oCMsgDamage::Unarchive(zCArchiver &)
 0001:00364650       oCMsgMovement::oCMsgMovement(void)
 0001:00364720       oCMsgMovement::`scalar deleting destructor'(uint)
 0001:00364750       oCMsgMovement::oCMsgMovement(oCMsgMovement::TMovementSubType,zSTRING const &)
 0001:00364930       oCMsgMovement::oCMsgMovement(oCMsgMovement::TMovementSubType,zCVob *)
 0001:00364A30       oCMsgMovement::oCMsgMovement(oCMsgMovement::TMovementSubType,zVEC3 const &)
 0001:00364B20       oCMsgMovement::oCMsgMovement(oCMsgMovement::TMovementSubType,float)
 0001:00364C00       oCMsgMovement::oCMsgMovement(oCMsgMovement::TMovementSubType,int)
 0001:00364CE0       oCMsgMovement::~oCMsgMovement(void)
 0001:00364DC0       oCMsgMovement::Init(void)
 0001:00364E00       oCMsgMovement::Archive(zCArchiver &)
 0001:00364F20       oCMsgMovement::Unarchive(zCArchiver &)
 0001:00365090       oCMsgMovement::MD_GetNumOfSubTypes(void)
 0001:003650A0       oCMsgMovement::MD_GetSubTypeString(int)
 0001:003654E0       oCMsgMovement::MD_GetVobRefName(void)
 0001:00365560       oCMsgMovement::MD_SetVobRefName(zSTRING const &)
 0001:003656A0       oCMsgMovement::MD_SetVobParam(zCVob *)
 0001:003656B0       oCMsgMovement::Delete(void)
 0001:003656C0       oCMsgMovement::MD_GetTimeBehavior(void)
 0001:00365700       oCMsgMovement::MD_GetMinTime(void)
 0001:00365710       oCMsgWeapon::oCMsgWeapon(void)
 0001:003657D0       oCMsgWeapon::oCMsgWeapon(oCMsgWeapon::TWeaponSubType,int,int)
 0001:003658B0       oCMsgWeapon::Archive(zCArchiver &)
 0001:00365980       oCMsgWeapon::Unarchive(zCArchiver &)
 0001:00365AC0       oCMsgWeapon::MD_GetNumOfSubTypes(void)
 0001:00365AD0       oCMsgWeapon::MD_GetSubTypeString(int)
 0001:00365EE0       oCMsgWeapon::MD_GetTimeBehavior(void)
 0001:00365EF0       oCMsgWeapon::MD_GetMinTime(void)
 0001:00365F00       oCMsgAttack::oCMsgAttack(void)
 0001:00365FD0       oCMsgAttack::`scalar deleting destructor'(uint)
 0001:00366000       oCMsgAttack::~oCMsgAttack(void)
 0001:00366060       oCMsgAttack::oCMsgAttack(oCMsgAttack::TAttackSubType,int,int)
 0001:00366130       oCMsgAttack::oCMsgAttack(oCMsgAttack::TAttackSubType,zCVob *,float)
 0001:00366210       oCMsgAttack::Archive(zCArchiver &)
 0001:003662B0       oCMsgAttack::Unarchive(zCArchiver &)
 0001:003663A0       oCMsgAttack::Pack(zCBuffer &,zCEventManager *)
 0001:00366530       oCMsgAttack::Unpack(zCBuffer &,zCEventManager *)
 0001:003666A0       oCMsgAttack::MD_GetNumOfSubTypes(void)
 0001:003666B0       oCMsgAttack::MD_GetSubTypeString(int)
 0001:00366A20       oCMsgUseItem::oCMsgUseItem(void)
 0001:00366AE0       oCMsgUseItem::`scalar deleting destructor'(uint)
 0001:00366B10       oCMsgUseItem::oCMsgUseItem(oCMsgUseItem::TUseItemSubType,zCVob *)
 0001:00366BD0       oCMsgUseItem::~oCMsgUseItem(void)
 0001:00366C30       oCMsgUseItem::Pack(zCBuffer &,zCEventManager *)
 0001:00366C80       oCMsgUseItem::Unpack(zCBuffer &,zCEventManager *)
 0001:00366CD0       oCMsgUseItem::Archive(zCArchiver &)
 0001:00366D50       oCMsgUseItem::Unarchive(zCArchiver &)
 0001:00366E00       oCMsgState::oCMsgState(void)
 0001:00366ED0       oCMsgState::`scalar deleting destructor'(uint)
 0001:00366F00       oCMsgState::oCMsgState(oCMsgState::TStateSubType,float)
 0001:00366FE0       oCMsgState::oCMsgState(oCMsgState::TStateSubType,int)
 0001:003670C0       oCMsgState::oCMsgState(oCMsgState::TStateSubType,int,int,zSTRING const &)
 0001:003672B0       oCMsgState::~oCMsgState(void)
 0001:00367340       oCMsgState::Archive(zCArchiver &)
 0001:003673F0       oCMsgState::Unarchive(zCArchiver &)
 0001:003674E0       oCMsgState::MD_GetNumOfSubTypes(void)
 0001:003674F0       oCMsgState::MD_GetSubTypeString(int)
 0001:00367720       oCMsgState::MD_GetTimeBehavior(void)
 0001:00367730       oCMsgState::MD_GetMinTime(void)
 0001:00367770       oCMsgManipulate::oCMsgManipulate(void)
 0001:00367840       oCMsgManipulate::`scalar deleting destructor'(uint)
 0001:00367870       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType)
 0001:00367940       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType,zCVob *)
 0001:00367A10       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType,int)
 0001:00367AE0       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType,zSTRING const &,int)
 0001:00367CB0       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType,zCVob *,int)
 0001:00367D80       oCMsgManipulate::oCMsgManipulate(oCMsgManipulate::TManipulateSubType,zSTRING const &,zSTRING const &)
 0001:00367F80       oCMsgManipulate::~oCMsgManipulate(void)
 0001:00368040       oCMsgManipulate::Archive(zCArchiver &)
 0001:00368120       oCMsgManipulate::Unarchive(zCArchiver &)
 0001:00368240       oCMsgManipulate::Pack(zCBuffer &,zCEventManager *)
 0001:00368330       oCMsgManipulate::Unpack(zCBuffer &,zCEventManager *)
 0001:00368540       oCMsgManipulate::MD_GetNumOfSubTypes(void)
 0001:00368550       oCMsgManipulate::MD_GetSubTypeString(int)
 0001:003689B0       oCMsgManipulate::MD_GetTimeBehavior(void)
 0001:003689F0       oCMsgManipulate::MD_GetMinTime(void)
 0001:00368A00       oCMsgManipulate::MD_GetVobRefName(void)
 0001:00368AB0       oCMsgManipulate::MD_SetVobRefName(zSTRING const &)
 0001:00368BF0       oCMsgManipulate::MD_SetVobParam(zCVob *)
 0001:00368C00       oCMsgConversation::oCMsgConversation(void)
 0001:00368CD0       oCMsgConversation::`scalar deleting destructor'(uint)
 0001:00368D00       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType)
 0001:00368DE0       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType,zSTRING const &)
 0001:00368FD0       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType,zSTRING const &,zSTRING const &)
 0001:003691E0       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType,zCVob *)
 0001:003692C0       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType,int)
 0001:003693A0       oCMsgConversation::oCMsgConversation(oCMsgConversation::TConversationSubType,int,int,float)
 0001:003694A0       oCMsgConversation::~oCMsgConversation(void)
 0001:00369570       oCMsgConversation::Archive(zCArchiver &)
 0001:00369660       oCMsgConversation::Unarchive(zCArchiver &)
 0001:00369900       oCMsgConversation::MD_GetNumOfSubTypes(void)
 0001:00369910       oCMsgConversation::Delete(void)
 0001:00369B00       oCMsgConversation::IsOverlay(void)
 0001:00369B60       oCMsgConversation::MD_GetSubTypeString(int)
 0001:00369D60       oCMsgConversation::MD_GetVobRefName(void)
 0001:00369DB0       oCMsgConversation::MD_SetVobRefName(zSTRING const &)
 0001:00369EF0       oCMsgConversation::MD_SetVobParam(zCVob *)
 0001:00369F00       oCMsgConversation::MD_GetTimeBehavior(void)
 0001:00369F50       oCMsgConversation::MD_GetMinTime(void)
 0001:0036A030       oCMsgMagic::oCMsgMagic(void)
 0001:0036A0D0       oCMsgMagic::`scalar deleting destructor'(uint)
 0001:0036A100       oCMsgMagic::oCMsgMagic(oCMsgMagic::TConversationSubType)
 0001:0036A1B0       oCMsgMagic::oCMsgMagic(oCMsgMagic::TConversationSubType,int,int)
 0001:0036A260       oCMsgMagic::~oCMsgMagic(void)
 0001:0036A2C0       oCMsgMagic::Pack(zCBuffer &,zCEventManager *)
 0001:0036A360       oCMsgMagic::Unpack(zCBuffer &,zCEventManager *)
 0001:0036A420       oCMsgMagic::MD_GetNumOfSubTypes(void)
 0001:0036A430       oCMsgMagic::MD_GetSubTypeString(int)
 0001:0036A5E0       oCMsgMagic::Archive(zCArchiver &)
 0001:0036A680       oCMsgMagic::Unarchive(zCArchiver &)
 0001:0036AAD0       TNpcAIState::TNpcAIState(void)
 0001:0036AB10       TNpcAIState::~TNpcAIState(void)
 0001:0036AB60       oCNpc_States::oCNpc_States(void)
 0001:0036AE00       oCNpc_States::~oCNpc_States(void)
 0001:0036AF90       oCNpc_States::ClearParserReferences(void)
 0001:0036B010       oCNpc_States::SetOwner(oCNpc *)
 0001:0036B020       oCNpc_States::GetState(void)
 0001:0036B040       oCNpc_States::IsInState(int)
 0001:0036B080       oCNpc_States::IsScriptStateActive(void)
 0001:0036B0A0       oCNpc_States::GetStateTime(void)
 0001:0036B0D0       oCNpc_States::SetStateTime(int)
 0001:0036B0F0       oCNpc_States::SetRoutine(oCRtnEntry *,oCRtnEntry *)
 0001:0036B2E0       oCNpc_States::StartRtnState(int)
 0001:0036B330       oCNpc_States::ActivateRtnState(int)
 0001:0036B700       oCNpc_States::StartAIState(zSTRING const &,int,int,float,int)
 0001:0036B840       oCNpc_States::StartAIState(int,int,int,float,int)
 0001:0036BFC0       oCNpc_States::CanPlayerUseAIState(TNpcAIState const &)
 0001:0036C010       oCNpc_States::CanPlayerUseAIState(void)
 0001:0036C1A0       oCNpc_States::DoAIState(void)
 0001:0036C6E0       oCNpc_States::ClearAIState(void)
 0001:0036C880       oCNpc_States::EndCurrentState(void)
 0001:0036C8A0       oCNpc_States::IsInRoutine(void)
 0001:0036C8D0       oCNpc_States::IsInCutscene(void)
 0001:0036C8F0       oCNpc_States::StartOutputUnit(int)
 0001:0036C910       oCNpc_States::StartCutscene(zSTRING const &,zSTRING const &)
 0001:0036C9E0       oCNpc_States::CloseCutscenes(void)
 0001:0036CAF0       oCNpc_States::SetParserInstanceNpc(int,oCNpc *)
 0001:0036CBB0       oCNpc_States::SetParserInstanceItem(oCItem *)
 0001:0036CC10       oCNpc_States::InitRoutine(void)
 0001:0036CD50       oCNpc_States::ChangeRoutine(zSTRING const &)
 0001:0036CF60       oCNpc_States::ChangeRoutine(int)
 0001:0036D180       oCNpc_States::GetRoutineName(void)
 0001:0036D250       oCNpc_States::BeginInsertOverlayRoutine(void)
 0001:0036D2C0       oCNpc_States::StopInsertOverlayRoutine(void)
 0001:0036D3F0       oCNpc_States::RemoveOverlayEntry(oCRtnEntry *)
 0001:0036D460       oCNpc_States::RemoveOverlay(void)
 0001:0036D4A0       oCNpc_States::InsertRoutine(int,int,int,int,int,zSTRING const &,int)
 0001:0036D600       oCNpc_States::InsertRoutineCS(zSTRING const &,zSTRING const &)
 0001:0036D890       oCNpc_States::GetLastRoutineState(void)
 0001:0036D8B0       oCNpc_States::GetLastState(void)
 0001:0036D8C0       oCNpc_States::IsAIStateDriven(void)
 0001:0036D8E0       oCNpc_States::InitAIStateDriven(zVEC3 const &)
 0001:0036DA90       oCNpc_States::GetAIStatePosition(void)
 0001:0036DAA0       oCNpc_States::GetStateInfo(void)
 0001:0036DE30       oCNpc_States::GetLastError(void)
 0001:0036DE70       oCNpc_States::Archive(zCArchiver &)
 0001:0036DFF0       oCNpc_States::Unarchive(zCArchiver &)
 0001:0036E530       oCNpc_States::PackState(zCBuffer &)
 0001:0036E570       oCNpc_States::UnpackState(zCBuffer &)
 0001:0036EA00       oCObjectFactory::_CreateNewInstance(void)
 0001:0036EB20       oCObjectFactory::CreateEventManager(zCVob *)
 0001:0036EB80       oCObjectFactory::CreateCSManager(void)
 0001:0036EBE0       oCObjectFactory::CreateGameInfo(void)
 0001:0036EC40       oCObjectFactory::CreatePlayerInfo(void)
 0001:0036ECA0       oCObjectFactory::CreateWorld(void)
 0001:0036ED00       oCWorld::operator delete(void *)
 0001:0036ED20       oCObjectFactory::CreateNpc(int)
 0001:0036EDE0       oCObjectFactory::CreateItem(int)
 0001:0036EEA0       oCObjectFactory::CreateWaypoint(void)
 0001:0036EF00       oCObjectFactory::CreateWay(void)
 0001:0036EF90       oCParticleControl::oCParticleControl(void)
 0001:0036F040       oCParticleControl::oCParticleControl(zCWorld *)
 0001:0036F230       oCParticleControl::~oCParticleControl(void)
 0001:0036F2C0       oCParticleControl::GetPFXVob(void)
 0001:0036F2D0       oCParticleControl::SelectActivePFX(void)
 0001:0036F660       oCParticleControl::EditActivePFX(void)
 0001:0036F750       zCParticleEmitter::operator=(zCParticleEmitter const &)
 0001:00370330       oCParticleControl::SetStartPos(zVEC3 &)
 0001:00370350       oCParticleControl::StartActivePFX(zCVob *,zSTRING &)
 0001:00370550       oCParticleControl::StartActivePFX(void)
 0001:00370700       oCParticleControl::CreateNewPFX(zSTRING &)
 0001:00370930       oCParticleControl::SetPFXName(zSTRING &)
 0001:00370A90       oCParticleControl::SetWorld(zCWorld *)
 0001:00370AE0       oCParticleControl::BeginEditActive(void (*)(zSTRING const &))
 0001:00370BB0       oCParticleControl::DeleteLastPFX(void)
 0001:00370CA0       oCParticleControl::UpdateInternals(void)
 0001:00370CB0       oCParticleControl::EndEditActive(void)
 0001:00370F00       oCPortalRoom::oCPortalRoom(void)
 0001:00371080       oCPortalRoom::oCPortalRoom(zSTRING const &)
 0001:00371250       oCPortalRoom::~oCPortalRoom(void)
 0001:003712D0       oCPortalRoom::GetOwnerNpc(void)
 0001:00371320       oCPortalRoom::GetOwnerGuild(void)
 0001:00371330       oCPortalRoom::GetPortalName(void)
 0001:00371340       oCPortalRoom::IsPortalMyRoom(oCNpc *)
 0001:003715A0       oCPortalRoom::SavePortalData(zCArchiver &)
 0001:003715E0       oCPortalRoom::LoadPortalData(zCArchiver &)
 0001:00371620       oCPortalRoomManager::SortPortals(void const *,void const *)
 0001:00371690       oCPortalRoomManager::oCPortalRoomManager(void)
 0001:003716C0       oCPortalRoomManager::CleanUp(void)
 0001:00371710       oCPortalRoomManager::~oCPortalRoomManager(void)
 0001:003717B0       oCPortalRoomManager::AssignPortalToNpc(zSTRING const &,zSTRING const &)
 0001:003719E0       oCPortalRoomManager::AssignPortalToGuild(zSTRING const &,int)
 0001:00371BE0       oCPortalRoomManager::GetPortalRoomIndex(zSTRING const &)
 0001:00371D80       oCPortalRoomManager::IsPlayerInMyRoom(oCNpc *)
 0001:00371DC0       oCPortalRoomManager::IsNSCInPlayerRoom(oCNpc *)
 0001:00371E00       oCPortalRoomManager::WasPlayerInMyRoom(oCNpc *)
 0001:00371E30       oCPortalRoomManager::IsPortalMyRoom(zSTRING const &,oCNpc *)
 0001:00371F90       oCPortalRoomManager::GetCurPlayerPortalRoomOwner(void)
 0001:00371FF0       oCPortalRoomManager::GetCurPlayerPortalRoomGuild(void)
 0001:00372000       oCPortalRoomManager::GetFormerPlayerPortalRoomOwner(void)
 0001:00372060       oCPortalRoomManager::GetFormerPlayerPortalRoomGuild(void)
 0001:00372070       oCPortalRoomManager::HasPlayerChangedPortalRoom(void)
 0001:003720C0       oCPortalRoomManager::GetCurNpcPortalRoomOwner(oCNpc *)
 0001:00372160       oCPortalRoomManager::GetCurNpcPortalRoomGuild(oCNpc *)
 0001:003721A0       oCPortalRoomManager::ShowDebugInfo(void)
 0001:003727E0       oCPortalRoomManager::ShowPortalInfo(void)
 0001:00372B70       oCPortalRoomManager::SavePortalData(zCArchiver &)
 0001:00372BE0       oCPortalRoomManager::LoadPortalData(zCArchiver &)
 0001:00372E40       zCArraySort<oCPortalRoom *>::~zCArraySort<oCPortalRoom *>(void)
 0001:00372E60       zCArraySort<oCPortalRoom *>::AllocDelta(int)
 0001:00372EC0       zDYNAMIC_CAST(zCObject const *)
 0001:00373160       oCRtnCutscene::ResetPlayState(void)
 0001:00373180       oCRtnCutscene::~oCRtnCutscene(void)
 0001:00373250       oCRtnCutscene::`scalar deleting destructor'(uint)
 0001:00373270       oCRtnCutscene::oCRtnCutscene(void)
 0001:003732C0       oCRtnEntry::oCRtnEntry(void)
 0001:00373300       oCRtnEntry::oCRtnEntry(int,int,int,int,int,zSTRING const &,int)
 0001:003734A0       oCRtnEntry::~oCRtnEntry(void)
 0001:00373520       oCRtnEntry::GetTime(int &,int &,int &,int &)
 0001:00373550       oCRtnEntry::SetTime(int,int,int,int)
 0001:00373570       oCRtnEntry::GetState(void)
 0001:00373580       oCRtnEntry::GetWaypoint(void)
 0001:00373600       oCRtnManager::Sort_Routine(oCRtnEntry *,oCRtnEntry *)
 0001:00373650       oCRtnManager::Sort_WayBoxLimit(oCRtnManager::TRtn_WayBoxLimit *,oCRtnManager::TRtn_WayBoxLimit *)
 0001:00373670       oCRtnManager::Sort_WayBoxX(oCRtnManager::TRtn_WayBox *,oCRtnManager::TRtn_WayBox *)
 0001:00373690       oCRtnManager::Sort_WayBoxY(oCRtnManager::TRtn_WayBox *,oCRtnManager::TRtn_WayBox *)
 0001:003736B0       oCRtnManager::Sort_WayBoxZ(oCRtnManager::TRtn_WayBox *,oCRtnManager::TRtn_WayBox *)
 0001:003736D0       oCRtnManager::oCRtnManager(void)
 0001:00373780       oCRtnManager::~oCRtnManager(void)
 0001:00373900       oCRtnManager::SetWorld(zCWorld *)
 0001:00373910       oCRtnManager::ShowRoutine(int,int,oCNpc *)
 0001:00373B80       oCRtnManager::GetRoutineString(oCRtnEntry *)
 0001:00374000       oCRtnManager::Insert(oCNpc *,oCRtnEntry *)
 0001:00374020       oCRtnManager::UpdateGlobalRoutineEntry(void)
 0001:00374080       oCRtnManager::UpdateSingleRoutine(oCNpc *)
 0001:003741E0       oCRtnManager::RestartRoutines(void)
 0001:00374580       oCRtnManager::FindRoutine(oCNpc *,oCRtnEntry * &,oCRtnEntry * &)
 0001:003746C0       oCRtnManager::CheckRoutines(void)
 0001:003747D0       oCRtnManager::GetRoutinePos(oCNpc *)
 0001:00374AC0       oCRtnManager::WriteRoutine(zCArchiver &,oCNpc *,int)
 0001:00374BD0       oCRtnManager::ReadRoutine(zCArchiver &,oCNpc *)
 0001:00374E70       oCRtnManager::RemoveEntry(oCRtnEntry *)
 0001:00374EF0       oCRtnManager::RemoveRoutine(oCNpc *)
 0001:00375080       oCRtnManager::CheckConsistency(oCNpc *)
 0001:00375330       oCRtnManager::RemoveOverlay(oCNpc *)
 0001:003754D0       oCRtnManager::SetDailyRoutinePos(int)
 0001:00375530       oCRtnManager::InitWayBoxes(void)
 0001:00375580       oCRtnManager::InsertWaybox(oCNpc *,zVEC3 &,zVEC3 &)
 0001:00375850       oCRtnManager::RemoveWayBoxes(oCNpc *)
 0001:00375960       oCRtnManager::CreateWayBoxes(oCNpc *)
 0001:00375D20       oCRtnManager::DrawWayBoxes(void)
 0001:00375D60       oCRtnManager::CreateActiveList(oCNpc *,zTBBox3D &)
 0001:00375E90       oCRtnManager::CollidesWithWayBox(zTBBox3D &,zCList<oCNpc> &)
 0001:00376090       oCRtnManager::GetNumOfWayBoxes(void)
 0001:003760B0       zCListSort<oCRtnEntry>::~zCListSort<oCRtnEntry>(void)
 0001:003760E0       zCListSort<oCRtnEntry>::InsertSort(oCRtnEntry *)
 0001:00376160       zCListSort<oCRtnManager::TRtn_WayBox>::~zCListSort<oCRtnManager::TRtn_WayBox>(void)
 0001:00376190       zCListSort<oCRtnManager::TRtn_WayBox>::DeleteListDatas(void)
 0001:003761F0       zCListSort<oCRtnManager::TRtn_WayBox>::Remove(oCRtnManager::TRtn_WayBox *)
 0001:00376250       zCList<oCNpc>::~zCList<oCNpc>(void)
 0001:00376280       zCList<oCNpc>::Insert(oCNpc *)
 0001:003762D0       zCArraySort<oCRtnManager::TRtn_WayBoxLimit *>::zCArraySort<oCRtnManager::TRtn_WayBoxLimit *>(void)
 0001:003762F0       zCArraySort<oCRtnManager::TRtn_WayBoxLimit *>::~zCArraySort<oCRtnManager::TRtn_WayBoxLimit *>(void)
 0001:00376310       zCArray<oCRtnEntry *>::~zCArray<oCRtnEntry *>(void)
 0001:00376330       zCList<oCRtnManager::TRtn_WayBox>::~zCList<oCRtnManager::TRtn_WayBox>(void)
 0001:00376360       zCListSort<oCRtnEntry>::`scalar deleting destructor'(uint)
 0001:00376390       zCListSort<oCRtnManager::TRtn_WayBox>::`scalar deleting destructor'(uint)
 0001:003763C0       zCList<oCNpc>::`scalar deleting destructor'(uint)
 0001:00376400       zCArraySort<oCRtnManager::TRtn_WayBoxLimit *>::AllocDelta(int)
 0001:00376460       zCArray<oCRtnEntry *>::AllocDelta(int)
 0001:00376730       oCSpawnManager::oCSpawnManager(void)
 0001:00376780       oCSpawnManager::~oCSpawnManager(void)
 0001:00376820       oCSpawnManager::SetInsertRange(float)
 0001:00376830       oCSpawnManager::GetInsertRange(void)
 0001:00376840       oCSpawnManager::SetRemoveRange(float)
 0001:00376850       oCSpawnManager::GetRemoveRange(void)
 0001:00376860       oCSpawnManager::SetSpawnTime(float)
 0001:00376870       oCSpawnManager::GetSpawnTime(void)
 0001:00376880       oCSpawnManager::ClearList(void)
 0001:003768D0       oCSpawnManager::InsertInList(oCSpawnManager::oSSpawnNode *)
 0001:003769B0       oCSpawnManager::RemoveFromList(oCSpawnManager::oSSpawnNode *)
 0001:00376A20       oCSpawnManager::IsSpawningEnabled(void)
 0001:00376A30       oCSpawnManager::SetSpawningEnabled(int)
 0001:00376A40       oCSpawnManager::SpawnImmediately(int)
 0001:00376BE0       oCSpawnManager::CheckInsertNpcs(void)
 0001:00376C70       oCSpawnManager::ShowDebugInfo(void)
 0001:003770B0       oCSpawnManager::CheckInsertNpc(void)
 0001:003778C0       oCSpawnManager::InitCameraPos(void)
 0001:00377920       oCSpawnManager::InsertNpc(oCNpc *,zVEC3 const &)
 0001:00377A20       oCSpawnManager::SummonNpc(int,zVEC3 const &,float)
 0001:00377B20       oCSpawnManager::SpawnNpc(int,zSTRING const &,float)
 0001:00377BA0       oCSpawnManager::SpawnNpc(oCNpc *,zSTRING const &,float)
 0001:00377E70       oCSpawnManager::SpawnNpc(oCNpc *,zVEC3 const &,float)
 0001:00377FD0       oCSpawnManager::CheckForInvalidDialogCamPos(float,oCNpc *)
 0001:003781B0       oCSpawnManager::UseDeadNpcRoutinePos(oCNpc *)
 0001:00378260       oCSpawnManager::CanDeadNpcBeRemoved(oCNpc *)
 0001:003782E0       oCSpawnManager::CheckRemoveNpc(oCNpc *)
 0001:00378690       oCSpawnManager::DeleteNpc(oCNpc *)
 0001:00378720       oCSpawnManager::DeleteAllSummoned(void)
 0001:003787F0       oCSpawnManager::Archive(zCArchiver &)
 0001:00378890       oCSpawnManager::Unarchive(zCArchiver &)
 0001:00378A70       zCArray<oCSpawnManager::oSSpawnNode *>::~zCArray<oCSpawnManager::oSSpawnNode *>(void)
 0001:00378A90       zCArray<oCSpawnManager::oSSpawnNode *>::Remove(oCSpawnManager::oSSpawnNode * const &)
 0001:00378AE0       zCArray<oCSpawnManager::oSSpawnNode *>::AllocDelta(int)
 0001:00378B70       oCSVMManager::oCSVMManager(void)
 0001:00378DA0       oCSVM::`vector deleting destructor'(uint)
 0001:00378E10       oCSVMManager::~oCSVMManager(void)
 0001:00378E50       oCSVMManager::GetOU(zSTRING const &,int)
 0001:00379260       oCSVM::oCSVM(void)
 0001:00379270       oCSVM::~oCSVM(void)
 0001:00379290       oCSVM::InitByScript(int)
 0001:00379540       oCSVM::GetOU(zSTRING const &)
 0001:003797A0       oCText::InitText(void)
 0001:0037A6A0       oCVob::oCVob(void)
 0001:0037A6C0       oCVob::_GetClassDef(void)
 0001:0037A6D0       oCVob::GetSoundMaterial_AM(zCSoundManager::zTSndManMedium &,oTSndMaterial &,int)
 0001:0037A6E0       oCVob::`scalar deleting destructor'(uint)
 0001:0037A710       oCVob::~oCVob(void)
 0001:0037A720       oCVob::Init(void)
 0001:0037A730       oCVob::ClearDebugList(void)
 0001:0037A770       oCVob::ShowVobDebugInfo(zCCamera *)
 0001:0037A7A0       oCVob::GetShowDebug(void)
 0001:0037A7D0       oCVob::ToggleShowDebug(void)
 0001:0037A850       oCVob::SetShowDebug(int)
 0001:0037A8D0       oCVob::ShowDebugInfo(zCCamera *)
 0001:0037B3C0       oCVob::HasNpcEnoughSpace(zVEC3 &)
 0001:0037B6B0       oCVob::HasEnoughSpace(zVEC3 &)
 0001:0037B860       oCVob::SearchNpcPosition(zVEC3 &)
 0001:0037BCB0       oCVob::SearchFreePosition(zVEC3 &,zCVob *)
 0001:0037C0E0       oCVob::SetOnFloor(zVEC3 &)
 0001:0037C130       oCVob::GetFloorPosition(zVEC3 &)
 0001:0037C200       oCVob::GetFloorPositionWithVob(zVEC3 &,zCVob * &)
 0001:0037C2E0       oCVob::GetInstance(void)
 0001:0037C2F0       oCVob::GetInstanceName(void)
 0001:0037C380       oCVob::Archive(zCArchiver &)
 0001:0037C390       oCVob::Unarchive(zCArchiver &)
 0001:0037C3A0       oCVob::StartParticleEffects(zCTree<zCVob> *)
 0001:0037C3B0       oCVob::Render(zTRenderContext &)
 0001:0037C5F0       oCVob::GetAIVobMove(void)
 0001:0037C6A0       oCTouchDamage::GetDamageTypeArcEnum(ulong)
 0001:0037CAF0       oCTouchDamage::_CreateNewInstance(void)
 0001:0037CB50       oCTouchDamage::operator delete(void *)
 0001:0037CB70       oCTouchDamage::_GetClassDef(void)
 0001:0037CB80       oCTouchDamage::`scalar deleting destructor'(uint)
 0001:0037CBB0       oCTouchDamage::~oCTouchDamage(void)
 0001:0037CBC0       zCList<oCVob>::~zCList<oCVob>(void)
 0001:0037CBF0       zCList<oCVob>::Insert(oCVob *)
 0001:0037CC40       zCList<oCVob>::`scalar deleting destructor'(uint)
 0001:0037CEF0       oCWaypoint::oCWaypoint(void)
 0001:0037CF10       zCWaypoint::_GetClassDef(void)
 0001:0037CF20       oCWaypoint::`scalar deleting destructor'(uint)
 0001:0037CF50       oCWaypoint::~oCWaypoint(void)
 0001:0037CF60       oCWaypoint::CanBeUsed(zCVob const *)
 0001:0037CFD0       oCWay::oCWay(void)
 0001:0037CFF0       oCWay::`scalar deleting destructor'(uint)
 0001:0037D010       oCWay::~oCWay(void)
 0001:0037D0A0       oCWay::CanBeUsed(zCVob const *)
 0001:0037D190       oCWay::Init(zCWaypoint *,zCWaypoint *)
 0001:0037D880       oCWay::IsObjectOnWay(zCVob const *)
 0001:0037D8A0       oCWay::GetLadder(void)
 0001:0037D8B0       oCWay::GetDoor(void)
 0001:0037DD20       oCWorld::_CreateNewInstance(void)
 0001:0037DD80       oCWorld::oCWorld(void)
 0001:0037DF40       oCWorld::_GetClassDef(void)
 0001:0037DFB0       oCWorld::`scalar deleting destructor'(uint)
 0001:0037DFE0       oCWorld::~oCWorld(void)
 0001:0037E1E0       zCListSort<zCVob>::`scalar deleting destructor'(uint)
 0001:0037E210       zCListSort<oCNpc>::`scalar deleting destructor'(uint)
 0001:0037E240       oCWorld::CreateVob(zTVobType,zSTRING const &)
 0001:0037E3F0       oCWorld::CreateVob(zTVobType,int)
 0001:0037E610       oCWorld::Archive(zCArchiver &)
 0001:0037E860       oCWorld::Unarchive(zCArchiver &)
 0001:0037EA50       oCWorld::SaveWorld(zSTRING const &,zCWorld::zTWorldSaveMode,int,int)
 0001:0037EB40       oCWorld::LoadWorld(zSTRING const &,zCWorld::zTWorldLoadMode)
 0001:0037EE30       oCWorld::AddVobAsChild(zCVob *,zCTree<zCVob> *)
 0001:0037F0C0       oCWorld::RemoveVob(zCVob *)
 0001:0037F330       oCWorld::InsertVobInWorld(zCVob *)
 0001:0037F340       oCWorld::EnableVob(zCVob *,zCVob *)
 0001:0037F460       oCWorld::DisableVob(zCVob *)
 0001:0037F570       oCWorld::SearchVob(zCVob *,zCTree<zCVob> *)
 0001:0037F5C0       oCWorld::SearchVobByID(ulong,zCTree<zCVob> *)
 0001:0037F610       oCWorld::SearchVobByName(zSTRING const &)
 0001:0037F6C0       oCWorld::SearchVobListByName(zSTRING const &,zCArray<zCVob *> &)
 0001:0037F830       oCWorld::TraverseVobList(zCVobCallback &,void *)
 0001:0037F870       oCWorld::ClearNpcPerceptionVobLists(void)
 0001:0037F8B0       oCWorld::InsertInLists(zCVob *)
 0001:0037F990       oCWorld::RemoveFromLists(zCVob *)
 0001:0037FBD0       oCWorld::DisposeVobs(void)
 0001:0037FD50       oCWorld::DisposeWorld(void)
 0001:0037FD60       oCWorldTimer::oCWorldTimer(void)
 0001:0037FD70       oCWorldTimer::~oCWorldTimer(void)
 0001:0037FD80       oCWorldTimer::Timer(void)
 0001:0037FDD0       oCWorldTimer::GetDay(void)
 0001:0037FDE0       oCWorldTimer::SetDay(int)
 0001:0037FDF0       oCWorldTimer::GetTime(int &,int &)
 0001:0037FE40       oCWorldTimer::SetTime(int,int)
 0001:0037FE80       oCWorldTimer::GetFullTime(void)
 0001:0037FE90       oCWorldTimer::SetFullTime(float)
 0001:0037FEC0       oCWorldTimer::GetTimeString(void)
 0001:00380110       oCWorldTimer::IsLater(int,int)
 0001:00380150       oCWorldTimer::IsLaterEqual(int,int)
 0001:00380190       oCWorldTimer::IsTimeBetween(int,int,int,int)
 0001:00380220       oCWorldTimer::GetPassedTime(float)
 0001:00380240       oCWorldTimer::GetSkyTime(void)
 0001:00380280       oCWorldTimer::IsDay(void)
 0001:00380300       oCWorldTimer::IsNight(void)
 0001:00380390       oCWorldTimer::AddTime(int &,int &,int,int)
 0001:003803F0       zCListSort<oCItem>::Remove(oCItem *)
 0001:00380450       zCListSort<zCVob>::~zCListSort<zCVob>(void)
 0001:00380480       zCListSort<zCVob>::InsertSort(zCVob *)
 0001:00380500       zCListSort<oCNpc>::InsertSort(oCNpc *)
 0001:003805B0       TestFont(void)
 0001:00380840       MainProg(void)
 0001:00380990       zCConDat::zCConDat(zSTRING const &,zSTRING const &,int,void *,int)
 0001:00380BB0       zCConDat::zCConDat(zSTRING const &,zSTRING const &,int)
 0001:00380DB0       zCConsole::HandleEvent(int)
 0001:00380EA0       zCConsole::zCConsole(void)
 0001:003810B0       zCConsole::zCConsole(int,int,zSTRING const &)
 0001:00381200       zCConsole::~zCConsole(void)
 0001:003813B0       zCConsole::SetAutoCompletion(int)
 0001:003813C0       zCConsole::HasAutoCompletion(void)
 0001:003813D0       zCConsole::SetWorld(zCWorld *)
 0001:003813E0       zCConsole::GetWorld(void)
 0001:003813F0       zCConsole::SetParser(zCParser *)
 0001:00381400       zCConsole::GetParser(void)
 0001:00381410       zCConsole::AddChar(int,int)
 0001:00381890       zCConsole::InsertVar(zSTRING const &,zSTRING const &,int,void *,int)
 0001:003819C0       zCConsole::Register(zSTRING const &,zSTRING const &,int)
 0001:00381AE0       zCConsole::Register(zSTRING const &,zSTRING const &)
 0001:00381C00       zCConsole::AutoCompletion(zSTRING &)
 0001:00382380       zCConsole::SetFocus(void)
 0001:003823B0       zCConsole::RemoveFocus(void)
 0001:00382460       zCConsole::Show(void)
 0001:003826B0       zCConsole::Hide(void)
 0001:003827A0       zCConsole::Toggle(void)
 0001:00382890       zCConsole::IsVisible(void)
 0001:003828B0       zCConsole::AddSkip(int)
 0001:003828E0       zCConsole::Update(void)
 0001:00382F80       zCConsole::ShowInput(void)
 0001:00383100       zCConsole::Get(zSTRING const &)
 0001:003832B0       zCConsole::GetBestMatch(zSTRING const &)
 0001:003834B0       zCConsole::Eval(zSTRING const &)
 0001:00383860       zCConsole::Evaluate(zSTRING const &)
 0001:00383F30       zCConsole::SetPos(int,int)
 0001:00383F50       zCConsole::SetDim(int,int)
 0001:00383F70       zCConsole::SetFlags(int)
 0001:00383F80       zCConsole::AddEvalFunc(int (*)(zSTRING const &,zSTRING &))
 0001:00383FB0       zCConsole::SetChangedFunc(void (*)(zSTRING const &))
 0001:00383FC0       zCConsole::ShowHelp(void)
 0001:00384200       zCConsole::SaveInfoFile(zSTRING const &)
 0001:00384470       zCConsole::EditFunc(zSTRING const &,zSTRING &)
 0001:00384670       zCConsole::EditInstance(zSTRING const &,void *)
 0001:003846A0       zCConsole::EditInstance(int,void *)
 0001:00384A40       zCList<zCConsole>::~zCList<zCConsole>(void)
 0001:00384A70       zList<zCConDat>::InsertLast(zCConDat *)
 0001:00384AC0       zCList<zCConsole>::`scalar deleting destructor'(uint)
 0001:00384B00       zCConDat::`scalar deleting destructor'(uint)
 0001:00384B20       zCConDat::~zCConDat(void)
 0001:00384DB0       zCEventManager::_CreateNewInstance(void)
 0001:00384F00       zCEventManager::_GetClassDef(void)
 0001:00384F10       zCEventManager::GetNetVobControl(int)
 0001:00384F70       zCEventManager::DoFrameActivity(void)
 0001:00384FB0       zCEventManager::zCEventManager(void)
 0001:003850D0       zCEventManager::`scalar deleting destructor'(uint)
 0001:00385100       zCEventManager::zCEventManager(zCVob *)
 0001:00385230       zCEventManager::~zCEventManager(void)
 0001:00385320       zCEventManager::KillMessages(void)
 0001:00385380       zCEventManager::OnMessage(zCEventMessage *,zCVob *)
 0001:00385C60       zCEventManager::SendMessageToHost(zCEventMessage *,zCVob *,zCVob *)
 0001:00385E00       zCEventManager::SetShowMessageCommunication(int)
 0001:00385E10       zCEventManager::GetShowMessageCommunication(void)
 0001:00385E20       zCEventManager::ShowMessageCommunication(zCVob *,zCVob *)
 0001:00386000       zCEventManager::ProcessMessageList(void)
 0001:00386110       zCEventManager::SetActive(int)
 0001:00386270       zCEventManager::Delete(zCEventMessage *)
 0001:003862B0       zCEventManager::RemoveFromList(zCEventMessage *)
 0001:00386300       zCEventManager::InsertInList(zCEventMessage *)
 0001:003864F0       zCEventManager::SetCutscene(zCCutscene *)
 0001:00386560       zCEventManager::GetCutscene(void)
 0001:00386570       zCEventManager::GetCutsceneMode(void)
 0001:00386580       zCEventManager::Clear(void)
 0001:00386780       zCEventManager::IsEmpty(int)
 0001:003867E0       zCEventManager::IsRunning(zCEventMessage *)
 0001:00386810       zCEventManager::GetActiveMessage(void)
 0001:00386850       zCEventManager::Print_db(zSTRING const &,zCVob *)
 0001:00386860       zCEventManager::OnTouch(zCVob *)
 0001:00386920       zCEventManager::OnUntouch(zCVob *)
 0001:003869E0       zCEventManager::OnTouchLevel(void)
 0001:003869F0       zCEventManager::OnTrigger(zCVob *,zCVob *)
 0001:00386AB0       zCEventManager::OnUntrigger(zCVob *,zCVob *)
 0001:00386B70       zCEventManager::OnDamage(zCVob *,zCVob *,float,int,zVEC3 const &)
 0001:00386C40       zCEventManager::GetEventMessage(int)
 0001:00386C50       zCEventManager::ShowList(int,int)
 0001:00386F00       zCEventManager::Archive(zCArchiver &)
 0001:00386F40       zCEventManager::Unarchive(zCArchiver &)
 0001:00386FB0       zCArray<zCEventManager *>::Remove(zCEventManager * const &)
 0001:00387030       zCFontMan::zCFontMan(void)
 0001:00387040       zCFontMan::~zCFontMan(void)
 0001:00387110       zCFontMan::SearchFont(zSTRING const &)
 0001:003872D0       zCFontMan::Load(zSTRING const &)
 0001:00387490       zVEC2::zVEC2(void)
 0001:003874A0       zCFontMan::GetNumber(void)
 0001:003874B0       zCFontMan::GetFont(int)
 0001:003874D0       zCFont::CacheIn(void)
 0001:00387510       zCFont::LoadFontTexture(zSTRING const &)
 0001:00387780       zCFont::zCFont(zSTRING const &)
 0001:00387920       zCFont::~zCFont(void)
 0001:003879B0       zCFont::LoadSource(zSTRING const &)
 0001:00387B00       zCFont::SaveFontData(void)
 0001:00387F20       zCFont::LoadFontData(void)
 0001:003884A0       zCFont::GetFontName(void)
 0001:003884E0       zCFont::GetFontY(void)
 0001:003884F0       zCFont::GetFontX(zSTRING const &)
 0001:00388520       zCFont::GetWidth(char)
 0001:00388530       zCFont::GetLetterDistance(void)
 0001:00388540       zCFont::MapToAscii(char)
 0001:00388580       nullsub_30
 0001:003885E0       zCFont::GetSizex(void)
 0001:00388610       zCFont::GetSizey(void)
 0001:00388640       zCFont::GetPixel(int,int)
 0001:00388780       zCFont::GetPixelAlpha(int,int)
 0001:003888C0       zCFont::NextPixelX(int,int,int &)
 0001:00388920       zCFont::NextPixelY(int,int,int &)
 0001:00388980       zCFont::NextPixelXAlpha(int,int,int &)
 0001:003889E0       zCFont::NextPixelYAlpha(int,int,int &)
 0001:00388A40       zCFont::NextPixelXCol(int,int,int)
 0001:00388AC0       zCFont::NextPixelYCol(int,int,int)
 0001:00388B40       zCFont::AnalyseLetters(void)
 0001:00389390       zCFont::GetFontData(uchar,int &,zVEC2 &,zVEC2 &)
 0001:003893F0       zCFont::GetFontTexture(void)
 0001:00389400       zCArray<zCFont *>::~zCArray<zCFont *>(void)
 0001:00389420       zCArray<zCFont *>::AllocDelta(int)
 0001:003894B0       zCGfx::zCGfx(zSTRING const &)
 0001:00389670       zCGfx::zCGfx(int,int)
 0001:00389910       zCGfx::~zCGfx(void)
 0001:003899A0       zCGfx::Reload(void)
 0001:00389EF0       zCOLOR::zCOLOR(uchar,uchar,uchar,uchar)
 0001:00389F10       rnd(float)
 0001:00389F40       Gfx_ChangeBPP(TGfx_Gfx *)
 0001:00389F50       zCGfx::LoadRaw(zSTRING const &,int,int,int)
 0001:00389FF0       zCGfx::Readbyte(zFILE *)
 0001:0038A060       zCGfx::LoadPcx(zSTRING const &)
 0001:0038A510       zCGfx::LoadTga(zSTRING const &)
 0001:0038B7F0       zCGfx::SaveRaw(zSTRING const &)
 0001:0038B850       zCGfx::Save(zSTRING const &)
 0001:0038B9F0       zCGfx::LoadGfx(zSTRING const &)
 0001:0038BC60       Gfx_Col(zCOLOR)
 0001:0038BC80       Gfx_Col(int,int,int)
 0001:0038BD70       zCGfx::GetSizex(void)
 0001:0038BD80       zCGfx::GetSizey(void)
 0001:0038BD90       zCGfx::GetDataPtr(void)
 0001:0038BDA0       zCGfx::GetPixel(int,int)
 0001:0038BDC0       Gfx_Setpal(uchar *)
 0001:0038BE70       Gfx_Loadpal(char const *)
 0001:0038C000       zCParser::SetVersion(uchar)
 0001:0038C010       zCParser::GetVersion(void)
 0001:0038C020       zCPar_File::zCPar_File(void)
 0001:0038C050       zCPar_File::~zCPar_File(void)
 0001:0038C0F0       zCPar_File::IsNewerDate(zDATE &,zDATE &)
 0001:0038C170       zCPar_File::IsExactDate(zDATE &,zDATE &)
 0001:0038C1F0       zCPar_File::SetFileNumber(int)
 0001:0038C200       zCPar_File::GetFileNumber(void)
 0001:0038C210       zCPar_File::GetName(void)
 0001:0038C260       zCPar_File::EnableTreeLoad(int)
 0001:0038C270       zCPar_File::Load(zSTRING &,zCPar_SymbolTable &,zDATE &)
 0001:0038C4F0       zCPar_File::GetStartAddress(void)
 0001:0038C500       zCPar_File::GetEndAddress(void)
 0001:0038C510       zCPar_File::Dispose(void)
 0001:0038C530       zCPar_File::SetTree(zCPar_TreeNode *)
 0001:0038C570       zCPar_File::GetTree(void)
 0001:0038C580       zCPar_File::SetLabelCount(int)
 0001:0038C590       zCPar_File::GetLabelCount(void)
 0001:0038C5A0       zCPar_File::SaveTree(int,zCPar_Symbol *,zDATE &)
 0001:0038C820       zCPar_File::SaveTreeNode(zFILE *,zCPar_TreeNode *)
 0001:0038C990       zCPar_File::LoadTreeNode(zFILE *)
 0001:0038CAC0       zCPar_File::LoadTree(zFILE_STATS &,zCPar_SymbolTable &)
 0001:0038CE90       zCPar_File::DeleteTree(void)
 0001:0038CEC0       zCParser::GetParser(void)
 0001:0038CED0       zCParser::zCParser(int)
 0001:0038CFF0       zCParser::~zCParser(void)
 0001:0038D230       zCPar_TreeNode::`scalar deleting destructor'(uint)
 0001:0038D250       zCParser::SetMessageFunc(void (*)(zSTRING))
 0001:0038D260       zCParser::SetStopOnError(int)
 0001:0038D270       zCParser::Error(zSTRING &,int)
 0001:0038D5F0       zCParser::Message(zSTRING &)
 0001:0038D730       zCParser::Error(void)
 0001:0038D740       zCParser::SaveDat(zSTRING &)
 0001:0038D900       zCParser::LoadDat(zSTRING &)
 0001:0038DBA0       zCParser::Parse(zSTRING)
 0001:0038DE20       zCParser::ParseSource(zSTRING &)
 0001:0038E660       zCParser::ParseFile(zSTRING &)
 0001:0038EE30       zCParser::ParseBlock(void)
 0001:0038F0E0       zCParser::CreatePCode(void)
 0001:0038F810       zCParser::ShowSymbols(void)
 0001:0038F820       zCParser::PushTree(zCPar_TreeNode *)
 0001:0038F840       zCParser::PushOnStack(zCPar_TreeNode *)
 0001:003905F0       zCParser::SolveLabels(zCPar_TreeNode *)
 0001:00390650       zCParser::MergeFile(zSTRING &)
 0001:003908B0       zCParser::PopDataValue(void)
 0001:003908E0       zCParser::PopFloatValue(void)
 0001:00390910       zCParser::PopVarAddress(void)
 0001:00390940       zCParser::PopString(void)
 0001:00390960       zCParser::DoStack(int)
 0001:003918D0       zSTRING::zSTRING(zSTRING const *)
 0001:003919D0       zCParser::CallFunc(zSTRING const &)
 0001:003919F0       zCParser::CallFunc(int,...)
 0001:00391F10       zCParser::GetCurrentFunc(void)
 0001:00391F20       zCParser::CreateInstance(zSTRING &,void *)
 0001:00391FA0       zCParser::CreateInstance(int,void *)
 0001:00392010       zCParser::CreatePrototype(zSTRING &,void *)
 0001:00392090       zCParser::CreatePrototype(int,void *)
 0001:00392100       zCParser::Reset(void)
 0001:00392270       zCParser::SetPercentDone(int)
 0001:003922D0       zCParser::CreateHelpers(void)
 0001:00392440       zCParser::EnableTreeSave(int)
 0001:00392450       zCParser::EnableDatSave(int)
 0001:00392460       zCParser::EnableTreeLoad(int)
 0001:00392470       zCParser::GetIndex(zSTRING const &)
 0001:00392530       zCParser::MatchClass(int,zSTRING const &)
 0001:003925B0       zCParser::GetBaseClass(zCPar_Symbol *)
 0001:00392610       zCParser::GetBaseClass(int)
 0001:00392670       zCParser::GetBase(int)
 0001:003926C0       zCParser::GetPrototype(int,int)
 0001:00392730       zCParser::GetInstance(int,int)
 0001:003927F0       zCParser::GetSymbolInfo(int,int &,int &)
 0001:003928B0       zCParser::GetSymbolInfo(int)
 0001:003928C0       zCParser::GetSymbol(int)
 0001:003928D0       zCParser::GetSymbol(zSTRING const &)
 0001:00392990       zCParser::GetClassVarInfo(int,int,int &,int &)
 0001:00392BB0       zCParser::GetClassVarInfo(int,zSTRING &,int &,int &)
 0001:00392D70       zCParser::GetText(zSTRING &,int)
 0001:00392DB0       zCParser::GetText(int,int)
 0001:00392E90       zCParser::GetInt(int,int)
 0001:00392EE0       zCParser::GetInstanceValue(zSTRING &,int,void *,int)
 0001:00392FD0       zCParser::GetInstanceValue(int,int,void *,int)
 0001:003932E0       zCParser::IsValid(zSTRING &,void *,zSTRING &)
 0001:00393450       zCParser::CheckClassSize(zSTRING &,int)
 0001:00393470       zCParser::CheckClassSize(int,int)
 0001:00393730       zCParser::AddClassOffset(zSTRING &,int)
 0001:00393870       zCParser::SetInstance(zSTRING const &,void *)
 0001:00393910       zCParser::SetInstance(int,void *)
 0001:00393950       zCParser::AutoCompletion(zSTRING &)
 0001:00393B60       zCParser::GetNumFiles(void)
 0001:00393B70       zCParser::GetFileName(int)
 0001:00393C10       zCParser::IsStackFull(void)
 0001:00393C20       zCParser::GetLastErrorLine(void)
 0001:00393C30       zCParser::Reparse(zSTRING &)
 0001:00393D40       zCParser::SaveInstance(zSTRING &,void *)
 0001:00393D70       zCParser::SaveInstance(int,void *)
 0001:00394A30       zCParser::CloseViews(void)
 0001:00394A60       zCParser::ShowCode(int)
 0001:00394BB0       zCParser::SaveInfoFile(zSTRING)
 0001:00395200       zCParser::SetInfoFile(zCList<zSTRING> *,zSTRING const &)
 0001:00395390       zCParser::IsInAdditionalInfo(zSTRING const &)
 0001:00395540       zCParser::WriteAdditionalInfo(zSTRING &,int,int)
 0001:003958D0       zCParser::ClearAllInstanceRefs(void)
 0001:00395940       zCParser::ClearInstanceRefs(void *)
 0001:003959C0       zCParser::ResetGlobalVars(void)
 0001:00395A40       zCParser::CreateVarReferenceList(zSTRING const &,zCArray<int> &)
 0001:00395BC0       zCParser::ResetWithVarReferenceList(zCArray<int> &,void *)
 0001:00395C40       zCParser::SaveGlobalVars(zCArchiver &)
 0001:00396170       zCParser::LoadGlobalVars(zCArchiver &)
 0001:003966E0       zCArray<zCPar_File *>::~zCArray<zCPar_File *>(void)
 0001:00396700       zCArray<zCPar_File *>::InsertEnd(zCPar_File * const &)
 0001:00396980       zCPar_TreeNode::zCPar_TreeNode(void)
 0001:003969C0       zCPar_TreeNode::zCPar_TreeNode(int,int)
 0001:00396A10       zCPar_TreeNode::zCPar_TreeNode(int,zSTRING &,int)
 0001:00396BA0       zCPar_TreeNode::~zCPar_TreeNode(void)
 0001:00396C60       zCPar_TreeNode::SetLeft(zCPar_TreeNode *)
 0001:00396C70       zCPar_TreeNode::SetRight(zCPar_TreeNode *)
 0001:00396C80       zCPar_TreeNode::SetNext(zCPar_TreeNode *)
 0001:00396C90       zCPar_TreeNode::SeekEndTree(zCPar_TreeNode *)
 0001:00396CB0       zCPar_TreeNode::MakeDyadicNode(zCPar_TreeNode *,int,zCPar_TreeNode *)
 0001:00396D20       zCPar_TreeNode::MakeMonadicNode(int,zCPar_TreeNode *)
 0001:00396D80       zCParser::GetOperatorString(int,zSTRING &)
 0001:00397310       zCParser::FindNext(char *)
 0001:00397480       zCParser::PrevWord(void)
 0001:003974B0       zCParser::ReadWord(zSTRING &)
 0001:00397720       zCParser::Match(zSTRING &)
 0001:003978B0       zCParser::ReadVarType(void)
 0001:00397AE0       zCParser::ReadFuncType(void)
 0001:00397D00       zCParser::ReadInt(void)
 0001:00397FA0       zCParser::ReadFloat(void)
 0001:003982E0       zCParser::ReadString(zSTRING &)
 0001:003985C0       zCParser::ReadArray(void)
 0001:003987C0       zCParser::CreateLeaf(int,zCPar_TreeNode *)
 0001:00398820       zCParser::CreateStringLeaf(void)
 0001:00398A70       zCParser::CreateFloatLeaf(void)
 0001:00398C10       zCParser::GetNextToken(void)
 0001:00399390       zCParser::Parse_Expression_Primary(int &)
 0001:00399940       zCParser::Parse_Expression(int &,int)
 0001:00399B50       zCParser::ParseExpressionEx(zSTRING &)
 0001:00399BC0       zCParser::ParseExpression(void)
 0001:00399BE0       zCParser::EvalLeaf(zCPar_TreeNode *,int)
 0001:0039A0A0       zCParser::DeclareVar(int)
 0001:0039B3D0       zCParser::DeclareClass(void)
 0001:0039B5A0       zCParser::DeclareInstance(void)
 0001:0039BD80       zCParser::DeclarePrototype(void)
 0001:0039C270       zCParser::DeclareIf(void)
 0001:0039C6D0       zCParser::DeclareAssign(zSTRING &)
 0001:0039CE50       zCParser::DeclareAssignFunc(zSTRING &)
 0001:0039D140       zCParser::DeclareFunc(void)
 0001:0039D5D0       zCParser::DeclareReturn(void)
 0001:0039D7B0       zCParser::DeclareFuncCall(zSTRING &,int)
 0001:0039E180       zCParser::SearchFuncWithStartAddress(int)
 0001:0039E1F0       zCParser::GetNextCommand(zSTRING &)
 0001:0039EE10       zCParser::ShowPCodeSpy(zSTRING &)
 0001:0039EF40       zCParser::ShowPCode(int,zCView *,int)
 0001:0039F190       zCParser::DefineExternal(zSTRING const &,int (*)(void),int,int,...)
 0001:0039F550       zCParser::DefineExternalVar(zSTRING const &,void *,int,int)
 0001:0039F760       zCParser::GetParameter(int &)
 0001:0039F770       zCParser::GetParameter(float &)
 0001:0039F7B0       zCParser::GetParameter(zSTRING &)
 0001:0039F8F0       zCParser::GetInstance(void)
 0001:0039F920       zCParser::GetInstanceAndIndex(int &)
 0001:0039F960       zCParser::SetReturn(int)
 0001:0039F980       zCParser::SetReturn(float)
 0001:0039F9A0       zCParser::SetReturn(void *)
 0001:0039F9D0       zCParser::SetReturn(zSTRING &)
 0001:0039F9F0       zCParser::FindInstanceVar(zSTRING &)
 0001:0039FBD0       zCParser::GetLastInstance(void)
 0001:0039FBE0       zCParser::FindIndex(zSTRING &)
 0001:0039FD90       zCArray<zCPar_Symbol *>::~zCArray<zCPar_Symbol *>(void)
 0001:0039FDB0       zCArray<zCPar_Symbol *>::InsertEnd(zCPar_Symbol * const &)
 0001:0039FEB0       zCPar_StringTable::zCPar_StringTable(int)
 0001:0039FF50       zCPar_StringTable::~zCPar_StringTable(void)
 0001:0039FFD0       zCPar_StringTable::Clear(void)
 0001:003A0000       zCPar_StringTable::Insert(zSTRING &)
 0001:003A0150       zCPar_StringTable::GetLastEntry(void)
 0001:003A0160       zCPar_StringTable::GetString(int)
 0001:003A0180       zCPar_StringTable::Save(zSTRING &)
 0001:003A02A0       zCPar_StringTable::Load(zSTRING &)
 0001:003A0480       zCPar_StringTable::ShrinkToFit(void)
 0001:003A0500       zCPar_StringTable::Show(void)
 0001:003A0550       zCPar_Symbol::SetUseInstance(zCPar_Symbol *)
 0001:003A0670       zCPar_Symbol::SetUseInstanceAdr(void *)
 0001:003A0680       zCPar_Symbol::GetUseInstance(void)
 0001:003A0690       zCPar_Symbol::zCPar_Symbol(void)
 0001:003A06F0       zCPar_Symbol::~zCPar_Symbol(void)
 0001:003A07C0       zCPar_Symbol::AllocSpace(void)
 0001:003A0A40       zCPar_Symbol::GetDataAdr(int)
 0001:003A0D40       zCPar_Symbol::SetDataAdr(void *)
 0001:003A0D50       zCPar_Symbol::SetFlag(int)
 0001:003A0D80       zCPar_Symbol::HasFlag(int)
 0001:003A0DA0       zCPar_Symbol::SetParent(zCPar_Symbol *)
 0001:003A0DB0       zCPar_Symbol::GetParent(void)
 0001:003A0DC0       zCPar_Symbol::GetInstanceAdr(void)
 0001:003A0DD0       zCPar_Symbol::GetNext(void)
 0001:003A0DE0       zCPar_Symbol::ArrayCheck(int)
 0001:003A0E10       zCPar_Symbol::GetStackPos(int &,int)
 0001:003A0E20       zCPar_Symbol::SetStackPos(int,int)
 0001:003A0E30       zCPar_Symbol::SetValue(int,int)
 0001:003A0E60       zCPar_Symbol::SetValue(float,int)
 0001:003A0E90       zCPar_Symbol::SetValue(zSTRING &,int)
 0001:003A0FE0       zCPar_Symbol::GetValue(int &,int)
 0001:003A1010       zCPar_Symbol::GetValue(float &,int)
 0001:003A1040       zCPar_Symbol::GetValue(zSTRING &,int)
 0001:003A1190       zCPar_Symbol::SetLineData(int,int,int,int)
 0001:003A1550       zCPar_Symbol::GetLineData(int &,int &,int &,int &)
 0001:003A1590       zCPar_Symbol::SetFileNr(int)
 0001:003A1720       zCPar_Symbol::Save(zFILE *)
 0001:003A1940       zCPar_Symbol::SaveFull(zFILE *)
 0001:003A1BA0       zCPar_Symbol::LoadFull(zFILE *)
 0001:003A1D70       zCPar_Symbol::Load(zFILE *)
 0001:003A1F20       zCPar_Symbol::SetOffset(int)
 0001:003A1F30       zCPar_Symbol::GetOffset(void)
 0001:003A1F40       zCPar_Symbol::SetClassOffset(int)
 0001:003A1F50       zCPar_Symbol::GetClassOffset(void)
 0001:003A1F60       zCPar_SymbolTable::zCPar_SymbolTable(int)
 0001:003A2090       zCPar_SymbolTable::~zCPar_SymbolTable(void)
 0001:003A2100       zCPar_SymbolTable::Clear(void)
 0001:003A2190       zCPar_Symbol::`vector deleting destructor'(uint)
 0001:003A21F0       zCPar_SymbolTable::PreAlloc(int)
 0001:003A2260       zCPar_SymbolTable::Compare(void const *,void const *)
 0001:003A22E0       zCPar_SymbolTable::Save(zFILE *)
 0001:003A2460       zCPar_SymbolTable::Load(zFILE *)
 0001:003A2850       zCPar_SymbolTable::IsIn(zCPar_Symbol *)
 0001:003A2960       zCPar_SymbolTable::IsIn(zSTRING const &)
 0001:003A2A70       zCPar_SymbolTable::GetIndex(zCPar_Symbol *)
 0001:003A2B60       zCPar_SymbolTable::GetIndex(zSTRING const &)
 0001:003A2C50       zCPar_SymbolTable::GetIndex(zSTRING const &,int)
 0001:003A2D60       zCPar_SymbolTable::Search(zSTRING const &,int,int)
 0001:003A2E40       zCPar_SymbolTable::GetSymbol(zSTRING const &)
 0001:003A2EE0       zCPar_SymbolTable::GetSymbol(int)
 0001:003A2F00       zCPar_SymbolTable::Insert(zCPar_Symbol *)
 0001:003A3140       zCPar_SymbolTable::InsertEnd(zCPar_Symbol *)
 0001:003A3350       zCPar_SymbolTable::ShrinkToFit(void)
 0001:003A3430       zCPar_SymbolTable::SetSize(int)
 0001:003A34E0       zCPar_SymbolTable::GetNumInList(void)
 0001:003A34F0       zCPar_SymbolTable::GetLastSymbol(void)
 0001:003A3500       zCPar_SymbolTable::GetFirstSymbol(void)
 0001:003A3510       zCPar_SymbolTable::Show(void)
 0001:003A3AC0       zCPar_Stack::zCPar_Stack(int)
 0001:003A3AF0       zCPar_Stack::~zCPar_Stack(void)
 0001:003A3B10       zCPar_Stack::GetPopPos(void)
 0001:003A3B20       zCPar_Stack::SetPopPos(int)
 0001:003A3B30       zCPar_Stack::GetDynSize(void)
 0001:003A3B40       zCPar_Stack::GetStatSize(void)
 0001:003A3B50       zCPar_Stack::PushByte(uchar)
 0001:003A3B70       zCPar_Stack::PushWord(ushort)
 0001:003A3B90       zCPar_Stack::PushInt(int)
 0001:003A3BB0       zCPar_Stack::PushString(zSTRING &)
 0001:003A3C20       zCPar_Stack::PopByte(void)
 0001:003A3C30       zCPar_Stack::PopWord(void)
 0001:003A3C40       zCPar_Stack::PopInt(void)
 0001:003A3C50       zCPar_Stack::PopString(zSTRING &)
 0001:003A3E10       zCPar_Stack::CheckOverflow(int)
 0001:003A3E80       zCPar_Stack::Set(int,int)
 0001:003A3E90       zCPar_Stack::ReachedEnd(void)
 0001:003A3EA0       zCPar_Stack::Clear(void)
 0001:003A3EB0       zCPar_Stack::Save(zFILE *)
 0001:003A3EF0       zCPar_Stack::Load(zFILE *)
 0001:003A3F50       zCPar_DataStack::zCPar_DataStack(void)
 0001:003A3F70       zCPar_DataStack::~zCPar_DataStack(void)
 0001:003A3F80       zCPar_DataStack::Push(int)
 0001:003A4070       zCPar_DataStack::Pop(void)
 0001:003A4090       zCPar_DataStack::PopFloat(void)
 0001:003A4170       zCPar_DataStack::IsEmpty(void)
 0001:003A4180       zCPar_DataStack::Clear(void)
 0001:003A4190       zCArray<zSTRING *>::~zCArray<zSTRING *>(void)
 0001:003A41B0       zCArray<zCPar_Symbol *>::AllocDelta(int)
 0001:003A4210       zCArraySort<int>::~zCArraySort<int>(void)
 0001:003A4230       zCArraySort<int>::AllocDelta(int)
 0001:003A4290       zCArray<zSTRING *>::AllocDelta(int)
 0001:003A42F0       zList<zCParserExternals>::IsIn(zCParserExternals *)
 0001:003A43F0       zCInputCallback::zCInputCallback(void)
 0001:003A4400       zCInputCallback::~zCInputCallback(void)
 0001:003A4470       zCInputCallback::SetHandleEventTop(void)
 0001:003A44E0       zCInputCallback::SetEnableHandleEvent(int)
 0001:003A4560       zCInputCallback::GetEnableHandleEvent(void)
 0001:003A4590       zCInputCallback::DoEvents(int)
 0001:003A45C0       zCInputCallback::GetInput(void)
 0001:003A4640       zCView::zCView(void)
 0001:003A46E0       zCView::`scalar deleting destructor'(uint)
 0001:003A4700       zCView::zCView(int,int,int,int,zTviewID)
 0001:003A47C0       zCView::~zCView(void)
 0001:003A4990       zCView::Init(void)
 0001:003A4B20       zCView::Init(int,int,int,int,zTviewID)
 0001:003A4CC0       zCView::Init(int,int,zSTRING const &,zTviewID)
 0001:003A4DD0       rnd2(float)
 0001:003A4E00       zCView::nax(int)
 0001:003A4E40       zCView::nay(int)
 0001:003A4E80       zCView::anx(int)
 0001:003A4EC0       zCView::any(int)
 0001:003A4F00       zCView::StdPrintwin(zSTRING const &)
 0001:003A4F20       zCView::SetAutoScroll(float)
 0001:003A4F60       zCView::CheckAutoScroll(void)
 0001:003A5060       zCView::SetTransparency(int)
 0001:003A5070       zCView::SetAlphaBlendFunc(zTRnd_AlphaBlendFunc const &)
 0001:003A5080       zCView::SetColor(zCOLOR const &)
 0001:003A5090       zCView::GetColor(void)
 0001:003A50A0       zCView::Setflags(int)
 0001:003A50B0       zCView::ClrFlags(int)
 0001:003A50D0       zCView::HasFlag(int)
 0001:003A50F0       zCView::InsertBack(zCTexture *)
 0001:003A5130       zCView::InsertBack(zSTRING const &)
 0001:003A5230       zCView::InitPrintwin(void)
 0001:003A52A0       zCView::BlitText(void)
 0001:003A53C0       zCView::Blit(void)
 0001:003A5750       zCView::DrawItems(void)
 0001:003A5790       zCView::Top(void)
 0001:003A5810       zCView::Create(zSTRING const &,zCView::zEViewFX,zCView::zEViewFX,float,int)
 0001:003A5990       zCView::ForceOpen(void)
 0001:003A5C00       zCView::Open(void)
 0001:003A5E30       zCView::Close(void)
 0001:003A5F40       zCView::ApplyOpenClose(zVEC2 &,zVEC2 &)
 0001:003A61C0       zCView::UpdateOpen(void)
 0001:003A6210       zCView::UpdateClose(void)
 0001:003A62C0       zCView::UpdateOpenZoom(void)
 0001:003A63C0       zCView::UpdateCloseZoom(void)
 0001:003A64D0       zCView::RecalcChildsSize(void)
 0001:003A6540       zCView::RecalcChildsPos(void)
 0001:003A65B0       zCView::SetPos(int,int)
 0001:003A6660       zCView::GetPos(int &,int &)
 0001:003A6680       zCView::CalcPixelPos(int &,int &)
 0001:003A66C0       zCView::GetPixelPos(int &,int &)
 0001:003A66E0       zCView::Move(int,int)
 0001:003A67A0       zCView::SetSize(int,int)
 0001:003A6810       zCView::GetSize(int &,int &)
 0001:003A6830       zCView::GetPixelSize(int &,int &)
 0001:003A6860       zCView::GetExtends(int &,int &,int &,int &)
 0001:003A68A0       zCView::GetScreenExtends(int &,int &,int &,int &)
 0001:003A6910       zCView::GetPixelExtends(float &,float &,float &,float &)
 0001:003A6960       zCView::IsIn(int,int)
 0001:003A69F0       zCView::GetItem(int,int)
 0001:003A6AB0       zCView::CreateText(int,int,zSTRING const &,float,zCOLOR &,int,int)
 0001:003A6C50       zCView::CheckTimedText(void)
 0001:003A6D20       zCView::PrintTimed(int,int,zSTRING const &,float,zCOLOR *)
 0001:003A6DB0       zCView::PrintTimedCX(int,zSTRING const &,float,zCOLOR *)
 0001:003A6F00       zCView::PrintTimedCY(int,zSTRING const &,float,zCOLOR *)
 0001:003A6FC0       zCView::PrintTimedCXY(zSTRING const &,float,zCOLOR *)
 0001:003A7140       zCView::PrintMessage(zSTRING const &,zSTRING const &,float,zCOLOR &)
 0001:003A7450       zCView::PrintMessageCXY(zSTRING const &,zSTRING const &,float,zCOLOR &)
 0001:003A7BB0       zCView::PrintSelection(zSTRING const &,zSTRING const &,zCOLOR &,zCOLOR &)
 0001:003A7D40       zCView::Dialog(int,int,zSTRING const &,float,zCOLOR *)
 0001:003A7E10       zCView::DialogCX(int,zSTRING const &,float,zCOLOR *)
 0001:003A7E70       zCView::DialogCY(int,zSTRING const &,float,zCOLOR *)
 0001:003A7F60       zCView::DialogCXY(zSTRING const &,float,zCOLOR *)
 0001:003A7FB0       zCView::DialogMessage(zSTRING const &,zSTRING const &,float,zCOLOR &)
 0001:003A8240       zCView::DialogMessageCXY(zSTRING const &,zSTRING const &,float,zCOLOR &)
 0001:003A84D0       zCView::DialogSelection(zSTRING const &,zSTRING const &,zCOLOR &,zCOLOR &,float)
 0001:003A88F0       zCView::SetFont(zCFont *)
 0001:003A8910       zCView::SetFontColor(zCOLOR const &)
 0001:003A8920       zCView::SetFont(zSTRING const &)
 0001:003A8950       zCView::GetFont(void)
 0001:003A8960       zCView::GetFontName(void)
 0001:003A89F0       zCView::FontY(void)
 0001:003A8A10       zCView::FontSize(zSTRING &)
 0001:003A8A40       zCView::Print(int,int,zSTRING const &)
 0001:003A8B10       zCView::PrintChars(int,int,zSTRING const &)
 0001:003A8E50       zCView::PrintCX(int,zSTRING const &)
 0001:003A8F40       zCView::PrintCY(int,zSTRING const &)
 0001:003A9030       zCView::PrintCXY(zSTRING const &)
 0001:003A9140       zCView::ClrPrintwin(void)
 0001:003A92B0       zCView::CreateText(int,int,zSTRING const &)
 0001:003A9420       zCView::GetFirstText(void)
 0001:003A94A0       zCView::Nextline(zSTRING const &,float,zCOLOR *,int *)
 0001:003A9730       zCView::DefPrintwin(int,int,int,int)
 0001:003A98D0       zCView::Printwin(zSTRING const &)
 0001:003A9CC0       zCView::Input(int)
 0001:003A9D60       zCView::Input(int,zSTRING &)
 0001:003AA310       zCView::Input(int,int,int,zSTRING &)
 0001:003AA5E0       zCView::InputNumber(int,int)
 0001:003AAA90       zCView::PrintDebug(zSTRING const &)
 0001:003AAAB0       zCView::SetShowDebug(int)
 0001:003AAAC0       zCView::GetShowDebug(void)
 0001:003AAAD0       zCView::InsertItem(zCView *,int)
 0001:003AAD10       zCView::RemoveItem(zCView *)
 0001:003AAD90       zCView::ChangeMode(void)
 0001:003AADA0       zCView::SetNextMode(void)
 0001:003AADB0       zCView::SetMode(int,int,int,HWND__ * *)
 0001:003AAF70       zCView::Line(int,int,int,int,zCOLOR const &)
 0001:003AB020       zCView::GetCode(int,int)
 0001:003AB060       zCView::ClipLine(int &,int &,int &,int &)
 0001:003AB210       zCView::Render(void)
 0001:003AB220       zCViewText::zCViewText(int,int,zSTRING const &)
 0001:003AB3C0       zCViewText::`scalar deleting destructor'(uint)
 0001:003AB3E0       zCViewText::zCViewText(int,int,zSTRING const &,float &,zCOLOR &,int,int)
 0001:003AB580       zCViewText::Create(int,int,zSTRING const &,float &,zCOLOR &,int,int)
 0001:003AB700       zCViewText::~zCViewText(void)
 0001:003AB750       zCView::PatchMenuItemPrintwin(void)
 0001:003AB770       zCList<zCInputCallback>::~zCList<zCInputCallback>(void)
 0001:003AB7A0       zCList<zCInputCallback>::Insert(zCInputCallback *)
 0001:003AB7F0       zCList<zCInputCallback>::Remove(zCInputCallback *)
 0001:003AB850       zList<zCView>::InsertLast(zCView *)
 0001:003AB8A0       zList<zCView>::Remove(zCView *)
 0001:003ABA80       zCList<zCViewText>::~zCList<zCViewText>(void)
 0001:003ABAB0       zCList<zCViewText>::DeleteListDatas(void)
 0001:003ABB10       zCList<zCInputCallback>::`scalar deleting destructor'(uint)
 0001:003ABB50       zCList<zCViewText>::`scalar deleting destructor'(uint)
 0001:003ABBC0       zCVobWaypoint::zCVobWaypoint(void)
 0001:003ABBE0       zCVobWaypoint::_GetClassDef(void)
 0001:003ABBF0       zCVobWaypoint::`scalar deleting destructor'(uint)
 0001:003ABC20       zCVobWaypoint::~zCVobWaypoint(void)
 0001:003ABC30       zCWayNet::zCWayNet(void)
 0001:003ABCD0       zCWayNet::_GetClassDef(void)
 0001:003ABCE0       zCWayNet::`scalar deleting destructor'(uint)
 0001:003ABD10       zCWayNet::zCWayNet(zCWorld *)
 0001:003ABDB0       zCWayNet::~zCWayNet(void)
 0001:003ABF00       zCWayNet::HasWaypoint(float,float,float)
 0001:003ABF70       zCWayNet::HasWaypoint(zCWaypoint *)
 0001:003ABFA0       zCWayNet::HasWaypoint(zVEC3 &)
 0001:003ABFF0       zCWayNet::InsertWaypoint(float,float,float)
 0001:003AC100       zCWayNet::InsertWaypoint(zCWaypoint *)
 0001:003AC130       zCWayNet::InsertWaypoint(zCWaypoint *,zCWaypoint *,zCWaypoint *)
 0001:003AC2B0       zCWayNet::DeleteWaypoint(zCWaypoint *)
 0001:003AC420       zCWayNet::CreateWay(zCWaypoint *,zCWaypoint *)
 0001:003AC4F0       zCWayNet::DeleteWay(zCWaypoint *,zCWaypoint *)
 0001:003AC660       zCWayNet::GetNearestWaypoint(zVEC3 const &)
 0001:003AC6F0       zCWayNet::GetSecNearestWaypoint(zVEC3 &)
 0001:003AC7B0       zCWayNet::CorrectHeight(void)
 0001:003AC870       zCWayNet::Draw(zCCamera *)
 0001:003AC8A0       zCWayNet::UpdateVobDependencies(void)
 0001:003ACAF0       zCWayNet::ClearVobDependencies(void)
 0001:003ACCF0       zCWayNet::CreateVobDependencies(zCWorld *)
 0001:003ACF70       zCWayNet::MergeWaypoints(void)
 0001:003AD230       zCWayNet::CheckConsistency(int)
 0001:003AD730       zCWayNet::AddWays(zCWaypoint *,zCWaypoint *)
 0001:003AD830       zCWay::zCWay(void)
 0001:003AD850       zCWay::IsObjectOnWay(zCVob const *)
 0001:003AD860       zCWay::`scalar deleting destructor'(uint)
 0001:003AD890       zCWay::zCWay(zCWaypoint *,zCWaypoint *)
 0001:003AD940       zCWay::Init(zCWaypoint *,zCWaypoint *)
 0001:003AD9E0       zCWay::Free(void)
 0001:003ADA80       zCWay::~zCWay(void)
 0001:003ADA90       zCWay::GetGoalWaypoint(zCWaypoint *)
 0001:003ADAA0       zCWay::EstimateCost(void)
 0001:003ADB10       zCWay::GetLength(void)
 0001:003ADBC0       zCWay::GetJumpDistance(void)
 0001:003ADC80       zCWay::GetDistancePos(float,zCWaypoint *)
 0001:003ADD80       zCWay::CanBeUsed(zCVob const *)
 0001:003ADD90       zCWay::Draw(zCCamera *)
 0001:003AE270       zCWay::GetFloor(zCWorld *,zVEC3 const &)
 0001:003AE310       zCWay::CalcProperties(zCWorld *)
 0001:003AE600       zCWay::GetChasm(void)
 0001:003AE610       zCWay::CanJump(void)
 0001:003AE620       zCWayNet::SortWpList(zCWaypoint *,zCWaypoint *)
 0001:003AE770       zCWaypoint::zCWaypoint(void)
 0001:003AE860       zCWaypoint::CanBeUsed(zCVob const *)
 0001:003AE870       zCWaypoint::`scalar deleting destructor'(uint)
 0001:003AE8A0       zCWaypoint::Init(zVEC3 &)
 0001:003AE900       zCWaypoint::Init(float,float,float)
 0001:003AE970       zCWaypoint::Init(zCVobWaypoint *)
 0001:003AEA10       zCWaypoint::Free(void)
 0001:003AEA80       zCWaypoint::~zCWaypoint(void)
 0001:003AEB30       zCWaypoint::GetPositionWorld(void)
 0001:003AEB40       zCWaypoint::UpdatePositionWorld(void)
 0001:003AEBB0       zCWaypoint::SetName(zSTRING &)
 0001:003AED10       zCWaypoint::GetName(void)
 0001:003AEE70       zCWaypoint::GetVob(void)
 0001:003AEE80       zCWaypoint::CalcProperties(zCWorld *)
 0001:003AF0A0       zCWaypoint::CorrectHeight(zCWorld *)
 0001:003AF140       zCWaypoint::InsertWay(zCWay *)
 0001:003AF150       zCWaypoint::RemoveWay(zCWay *)
 0001:003AF1B0       zCWaypoint::HasWay(zCWaypoint *)
 0001:003AF1E0       zCWaypoint::GetNumberOfWays(void)
 0001:003AF200       zCWaypoint::GetWayList(void)
 0001:003AF210       zCWaypoint::SetWaypointVob(zCVobWaypoint *)
 0001:003AF250       zCWaypoint::Draw(void)
 0001:003AF260       zCWaypoint::Archive(zCArchiver &)
 0001:003AF2C0       zCWaypoint::Unarchive(zCArchiver &)
 0001:003AF330       zCWayNet::GetWaypoint(zSTRING const &)
 0001:003AF4A0       zCWayNet::SearchWaypoint(zCVobWaypoint *)
 0001:003AF4D0       zCWayNet::FindRoute(zVEC3 const &,zVEC3 const &,zCVob const *)
 0001:003AF560       zCWayNet::FindRoute(zVEC3 const &,zCWaypoint *,zCVob const *)
 0001:003AF5D0       zCWayNet::FindRoute(zVEC3 const &,zSTRING const &,zCVob const *)
 0001:003AF640       zCWayNet::FindRoute(zCWaypoint *,zCWaypoint *,zCVob const *)
 0001:003AF680       zCWayNet::FindRoute(zSTRING const &,zSTRING const &,zCVob const *)
 0001:003AF6E0       zCWayNet::SortOpenList(zCWaypoint *,zCWaypoint *)
 0001:003AF700       zCWayNet::InsertInOpen(zCWaypoint *)
 0001:003AF730       zCWayNet::IsInOpen(zCWaypoint *)
 0001:003AF750       zCWayNet::InsertInClosed(zCWaypoint *)
 0001:003AF770       zCWayNet::RemoveFromClosed(zCWaypoint *)
 0001:003AF780       zCWayNet::IsInClosed(zCWaypoint *)
 0001:003AF7A0       zCWayNet::IsInAnyList(zCWaypoint *)
 0001:003AF7D0       zCWayNet::EstimateCost(zCWaypoint *,zCWaypoint *)
 0001:003AF830       zCWayNet::CreateRoute(zCWaypoint *)
 0001:003AF8D0       zCWayNet::AStar(zCWaypoint *,zCWaypoint *,zCVob const *)
 0001:003AFB50       zCWayNet::GetWPList(zCList<zVEC3> &,zVEC3 &,float,float)
 0001:003AFCB0       zCWayNet::CreateWPVobList(zCList<zCVobWaypoint> &,zCTree<zCVob> *)
 0001:003AFCF0       zCWayNet::RemoveUnusedWPVobs(void)
 0001:003AFE40       zCWayNet::ArchiveOldFormat(zCArchiver &)
 0001:003B01D0       zCWayNet::Archive(zCArchiver &)
 0001:003B06F0       zCWayNet::UnarchiveOldFormat(zCArchiver &)
 0001:003B1200       zCWayNet::Unarchive(zCArchiver &)
 0001:003B1820       zCWayNet::CalcProperties(zCWorld *)
 0001:003B1860       zCRoute::zCRoute(void)
 0001:003B1880       zCRoute::`scalar deleting destructor'(uint)
 0001:003B18A0       zCRoute::~zCRoute(void)
 0001:003B18E0       zCRoute::SetStart(zCWaypoint *)
 0001:003B18F0       zCRoute::GetNextWP(void)
 0001:003B1960       zCRoute::GetTargetWP(void)
 0001:003B1970       zCRoute::GetCurrentWay(void)
 0001:003B1980       zCRoute::GetDesc(void)
 0001:003B1B60       zCRoute::GetRemainingDesc(void)
 0001:003B1D40       zCRoute::GetNumberOfWaypoints(void)
 0001:003B1D60       zCRoute::IsEmpty(void)
 0001:003B1D80       zCRoute::IsLastTarget(void)
 0001:003B1DA0       zCRoute::GetInterpolatedPosition(float,int,zVEC3 &)
 0001:003B1FA0       zCVobSpot::zCVobSpot(void)
 0001:003B1FC0       zCVobSpot::_GetClassDef(void)
 0001:003B1FD0       zCVobSpot::`scalar deleting destructor'(uint)
 0001:003B2000       zCVobSpot::~zCVobSpot(void)
 0001:003B2020       zCVobSpot::IsAvailable(zCVob *)
 0001:003B21A0       zCVobSpot::MarkAsUsed(float,zCVob *)
 0001:003B23B0       zCVobWaypoint::_CreateNewInstance(void)
 0001:003B2610       zCVobSpot::_CreateNewInstance(void)
 0001:003B26A0       zCVobSpot::operator delete(void *)
 0001:003B28B0       zCVobStartpoint::_CreateNewInstance(void)
 0001:003B2920       zCVobStartpoint::operator delete(void *)
 0001:003B2940       zCVobStartpoint::_GetClassDef(void)
 0001:003B2950       zCVobStartpoint::`scalar deleting destructor'(uint)
 0001:003B2980       zCVobStartpoint::~zCVobStartpoint(void)
 0001:003B2B70       zCWaypoint::_CreateNewInstance(void)
 0001:003B2DB0       zCWayNet::_CreateNewInstance(void)
 0001:003B2E80       zCList<zCWay>::~zCList<zCWay>(void)
 0001:003B2EB0       zCList<zCWay>::DeleteListDatas(void)
 0001:003B2F10       zCList<zCWay>::Insert(zCWay *)
 0001:003B2F60       zCList<zCWay>::Remove(zCWay *)
 0001:003B2FC0       zCList<zCWay>::GetNumInList(void)
 0001:003B2FE0       zCListSort<zCWaypoint>::~zCListSort<zCWaypoint>(void)
 0001:003B3010       zCListSort<zCWaypoint>::DeleteListDatas(void)
 0001:003B3080       zCListSort<zCWaypoint>::InsertSort(zCWaypoint *)
 0001:003B3100       zCList<zCVobWaypoint>::~zCList<zCVobWaypoint>(void)
 0001:003B3130       zCList<zCVobWaypoint>::Insert(zCVobWaypoint *)
 0001:003B3180       zCList<zCWay>::`scalar deleting destructor'(uint)
 0001:003B31C0       zCListSort<zCWaypoint>::`scalar deleting destructor'(uint)
 0001:003B31F0       zCList<zCVobWaypoint>::`scalar deleting destructor'(uint)
 0001:003B3260       zUlfi_StartUp(void)
 0001:003B33B0       zUlfi_ShutDown(void)
 0001:003B3400       zLocal_Startup(void)
 0001:003B3410       zLocal_Shutdown(void)
 0001:003B3420       zLocal_PerFrame(void)
 0001:003B3450       MemInitDefaultPool()
 0001:003B345B       MemFreeDefaultPool()
 0001:003B3460       _malloc
 0001:003B3465       _calloc
 0001:003B346A       _realloc
 0001:003B346F       _free
 0001:003B3474       __msize
 0001:003B3479       __expand
 0001:003B347E       __heapadd
 0001:003B3483       __heapchk
 0001:003B3488       __heapset
 0001:003B348D       __heapwalk
 0001:003B3492       __heapused
 0001:003B3497       __heapmin
 0001:003B349C       _shi_expand
 0001:003B34A2       shi_MemFreeDefaultPool()
 0001:003B34A8       _shi_heapmin
 0001:003B34AE       _shi_msize
 0001:003B34B4       _shi_heapwalk
 0001:003B34BA       _shi_realloc
 0001:003B34C0       _shi_delete
 0001:003B34C6       _shi_malloc
 0001:003B34CC       _shi_free
 0001:003B34D2       _shi_heapset
 0001:003B34D8       shi_MemInitDefaultPool()
 0001:003B34DE       _shi_heapadd
 0001:003B34E4       _shi_heapused
 0001:003B34EA       _shi_heapchk
 0001:003B34F0       _shi_calloc
 0001:003B34F6       shi_deletePtrStdcall(x,x)
 0001:003B34FC       _shi_new
 0001:003B3502       AIL_set_3D_room_type
 0001:003B3508       AIL_shutdown
 0001:003B350E       AIL_waveOutClose(x)
 0001:003B3514       AIL_close_3D_provider
 0001:003B351A       AIL_open_filter
 0001:003B3520       AIL_enumerate_filters(x,x,x)
 0001:003B3526       AIL_set_digital_master_volume_level
 0001:003B352C       AIL_last_error()
 0001:003B3532       AIL_set_preference(x,x)
 0001:003B3538       AIL_get_preference
 0001:003B353E       AIL_digital_configuration
 0001:003B3544       AIL_waveOutOpen(x,x,x,x)
 0001:003B354A       AIL_startup()
 0001:003B3550       AIL_shutdown()
 0001:003B3560       _MSS_auto_cleanup
 0001:003B3570       AIL_resume_sample
 0001:003B3576       AIL_resume_3D_sample
 0001:003B357C       AIL_stop_sample
 0001:003B3582       AIL_stop_3D_sample
 0001:003B3588       AIL_release_sample_handle
 0001:003B358E       AIL_release_3D_sample_handle
 0001:003B3594       AIL_end_3D_sample
 0001:003B359A       AIL_3D_sample_status(x)
 0001:003B35A0       AIL_sample_status
 0001:003B35A6       AIL_start_sample(x)
 0001:003B35AC       AIL_set_sample_loop_count(x,x)
 0001:003B35B2       AIL_set_sample_loop_block(x,x,x)
 0001:003B35B8       AIL_set_sample_volume_pan(x,x,x)
 0001:003B35BE       AIL_set_sample_playback_rate(x,x)
 0001:003B35C4       AIL_set_sample_file
 0001:003B35CA       AIL_set_filter_sample_preference(x,x,x)
 0001:003B35D0       AIL_set_sample_processor(x,x,x)
 0001:003B35D6       AIL_init_sample(x)
 0001:003B35DC       AIL_start_3D_sample
 0001:003B35E2       AIL_set_3D_orientation(x,x,x,x,x,x,x)
 0001:003B35E8       AIL_set_3D_position
 0001:003B35EE       AIL_set_3D_sample_loop_count(x,x)
 0001:003B35F4       AIL_set_3D_sample_loop_block(x,x,x)
 0001:003B35FA       AIL_set_3D_sample_cone(x,x,x,x)
 0001:003B3600       AIL_set_3D_sample_occlusion
 0001:003B3606       AIL_set_3D_sample_obstruction(x,x)
 0001:003B360C       AIL_set_3D_sample_effects_level
 0001:003B3612       AIL_set_3D_sample_distances(x,x,x)
 0001:003B3618       AIL_set_3D_sample_volume(x,x)
 0001:003B361E       AIL_set_3D_sample_playback_rate
 0001:003B3624       AIL_set_3D_sample_file(x,x)
 0001:003B362A       AIL_set_3D_velocity_vector
 0001:003B3630       AIL_3D_sample_cone(x,x,x,x)
 0001:003B3636       AIL_set_3D_distance_factor
 0001:003B363C       AIL_3D_provider_attribute(x,x,x)
 0001:003B3642       AIL_open_3D_provider(x)
 0001:003B3648       AIL_enumerate_3D_providers(x,x,x)
 0001:003B364E       AIL_digital_CPU_percent(x)
 0001:003B3654       AIL_set_3D_speaker_type(x,x)
 0001:003B365A       AIL_mem_free_lock(x)
 0001:003B3660       AIL_end_sample
 0001:003B3666       AIL_allocate_sample_handle(x)
 0001:003B366C       AIL_allocate_3D_sample_handle
 0001:003B3672       AIL_sample_ms_position(x,x,x)
 0001:003B3678       AIL_decompress_ADPCM(x,x,x)
 0001:003B367E       AIL_file_type
 0001:003B3684       AIL_WAV_info
 0001:003B368A       InitCommonControls()
 0001:003B3690       timeGetTime()
 0001:003B3696       WSACleanup()
 0001:003B369C       WSAGetLastError()
 0001:003B36A2       sendto(x,x,x,x,x,x)
 0001:003B36A8       send(x,x,x,x)
 0001:003B36AE       closesocket(x)
 0001:003B36B4       WSAAsyncSelect(x,x,x,x)
 0001:003B36BA       bind(x,x,x)
 0001:003B36C0       setsockopt(x,x,x,x,x)
 0001:003B36C6       socket(x,x,x)
 0001:003B36CC       ntohl(x)
 0001:003B36D2       ntohs(x)
 0001:003B36D8       getsockname(x,x,x)
 0001:003B36DE       listen(x,x)
 0001:003B36E4       WSASetLastError(x)
 0001:003B36EA       getpeername(x,x,x)
 0001:003B36F0       connect(x,x,x)
 0001:003B36F6       WSAAsyncGetHostByAddr(x,x,x,x,x,x,x)
 0001:003B36FC       WSACancelAsyncRequest(x)
 0001:003B3702       WSAAsyncGetHostByName(x,x,x,x,x)
 0001:003B3708       inet_addr(x)
 0001:003B370E       WSAAsyncGetServByName(x,x,x,x,x,x)
 0001:003B3714       recvfrom(x,x,x,x,x,x)
 0001:003B371A       accept(x,x,x)
 0001:003B3720       recv(x,x,x,x)
 0001:003B3726       SetCrashHandlerFilter(long (*)(_EXCEPTION_POINTERS *))
 0001:003B372C       GetNextStackTraceString(ulong,_EXCEPTION_POINTERS *)
 0001:003B3732       GetFirstStackTraceString(ulong,_EXCEPTION_POINTERS *)
 0001:003B3738       GetRegisterString(_EXCEPTION_POINTERS *)
 0001:003B373E       GetFaultReason(_EXCEPTION_POINTERS *)
 0001:003B3744       GetVersionExA(x)
 0001:003B374A       CreateThread(x,x,x,x,x,x)
 0001:003B3750       GetLocalTime(x)
 0001:003B3756       CloseHandle(x)
 0001:003B375C       WaitForSingleObject(x,x)
 0001:003B3762       CreateProcessA(x,x,x,x,x,x,x,x,x,x)
 0001:003B3768       lstrcatA(x,x)
 0001:003B376E       lstrcpyA(x,x)
 0001:003B3774       lstrlenA(x)
 0001:003B377A       GetModuleFileNameA(x,x,x)
 0001:003B3780       GlobalDeleteAtom(x)
 0001:003B3786       GlobalAddAtomA(x)
 0001:003B378C       ReleaseMutex(x)
 0001:003B3792       GetComputerNameA(x,x)
 0001:003B3798       GlobalMemoryStatus(x)
 0001:003B379E       DeleteFileA(x)
 0001:003B37A4       GetSystemInfo(x)
 0001:003B37AA       SetUnhandledExceptionFilter(x)
 0001:003B37B0       SetFilePointer(x,x,x,x)
 0001:003B37B6       CreateFileA(x,x,x,x,x,x,x)
 0001:003B37BC       WriteFile(x,x,x,x,x)
 0001:003B37C2       VirtualQuery(x,x,x)
 0001:003B37C8       GetFileTime(x,x,x,x)
 0001:003B37CE       GetFileSize(x,x)
 0001:003B37D4       FileTimeToDosDateTime(x,x,x)
 0001:003B37DA       FileTimeToLocalFileTime(x,x)
 0001:003B37E0       CreateEventA(x,x,x,x)
 0001:003B37E6       Sleep(x)
 0001:003B37EC       MultiByteToWideChar(x,x,x,x,x,x)
 0001:003B37F2       GetVersion()
 0001:003B37F8       FreeLibrary(x)
 0001:003B37FE       LoadLibraryA(x)
 0001:003B3804       GetCurrentThreadId()
 0001:003B380A       GetCurrentProcessId()
 0001:003B3810       ExitProcess(x)
 0001:003B3816       QueryPerformanceCounter(x)
 0001:003B381C       LocalAlloc(x,x)
 0001:003B3822       GetLastError()
 0001:003B3828       LocalReAlloc(x,x,x)
 0001:003B382E       LocalFree(x)
 0001:003B3834       SuspendThread(x)
 0001:003B383A       GetModuleHandleA(x)
 0001:003B3840       CreateMutexA(x,x,x)
 0001:003B3846       QueryPerformanceFrequency(x)
 0001:003B384C       DuplicateHandle(x,x,x,x,x,x,x)
 0001:003B3852       GetCurrentThread()
 0001:003B3858       GetCurrentProcess()
 0001:003B385E       CreateFileMappingA(x,x,x,x,x,x)
 0001:003B3864       GlobalSize(x)
 0001:003B386A       GlobalUnlock(x)
 0001:003B3870       GlobalLock(x)
 0001:003B3876       GlobalAlloc(x,x)
 0001:003B387C       GetProcAddress(x,x)
 0001:003B3882       SetThreadPriority(x,x)
 0001:003B3888       ResumeThread(x)
 0001:003B388E       InitializeCriticalSection(x)
 0001:003B3894       DeleteCriticalSection(x)
 0001:003B389A       EnterCriticalSection(x)
 0001:003B38A0       LeaveCriticalSection(x)
 0001:003B38A6       PostQuitMessage(x)
 0001:003B38AC       DispatchMessageA(x)
 0001:003B38B2       GetMessageA(x,x,x,x)
 0001:003B38B8       UpdateWindow(x)
 0001:003B38BE       SendMessageA(x,x,x,x)
 0001:003B38C4       SetWindowPos(x,x,x,x,x,x,x)
 0001:003B38CA       GetSystemMetrics(x)
 0001:003B38D0       GetDlgItem(x,x)
 0001:003B38D6       CreateDialogParamA(x,x,x,x,x)
 0001:003B38DC       LoadBitmapA(x,x)
 0001:003B38E2       PostThreadMessageA(x,x,x,x)
 0001:003B38E8       MessageBoxA(x,x,x,x)
 0001:003B38EE       GetFocus()
 0001:003B38F4       RegisterWindowMessageA(x)
 0001:003B38FA       FindWindowA(x,x)
 0001:003B3900       DefWindowProcA(x,x,x,x)
 0001:003B3906       SetCursorPos(x,x)
 0001:003B390C       GetCursorPos(x)
 0001:003B3912       wvsprintfA(x,x,x)
 0001:003B3918       _wsprintfA
 0001:003B391E       GetKeyboardState(x)
 0001:003B3924       LoadStringA(x,x,x,x)
 0001:003B392A       IsIconic(x)
 0001:003B3930       ReleaseDC(x,x)
 0001:003B3936       GetDC(x)
 0001:003B393C       EndPaint(x,x)
 0001:003B3942       FillRect(x,x,x)
 0001:003B3948       BeginPaint(x,x)
 0001:003B394E       GetClientRect(x,x)
 0001:003B3954       ShowWindow(x,x)
 0001:003B395A       SetWindowLongA(x,x,x)
 0001:003B3960       GetWindowDC(x)
 0001:003B3966       OffsetRect(x,x,x)
 0001:003B396C       GetWindowRect(x,x)
 0001:003B3972       SystemParametersInfoA(x,x,x,x)
 0001:003B3978       IsWindowVisible(x)
 0001:003B397E       PostMessageA(x,x,x,x)
 0001:003B3984       DrawIconEx(x,x,x,x,x,x,x,x,x)
 0001:003B398A       IsZoomed(x)
 0001:003B3990       DrawFrameControl(x,x,x,x)
 0001:003B3996       GetWindowTextA(x,x,x)
 0001:003B399C       GetSysColor(x)
 0001:003B39A2       SetWindowsHookExA(x,x,x,x)
 0001:003B39A8       UnhookWindowsHookEx(x)
 0001:003B39AE       CallNextHookEx(x,x,x,x)
 0001:003B39B4       GetKeyState(x)
 0001:003B39BA       AttachThreadInput(x,x,x)
 0001:003B39C0       SetFocus(x)
 0001:003B39C6       SetForegroundWindow(x)
 0001:003B39CC       GetWindowThreadProcessId(x,x)
 0001:003B39D2       GetForegroundWindow()
 0001:003B39D8       InvalidateRect(x,x,x)
 0001:003B39DE       GetDesktopWindow()
 0001:003B39E4       MoveWindow(x,x,x,x,x,x)
 0001:003B39EA       SetMenu(x,x)
 0001:003B39F0       DialogBoxParamA(x,x,x,x,x)
 0001:003B39F6       ShowCursor(x)
 0001:003B39FC       SetTimer(x,x,x,x)
 0001:003B3A02       SendDlgItemMessageA(x,x,x,x,x)
 0001:003B3A08       GetActiveWindow()
 0001:003B3A0E       SetCursor(x)
 0001:003B3A14       LoadCursorA(x,x)
 0001:003B3A1A       EndDialog(x,x)
 0001:003B3A20       DestroyMenu(x)
 0001:003B3A26       DestroyWindow(x)
 0001:003B3A2C       DeleteMenu(x,x,x)
 0001:003B3A32       CreateWindowExA(x,x,x,x,x,x,x,x,x,x,x,x)
 0001:003B3A38       RegisterClassA(x)
 0001:003B3A3E       LoadIconA(x,x)
 0001:003B3A44       DrawTextA(x,x,x,x,x)
 0001:003B3A4A       RedrawWindow(x,x,x,x)
 0001:003B3A50       TranslateMessage(x)
 0001:003B3A56       PeekMessageA(x,x,x,x,x)
 0001:003B3A5C       CloseClipboard()
 0001:003B3A62       SetClipboardData(x,x)
 0001:003B3A68       EmptyClipboard()
 0001:003B3A6E       OpenClipboard(x)
 0001:003B3A74       keybd_event(x,x,x,x)
 0001:003B3A7A       SetDIBColorTable(x,x,x,x)
 0001:003B3A80       RealizePalette(x)
 0001:003B3A86       CreatePalette(x)
 0001:003B3A8C       DeleteObject(x)
 0001:003B3A92       SelectPalette(x,x,x)
 0001:003B3A98       SetSystemPaletteUse(x,x)
 0001:003B3A9E       GetSystemPaletteEntries(x,x,x,x)
 0001:003B3AA4       GetStockObject(x)
 0001:003B3AAA       DeleteDC(x)
 0001:003B3AB0       RestoreDC(x,x)
 0001:003B3AB6       Rectangle(x,x,x,x,x)
 0001:003B3ABC       StretchBlt(x,x,x,x,x,x,x,x,x,x,x)
 0001:003B3AC2       SelectObject(x,x)
 0001:003B3AC8       SaveDC(x)
 0001:003B3ACE       CreateDIBSection(x,x,x,x,x,x)
 0001:003B3AD4       CreateCompatibleDC(x)
 0001:003B3ADA       GetDeviceCaps(x,x)
 0001:003B3AE0       GetClipRgn(x,x)
 0001:003B3AE6       ExcludeClipRect(x,x,x,x,x)
 0001:003B3AEC       BitBlt(x,x,x,x,x,x,x,x,x)
 0001:003B3AF2       OffsetClipRgn(x,x,x)
 0001:003B3AF8       SelectClipRgn(x,x)
 0001:003B3AFE       TextOutA(x,x,x,x,x)
 0001:003B3B04       SetTextColor(x,x)
 0001:003B3B0A       SetBkMode(x,x)
 0001:003B3B10       CreateFontIndirectA(x)
 0001:003B3B16       CreateRectRgnIndirect(x)
 0001:003B3B1C       CreateFontA(x,x,x,x,x,x,x,x,x,x,x,x,x,x)
 0001:003B3B22       GetUserNameA(x,x)
 0001:003B3B28       RegCloseKey(x)
 0001:003B3B2E       RegQueryValueExA(x,x,x,x,x,x)
 0001:003B3B34       RegOpenKeyExA(x,x,x,x,x)
 0001:003B3B3A       CoCreateInstance(x,x,x,x,x)
 0001:003B3B40       CoInitialize(x)
 0001:003B3B46       CoUninitialize()
 0001:003B3B4C       BinkGoto(x,x,x)
 0001:003B3B52       BinkOpen
 0001:003B3B58       BinkSetVolume(x,x,x)
 0001:003B3B5E       BinkSetSoundOnOff
 0001:003B3B64       BinkSetSoundSystem(x,x)
 0001:003B3B6A       BinkOpenMiles
 0001:003B3B70       BinkClose(x)
 0001:003B3B76       BinkNextFrame(x)
 0001:003B3B7C       BinkWait(x)
 0001:003B3B82       BinkCopyToBuffer
 0001:003B3B88       BinkDoFrame(x)
 0001:003B3B8E       BinkPause(x,x)
 0001:003B3B94       DirectDrawCreateEx(x,x,x,x)
 0001:003B3B9A       DirectDrawEnumerateExA(x,x,x)
 0001:003B3BA0       CD3duAlloc::operator new(uint)
 0001:003B3BA5       CD3duAlloc::operator delete(void *)
 0001:003B3BB2       CD3DXException::CD3DXException(long,char *,int)
 0001:003B3BDF       D3DXGetDeviceCaps(x,x,x,x,x)
 0001:003B3D00       D3DXGetCurrentVideoMode(x,x)
 0001:003B3DEE       CD3duContext::`scalar deleting destructor'(uint)
 0001:003B3E0E       D3DXCreateContextEx(x,x,x,x,x,x,x,x,x,x,x,x,x)
 0001:003B3F89       D3DXGetErrorString(x,x,x)
 0001:003B4FBB       CCapsFile::~CCapsFile(void)
 0001:003B4FC0       CD3duGlobals::CD3duGlobals(void)
 0001:003B4FD6       CHelInfo::`scalar deleting destructor'(uint)
 0001:003B4FF6       CCapsFile::`scalar deleting destructor'(uint)
 0001:003B5016       ListT<CSurfaceFormatNode>::CleanupList(void)
 0001:003B5037       CDDrawDeviceNode::`scalar deleting destructor'(uint)
 0001:003B5057       CD3duDeviceNode::`scalar deleting destructor'(uint)
 0001:003B5077       CD3duContextNode::`scalar deleting destructor'(uint)
 0001:003B5097       D3DXInitialize()
 0001:003B5147       D3DXGetDeviceCount()
 0001:003B51D4       D3DXGetDeviceDescription(x,x)
 0001:003B52BE       D3DXGetMaxNumVideoModes(x,x)
 0001:003B5378       D3DXGetVideoMode(x,x,x,x)
 0001:003B555F       D3DXCreateContext(x,x,x,x,x,x)
 0001:003B56CF       ListT<CSurfaceFormatNode>::~ListT<CSurfaceFormatNode>(void)
 0001:003B56DA       ListT<CSurfaceFormatNode>::Prepend(CSurfaceFormatNode *)
 0001:003B56EC       ListT<CSurfaceFormatNode>::Unlink(CSurfaceFormatNode *)
 0001:003B5716       ListT<CSurfaceFormatNode>::LeftBelongsCloserToListHead(CSurfaceFormatNode *,CSurfaceFormatNode *)
 0001:003B571C       ListT<CSurfaceFormatNode>::OrderedInsert(CSurfaceFormatNode *)
 0001:003B577E       ListT<CDDrawDeviceNode>::CleanupList(void)
 0001:003B579F       ListT<CD3duDeviceNode>::CleanupList(void)
 0001:003B57C0       ListT<CD3duContextNode>::CleanupList(void)
 0001:003B57E1       CSurfaceFormatList::~CSurfaceFormatList(void)
 0001:003B57EC       ListT<CDDrawDeviceNode>::~ListT<CDDrawDeviceNode>(void)
 0001:003B57F7       ListT<CDDrawDeviceNode>::Prepend(CDDrawDeviceNode *)
 0001:003B5809       ListT<CDDrawDeviceNode>::Unlink(CDDrawDeviceNode *)
 0001:003B5833       ListT<CDDrawDeviceNode>::LeftBelongsCloserToListHead(CDDrawDeviceNode *,CDDrawDeviceNode *)
 0001:003B5839       ListT<CDDrawDeviceNode>::OrderedInsert(CDDrawDeviceNode *)
 0001:003B589B       ListT<CD3duDeviceNode>::~ListT<CD3duDeviceNode>(void)
 0001:003B58A6       ListT<CD3duDeviceNode>::Prepend(CD3duDeviceNode *)
 0001:003B58B8       ListT<CD3duDeviceNode>::Unlink(CD3duDeviceNode *)
 0001:003B58E2       ListT<CD3duDeviceNode>::LeftBelongsCloserToListHead(CD3duDeviceNode *,CD3duDeviceNode *)
 0001:003B58E8       ListT<CD3duDeviceNode>::OrderedInsert(CD3duDeviceNode *)
 0001:003B594A       ListT<CD3duContextNode>::~ListT<CD3duContextNode>(void)
 0001:003B5955       ListT<CD3duContextNode>::Prepend(CD3duContextNode *)
 0001:003B5967       ListT<CD3duContextNode>::Unlink(CD3duContextNode *)
 0001:003B5991       ListT<CD3duContextNode>::LeftBelongsCloserToListHead(CD3duContextNode *,CD3duContextNode *)
 0001:003B5997       ListT<CD3duContextNode>::OrderedInsert(CD3duContextNode *)
 0001:003B59F9       CSurfaceFormatList::`scalar deleting destructor'(uint)
 0001:003B5A19       D3DXGetSurfaceFormat(x,x,x,x,x)
 0001:003B5B6B       CD3duContextList::~CD3duContextList(void)
 0001:003B5B76       CDDrawDeviceList::~CDDrawDeviceList(void)
 0001:003B5B81       CD3duDeviceList::~CD3duDeviceList(void)
 0001:003B5B8C       D3DXGetMaxSurfaceFormats(x,x,x)
 0001:003B5C4F       CD3duContextList::`scalar deleting destructor'(uint)
 0001:003B5C6F       CDDrawDeviceList::`scalar deleting destructor'(uint)
 0001:003B5C8F       CD3duDeviceList::`scalar deleting destructor'(uint)
 0001:003B5CAF       CD3duGlobals::~CD3duGlobals(void)
 0001:003B5CFA       CD3duGlobals::`scalar deleting destructor'(uint)
 0001:003B5D1A       D3DXUninitialize()
 0001:003B5DAE       D3DXDprintf(uint,char *)
 0001:003B5E16       D3DXWprintf(uint,char *)
 0001:003B5E71       CD3DXException::DebugString(void)
 0001:003B5E72       CD3DXException::Popup(void)
 0001:003B5E73       D3DXAssert(char const *,int,char const *)
 0001:003B5EB0       CD3duDeviceNode::GetVideoModeList(void)
 0001:003B5EB7       ListNodeT<CD3duDeviceNode>::ListNodeT<CD3duDeviceNode>(void)
 0001:003B5EBD       ListT<CD3duDeviceNode>::ListT<CD3duDeviceNode>(void)
 0001:003B5ED1       ListNodeT<CSurfaceFormatNode>::ListNodeT<CSurfaceFormatNode>(void)
 0001:003B5ED7       ListT<CSurfaceFormatNode>::ListT<CSurfaceFormatNode>(void)
 0001:003B5EEB       CD3duDeviceNode::GetCurrentVideoMode(_D3DX_VIDMODEDESC *)
 0001:003B5F60       CD3duDeviceNode::GetCapsAtVideoMode(_D3DX_VIDMODEDESC *,_D3DDeviceDesc7 * *,_DDCAPS_DX7 * *,_DDCAPS_DX7 * *,CSurfaceFormatList * *)
 0001:003B6274       CSurfaceFormatNode::CSurfaceFormatNode(void)
 0001:003B628E       CD3duDeviceNode::RefreshCaps(void)
 0001:003B6381       CSurfaceFormatList::CSurfaceFormatList(void)
 0001:003B6395       CD3duDeviceNode::CD3duDeviceNode(void)
 0001:003B63E9       CD3duDeviceNode::~CD3duDeviceNode(void)
 0001:003B643A       CD3duDeviceNode::GetSurfaceFormatList(_D3DX_VIDMODEDESC *,ulong)
 0001:003B6528       CD3duDeviceList::AddD3duDeviceNode(_D3DX_DEVICEDESC *,CDDrawDeviceNode *)
 0001:003B65CB       CD3duDeviceList::CD3duDeviceList(CDDrawDeviceList *,CHelInfo *)
 0001:003B6838       CD3duGlobals::IsInitialized(void)
 0001:003B683B       _IsEqualGUID
 0001:003B6852       CD3duGlobals::DetermineD3DXSurfaceClasses(_DDPIXELFORMAT *,_D3DX_SURFACEFORMAT,IDirect3D7 *,IDirectDraw7 *,_GUID)
 0001:003B6A9C       CD3duGlobals::D3duStrDup(char *)
 0001:003B6ACF       CRefreshRateList::FindRefreshRate(ulong)
 0001:003B6AEB       CRefreshRateList::LeftBelongsCloserToListHead(CRefreshRateNode *,CRefreshRateNode *)
 0001:003B6B00       CVideoModeList::GetVideoModeNode(CVideoModeNode * *,_D3DX_VIDMODEDESC *)
 0001:003B6B49       CVideoModeList::DoesVideoModeExist(ulong,ulong,ulong,ulong)
 0001:003B6B8B       CVideoModeList::LeftBelongsCloserToListHead(CVideoModeNode *,CVideoModeNode *)
 0001:003B6BC6       ListNodeT<CD3duContextNode>::ListNodeT<CD3duContextNode>(void)
 0001:003B6BCC       ListT<CD3duContextNode>::ListT<CD3duContextNode>(void)
 0001:003B6BE0       CCapsFile::CCapsFile(void)
 0001:003B6BEC       ListNodeT<CRefreshRateNode>::ListNodeT<CRefreshRateNode>(void)
 0001:003B6BF2       ListT<CRefreshRateNode>::ListT<CRefreshRateNode>(void)
 0001:003B6C06       ListT<CRefreshRateNode>::CleanupList(void)
 0001:003B6C27       ListT<CRefreshRateNode>::Prepend(CRefreshRateNode *)
 0001:003B6C39       ListT<CRefreshRateNode>::Unlink(CRefreshRateNode *)
 0001:003B6C63       ListT<CRefreshRateNode>::LeftBelongsCloserToListHead(CRefreshRateNode *,CRefreshRateNode *)
 0001:003B6C69       ListT<CRefreshRateNode>::OrderedInsert(CRefreshRateNode *)
 0001:003B6CCB       ListNodeT<CVideoModeNode>::ListNodeT<CVideoModeNode>(void)
 0001:003B6CD1       CD3duGlobals::FindBestMatchForHWLevel(ulong,ulong *)
 0001:003B6F08       CD3duContextNode::CD3duContextNode(void)
 0001:003B6F12       CD3duContextNode::~CD3duContextNode(void)
 0001:003B6F29       CD3duContextList::AddD3duContext(CD3duContext *)
 0001:003B6F9B       CRefreshRateNode::CRefreshRateNode(void)
 0001:003B6FA5       ListT<CRefreshRateNode>::~ListT<CRefreshRateNode>(void)
 0001:003B6FB0       CD3duGlobals::CheckAndMapD3duHandle(ulong *)
 0001:003B7012       CD3duGlobals::GetD3duDeviceNode(ulong)
 0001:003B7074       CD3duContextList::DestroyD3duContext(CD3duContext *)
 0001:003B709E       CRefreshRateList::AddRefreshRate(ulong)
 0001:003B70E8       CSurfaceFormatList::AddSurfaceFormat(_DDPIXELFORMAT *,IDirect3D7 *,IDirectDraw7 *,_GUID)
 0001:003B717D       CRefreshRateList::CRefreshRateList(void)
 0001:003B7191       CRefreshRateList::~CRefreshRateList(void)
 0001:003B719C       CVideoModeNode::CVideoModeNode(void)
 0001:003B71F4       CD3duContextList::CD3duContextList(void)
 0001:003B7208       CVideoModeList::AddVideoMode(_D3DX_VIDMODEDESC *)
 0001:003B72BF       CD3duGlobals::InitializeIfNeeded(void)
 0001:003B73C4       IUnknown::IUnknown(void)
 0001:003B73C7       CD3duContext::AddRef(void)
 0001:003B73D4       CD3duContext::Release(void)
 0001:003B73F7       CD3duContext::GetDD(void)
 0001:003B7414       CD3duContext::GetD3D(void)
 0001:003B7435       CD3duContext::GetD3DDevice(void)
 0001:003B7452       CD3duContext::GetPrimary(void)
 0001:003B7473       CD3duContext::GetZBuffer(void)
 0001:003B7494       CD3duContext::GetBackBuffer(ulong)
 0001:003B74CF       CD3duContext::GetWindow(void)
 0001:003B74D9       CD3duContext::GetFocusWindow(void)
 0001:003B74E3       CD3duContext::RestoreSurfaces(void)
 0001:003B755F       D3DXMATRIX::D3DXMATRIX(void)
 0001:003B7562       CD3duContext::UpdateFrame(ulong)
 0001:003B785C       CD3duContext::Clear(ulong)
 0001:003B78FF       CD3duContext::SetClearColor(ulong)
 0001:003B7912       CD3duContext::SetClearDepth(float)
 0001:003B7925       CD3duContext::SetClearStencil(ulong)
 0001:003B7938       DeviceWindowProc(HWND__ *,uint,uint,long)
 0001:003B7968       CD3duContext::_CreateDeviceWindow(void)
 0001:003B7AD2       CD3duContext::_DestroyDeviceWindow(void)
 0001:003B7AE7       CD3duContext::_InitCooperativeLevel(void)
 0001:003B7B0C       CD3duContext::_CreatePalette(void)
 0001:003B7C86       CD3duContext::_InitViewport(void)
 0001:003B7D00       D3DXMATRIX::operator _D3DMATRIX *(void)
 0001:003B7D03       CD3duContext::_Create3DDevice(void)
 0001:003B7DCE       CD3duContext::_ChooseZBuffer(ulong,ulong)
 0001:003B7F3E       CD3duContext::_CreateZBuffer(void)
 0001:003B8057       CD3duContext::_DestroyDXBuffers(int)
 0001:003B8170       CD3duContext::_EnumSurfacesCallback2(IDirectDrawSurface7 *,_DDSURFACEDESC2 *,void *)
 0001:003B8186       CD3duContext::_EnumBackBuffers(IDirectDrawSurface7 *,ulong)
 0001:003B822C       CD3duContext::GetDeviceIndex(ulong *,ulong *)
 0001:003B824F       CD3duContext::GetNumBackBuffers(void)
 0001:003B8259       CD3duContext::GetNumBits(ulong *,ulong *,ulong *,ulong *)
 0001:003B8295       CD3duContext::GetBufferSize(ulong *,ulong *)
 0001:003B82B8       CD3duContext::GetRefreshRate(void)
 0001:003B82ED       CD3duContext::GetCreationFlags(void)
 0001:003B82F7       ID3DXContext::ID3DXContext(void)
 0001:003B82FA       CD3duContext::~CD3duContext(void)
 0001:003B83CC       CD3duContext::QueryInterface(_GUID const &,void * *)
 0001:003B84AC       CD3duContext::DrawDebugText(float,float,ulong,char *)
 0001:003B8690       CD3duContext::_CreateFullscreenBuffers(void)
 0001:003B8779       CD3duContext::_CreateWindowedBuffers(void)
 0001:003B88D9       CD3duContext::_CreateOffScreenBuffers(void)
 0001:003B89B9       CD3duContext::CD3duContext(void)
 0001:003B8A80       CD3duContext::_CreateDXBuffers(void)
 0001:003B8AF2       CD3duContext::Resize(ulong,ulong)
 0001:003B8E96       CD3duContext::_D3duInitialize(ulong,ulong,HWND__ *,HWND__ *,ulong,ulong,ulong,ulong,ulong,ulong,ulong,ulong)
 0001:003B9221       CD3dxFile::CD3dxFile(void)
 0001:003B9242       CD3dxFile::IsOpen(void)
 0001:003B924F       CD3dxFile::WasCorrupted(void)
 0001:003B9256       CD3dxFile::GetSize(void)
 0001:003B925D       CD3dxFile::Close(void)
 0001:003B92B4       CD3dxFile::CloseCorrupt(void)
 0001:003B92DA       CD3dxFile::RootEntry(void)
 0001:003B92DE       CD3dxFile::CreateEntry(ulong,ulong)
 0001:003B93B3       CD3dxFile::ValidEntry(ulong)
 0001:003B93E5       CD3dxFile::GetId(ulong)
 0001:003B941C       CD3dxFile::EditData(ulong,ulong *)
 0001:003B946D       CD3dxFile::ReadData(ulong,ulong *)
 0001:003B9472       CD3dxFile::GetChild(ulong)
 0001:003B94AA       CD3dxFile::SetChild(ulong,ulong)
 0001:003B94F1       CD3dxFile::GetSibling(ulong)
 0001:003B9529       CD3dxFile::SetSibling(ulong,ulong)
 0001:003B9570       CD3dxFile::FindChild(ulong,ulong)
 0001:003B95A2       CD3dxFile::FindChild(ulong,ulong,void const *,ulong)
 0001:003B95FE       CD3dxFile::FindSibling(ulong,ulong)
 0001:003B962B       CD3dxFile::FindSibling(ulong,ulong,void const *,ulong)
 0001:003B9682       CD3dxFile::Compress(void *,ulong,ulong *,void const *,ulong)
 0001:003B9713       CD3dxFile::Decompress(void *,ulong,void const *,ulong,ulong *)
 0001:003B9792       CD3dxFile::~CD3dxFile(void)
 0001:003B9797       CD3dxFile::Open(char const *)
 0001:003B991B       CHelInfo::CHelInfo(void)
 0001:003B9946       CHelInfo::_D3DEnumCBListSurfaceFormats(_DDPIXELFORMAT *,void *)
 0001:003B9988       CEnumSurfaceFormatContext::CEnumSurfaceFormatContext(void)
 0001:003B999E       CHelInfo::GenerateSurfaceFormatList(ulong)
 0001:003B9BCA       CHelNode::CHelNode(void)
 0001:003B9BF9       CHelNode::~CHelNode(void)
 0001:003B9C38       CHelInfo::Initialize(void)
 0001:003BA075       CHelNode::`scalar deleting destructor'(uint)
 0001:003BA095       CHelInfo::~CHelInfo(void)
 0001:003BA0CD       ___
 0001:003BA0E4       CDDrawDeviceNode::GetPrimary(void)
 0001:003BA0FD       CDDrawDeviceNode::ReleasePrimary(void)
 0001:003BA11F       CDDrawDeviceNode::GetCurrentVideoMode(_D3DX_VIDMODEDESC *)
 0001:003BA197       CDDrawDeviceNode::WndProc(HWND__ *,uint,uint,long)
 0001:003BA19D       CDDrawDeviceNode::_D3DEnumCBListSurfaceFormats(_DDPIXELFORMAT *,void *)
 0001:003BA1DF       CDDrawDeviceList::_D3DEnumCBFindHWDevices(char *,char *,_D3DDeviceDesc7 *,void *)
 0001:003BA2CE       CDDrawDeviceList::_DDEnumCBListAllVideoModes(_DDSURFACEDESC2 *,void *)
 0001:003BA342       ListNodeT<CDDrawDeviceNode>::ListNodeT<CDDrawDeviceNode>(void)
 0001:003BA348       ListT<CDDrawDeviceNode>::ListT<CDDrawDeviceNode>(void)
 0001:003BA35C       ListT<CVideoModeNode>::ListT<CVideoModeNode>(void)
 0001:003BA370       ListT<CVideoModeNode>::Prepend(CVideoModeNode *)
 0001:003BA382       ListT<CVideoModeNode>::Unlink(CVideoModeNode *)
 0001:003BA3AC       ListT<CVideoModeNode>::LeftBelongsCloserToListHead(CVideoModeNode *,CVideoModeNode *)
 0001:003BA3B2       ListT<CVideoModeNode>::OrderedInsert(CVideoModeNode *)
 0001:003BA414       CDDrawDeviceNode::SetDDCoopLevel(HWND__ *,ulong,HWND__ *,int)
 0001:003BA503       CDDrawDeviceNode::SetDisplayMode(ulong,ulong,ulong,ulong,ulong)
 0001:003BA5A5       CDDrawDeviceNode::CreatePrimary(int,ulong)
 0001:003BA69C       CDDrawDeviceNode::ObtainCapsAtDisplayMode(_D3DX_VIDMODEDESC *)
 0001:003BAC94       CVideoModeNode::~CVideoModeNode(void)
 0001:003BAD09       CVideoModeNode::`scalar deleting destructor'(uint)
 0001:003BAD29       ListT<CVideoModeNode>::CleanupList(void)
 0001:003BAD4A       ListT<CVideoModeNode>::~ListT<CVideoModeNode>(void)
 0001:003BAD55       CVideoModeList::~CVideoModeList(void)
 0001:003BAD60       CDDrawDeviceNode::~CDDrawDeviceNode(void)
 0001:003BADD8       CVideoModeList::CVideoModeList(void)
 0001:003BADEF       CDDrawDeviceNode::CDDrawDeviceNode(void)
 0001:003BAE43       CDDrawDeviceList::_DDEnumCBListDDrawDevices(_GUID *,char *,char *,void *,HMONITOR__ *)
 0001:003BB06A       CDDrawDeviceList::CDDrawDeviceList(void)
 0001:003BB0FB       _d3dxCreatePalette(IDirectDraw7 *,IDirectDrawSurface7 *,IDirectDrawSurface7 *)
 0001:003BB809       TArray<LINEENTRY>::TArray<LINEENTRY>(void)
 0001:003BB816       TArray<LINEENTRY>::~TArray<LINEENTRY>(void)
 0001:003BB83F       TArray<BLTENTRY>::~TArray<BLTENTRY>(void)
 0001:003BB867       _d3dxCopyAddRef(void)
 0001:003BB91A       TArray<LINEENTRY>::`scalar deleting destructor'(uint)
 0001:003BB936       TArray<BLTENTRY>::`scalar deleting destructor'(uint)
 0001:003BBCA1       _d3dxCopyRelease(void)
 0001:003BBED8       _d3dxCopy(IDirectDrawSurface7 *,IDirectDrawSurface7 *,tagRECT *,tagRECT *,_D3DX_FILTERTYPE)
 0001:003BBF71       _d3dxCopyFromBits(_D3DX_SURFACEFORMAT,int,int,int,void *,IDirectDrawPalette *,IDirectDrawSurface7 *,tagRECT *,tagRECT *,_D3DX_FILTERTYPE)
 0001:003BC08A       D3DXMakeDDPixelFormat(x,x)
 0001:003BC0D8       D3DXMakeSurfaceFormat(x)
 0001:003BC11E       D3DXGetNumMipmaps(IDirectDrawSurface7 *)
 0001:003BC15C       D3DXGetNthMipmap(ulong,IDirectDrawSurface7 *,IDirectDrawSurface7 * *)
 0001:003BC20C       GenerateMipMaps(IDirectDrawSurface7 *,_D3DX_FILTERTYPE)
 0001:003BC2A9       D3DXCheckTextureRequirements(x,x,x,x,x)
 0001:003BC577       ValidateTexture(SURFACEDATA_ORIGINALSIZE *,ulong *,ulong *,ulong *,IDirectDrawSurface7 * *,ulong *)
 0001:003BC612       D3DXCreateTexture(x,x,x,x,x,x,x,x)
 0001:003BC7E4       D3DXCreateCubeMapTexture(x,x,x,x,x,x,x,x,x,x)
 0001:003BCA18       GetTopCubeFace(IDirectDrawSurface7 *,ulong,IDirectDrawSurface7 * *)
 0001:003BCA89       LoadFromGDI(char * const,IDirectDraw7 *,IDirectDrawSurface7 * *,_D3DX_SURFACEFORMAT *,tagSIZE *)
 0001:003BCC71       CopyInSingleMipChain(IDirectDrawSurface7 *,uchar * *,uchar *)
 0001:003BCDCB       LoadFromDDS(char * const,IDirectDraw7 *,IDirectDrawSurface7 * *,_D3DX_SURFACEFORMAT *,tagSIZE *,ulong *,ulong *)
 0001:003BD0DE       GetCurrentPixelTGA(uchar *,uchar const *,_TargaHeader const *,ulong *)
 0001:003BD32A       LoadFromTGA(char * const,IDirectDraw7 *,IDirectDrawSurface7 * *,_D3DX_SURFACEFORMAT *,tagSIZE *)
 0001:003BD834       D3DXLoadTextureFromSurface(x,x,x,x,x,x,x)
 0001:003BDB38       D3DXLoadTextureFromMemory(x,x,x,x,x,x,x,x,x)
 0001:003BDCAA       D3DXLoadTextureFromFile(x,x,x,x,x,x,x)
 0001:003BDDAE       LoadCubeMapFromCubeMap(IDirect3DDevice7 *,IDirectDrawSurface7 *,IDirectDrawSurface7 *,ulong,_D3DX_FILTERTYPE)
 0001:003BDE5D       D3DXCreateTextureFromFile(x,x,x,x,x,x,x,x,x,x)
 0001:003BE059       ComponentFromIndex(int,int,int)
 0001:003BE091       UpdateStaticMapping(tagPALETTEENTRY *)
 0001:003BE1D8       MapInSystemColors(tagPALETTEENTRY *)
 0001:003BE28D       D3DXVec2Hermite(x,x,x,x,x,x)
 0001:003BE31B       D3DXVec2BaryCentric(x,x,x,x,x,x)
 0001:003BE35E       D3DXVec2Transform(x,x,x)
 0001:003BE3C7       D3DXVec2TransformNormal(x,x,x)
 0001:003BE3FC       D3DXVec3Hermite(x,x,x,x,x,x)
 0001:003BE4AA       D3DXVec3BaryCentric(x,x,x,x,x,x)
 0001:003BE507       D3DXVec3Transform(x,x,x)
 0001:003BE592       _acosf
 0001:003BE59C       _atan2f
 0001:003BE5A7       D3DXVec3TransformNormal(x,x,x)
 0001:003BE606       _sinf
 0001:003BE60D       _sqrtf
 0001:003BE614       D3DXVECTOR3::D3DXVECTOR3(void)
 0001:003BE617       D3DXVECTOR4::D3DXVECTOR4(void)
 0001:003BE61A       D3DXQUATERNION::D3DXQUATERNION(void)
 0001:003BE61D       D3DXPLANE::D3DXPLANE(void)
 0001:003BE620       D3DXVec4Hermite(x,x,x,x,x,x)
 0001:003BE6F1       D3DXVECTOR2::D3DXVECTOR2(float,float)
 0001:003BE703       D3DXVec4BaryCentric(x,x,x,x,x,x)
 0001:003BE77A       D3DXVECTOR2::operator=/(float)
 0001:003BE791       D3DXVec4Transform(x,x,x)
 0001:003BE82A       D3DXVECTOR2::operator/(float)
 0001:003BE847       D3DXMatrixfDeterminant(x)
 0001:003BE911       D3DXVECTOR3::D3DXVECTOR3(float,float,float)
 0001:003BE92A       D3DXMatrixMultiply(x,x,x)
 0001:003BEA0D       D3DXVECTOR3::operator=/(float)
 0001:003BEA2C       D3DXMatrixTranspose(x,x)
 0001:003BEA99       D3DXVECTOR3::operator-(D3DXVECTOR3 const &)
 0001:003BEABC       D3DXMatrixInverse(x,x,x)
 0001:003BEE49       D3DXVECTOR3::operator/(float)
 0001:003BEE71       D3DXVECTOR4::D3DXVECTOR4(float,float,float,float)
 0001:003BEE91       D3DXMatrixScaling(x,x,x,x)
 0001:003BEEED       D3DXMatrixTranslation(x,x,x,x)
 0001:003BEF49       D3DXMatrixRotationX(x,x)
 0001:003BEFC3       D3DXVECTOR4::operator/(float)
 0001:003BEFF0       D3DXMatrixRotationY(x,x)
 0001:003BF06B       D3DXMatrixRotationZ(x,x)
 0001:003BF0E7       D3DXMatrixRotationQuaternion(x,x)
 0001:003BF1C9       D3DXMatrixAffineTransformation(x,x,x,x,x)
 0001:003BF2A5       D3DXMatrixPerspective(x,x,x,x,x)
 0001:003BF311       D3DXQUATERNION::D3DXQUATERNION(float,float,float,float)
 0001:003BF331       D3DXMatrixPerspectiveLH(x,x,x,x,x)
 0001:003BF39D       D3DXQUATERNION::operator float *(void)
 0001:003BF3A0       D3DXMatrixPerspectiveFov(x,x,x,x,x)
 0001:003BF434       D3DXQUATERNION::operator=/(float)
 0001:003BF45B       D3DXMatrixPerspectiveFovLH(x,x,x,x,x)
 0001:003BF4EF       D3DXMatrixPerspectiveOffCenter(x,x,x,x,x,x,x)
 0001:003BF58C       D3DXQUATERNION::operator/(float)
 0001:003BF5B9       D3DXMatrixPerspectiveOffCenterLH(x,x,x,x,x,x,x)
 0001:003BF65A       D3DXMatrixOrtho(x,x,x,x,x)
 0001:003BF6CC       D3DXPLANE::D3DXPLANE(float,float,float,float)
 0001:003BF6EC       D3DXMatrixOrthoLH(x,x,x,x,x)
 0001:003BF760       D3DXPLANE::operator-(void)
 0001:003BF785       D3DXMatrixOrthoOffCenter(x,x,x,x,x,x,x)
 0001:003BF827       D3DXMatrixOrthoOffCenterLH(x,x,x,x,x,x,x)
 0001:003BF8CB       D3DXQuaternionRotationMatrix(x,x)
 0001:003BF9FB       D3DXQuaternionRotationYawPitchRoll(x,x,x,x)
 0001:003BFAD4       D3DXVec2LengthSq(D3DXVECTOR2 const *)
 0001:003BFAEC       D3DXQuaternionMultiply(x,x,x)
 0001:003BFB82       D3DXVec3LengthSq(D3DXVECTOR3 const *)
 0001:003BFBA5       D3DXVec3Dot(D3DXVECTOR3 const *,D3DXVECTOR3 const *)
 0001:003BFBC2       D3DXQuaternionLn(x,x)
 0001:003BFC40       D3DXVec3Cross(D3DXVECTOR3 *,D3DXVECTOR3 const *,D3DXVECTOR3 const *)
 0001:003BFC8C       D3DXVec3Subtract(D3DXVECTOR3 *,D3DXVECTOR3 const *,D3DXVECTOR3 const *)
 0001:003BFCB1       D3DXQuaternionExp(x,x)
 0001:003BFD4C       D3DXVec3Lerp(D3DXVECTOR3 *,D3DXVECTOR3 const *,D3DXVECTOR3 const *,float)
 0001:003BFD83       D3DXVec4LengthSq(D3DXVECTOR4 const *)
 0001:003BFDB1       D3DXPlaneNormalize(x,x)
 0001:003BFE55       D3DXPlaneFromPointNormal(x,x,x)
 0001:003BFE8D       D3DXMatrixIdentity(D3DXMATRIX *)
 0001:003BFEE1       D3DXColorAdjustSaturation(x,x,x)
 0001:003BFF39       D3DXColorAdjustContrast(x,x,x)
 0001:003BFF79       D3DXQuaternionLengthSq(D3DXQUATERNION const *)
 0001:003BFFA7       D3DXQuaternionDot(D3DXQUATERNION const *,D3DXQUATERNION const *)
 0001:003BFFCC       D3DXQuaternionConjugate(D3DXQUATERNION *,D3DXQUATERNION const *)
 0001:003BFFF1       D3DXPlaneDot(D3DXPLANE const *,D3DXVECTOR4 const *)
 0001:003C0016       D3DXPlaneDotCoord(D3DXPLANE const *,D3DXVECTOR3 const *)
 0001:003C0036       D3DXPlaneDotNormal(D3DXPLANE const *,D3DXVECTOR3 const *)
 0001:003C0053       D3DXVec2Normalize(x,x)
 0001:003C00E0       D3DXVec2TransformCoord(x,x,x)
 0001:003C017A       D3DXVec3Normalize(x,x)
 0001:003C01F6       D3DXVec3TransformCoord(x,x,x)
 0001:003C02AB       D3DXVec4Cross(x,x,x,x)
 0001:003C039B       D3DXVec4Normalize(x,x)
 0001:003C041D       D3DXMatrixRotationAxis(x,x,x)
 0001:003C051F       D3DXMatrixRotationYawPitchRoll(x,x,x,x)
 0001:003C0558       D3DXMatrixTransformation(x,x,x,x,x,x,x)
 0001:003C0757       D3DXMatrixLookAt(x,x,x,x)
 0001:003C0851       D3DXMatrixLookAtLH(x,x,x,x)
 0001:003C094B       D3DXMatrixShadow(x,x,x)
 0001:003C0A29       D3DXMatrixReflect(x,x)
 0001:003C0AE8       D3DXQuaternionToAxisAngle(x,x,x)
 0001:003C0B65       D3DXQuaternionRotationAxis(x,x,x)
 0001:003C0BC1       D3DXQuaternionNormalize(x,x)
 0001:003C0C43       D3DXQuaternionInverse(x,x)
 0001:003C0CAF       D3DXQuaternionSlerp(x,x,x,x)
 0001:003C0D89       D3DXQuaternionSquad(x,x,x,x,x,x)
 0001:003C0DE0       D3DXQuaternionBaryCentric(x,x,x,x,x,x)
 0001:003C0E6B       D3DXPlaneIntersectLine(x,x,x,x)
 0001:003C0EEF       D3DXPlaneFromPoints(x,x,x,x)
 0001:003C0F6E       D3DXPlaneTransform(x,x,x)
 0001:003C0FEA       CCapsFile::Open(void)
 0001:003C106A       CCapsFile::Close(void)
 0001:003C106F       CCapsFile::FindVersion(void)
 0001:003C108D       CCapsFile::CreateVersion(void)
 0001:003C10F6       CCapsFile::Parse2D(ulong,_DDCAPS_DX7 *,char * *)
 0001:003C11B1       CCapsFile::CreateString(char *)
 0001:003C12AD       CCapsFile::CreateFormat(CSurfaceFormatNode *)
 0001:003C13E9       CCapsFile::Create2D(ulong,_DDCAPS_DX7 *,char *)
 0001:003C1475       CCapsFile::Create3D(ulong,_D3DDeviceDesc7 *,char *,CSurfaceFormatList *)
 0001:003C1570       CCapsFile::SaveSoftwareCaps(CHelInfo *)
 0001:003C1714       CCapsFile::SaveHardwareCaps(CDDrawDeviceNode *,CVideoModeNode *)
 0001:003C19AB       CCapsFile::Parse3D(ulong,_D3DDeviceDesc7 *,char * *,CSurfaceFormatList *)
 0001:003C1B48       CCapsFile::LoadHardwareCaps(CDDrawDeviceNode *,CVideoModeNode *)
 0001:003C1DE6       CCapsFile::LoadSoftwareCaps(CHelInfo *)
 0001:003C234D       EncodeBlockRGBColorKey(S3TC_COLOR * const,S3TCBlockRGB *,S3TC_COLOR,S3TC_COLOR)
 0001:003C27E4       DecodeBlockRGB(S3TCBlockRGB *,S3TC_COLOR * const)
 0001:003C28BE       DecodeBlockAlpha4(S3TCBlockAlpha4 *,S3TC_COLOR * const)
 0001:003C290C       DecodeBlockAlpha3(S3TCBlockAlpha3 *,S3TC_COLOR * const)
 0001:003C2A16       CSurfaceLock::CSurfaceLock(_D3DX_SURFACEFORMAT,int,int,int,void *,IDirectDrawPalette *)
 0001:003C2AAF       CSurfaceLock::IsValid(void)
 0001:003C2AC0       CSurfaceLock::IsPaletteIndexed(void)
 0001:003C2ADD       CSurfaceLock::GetPalette(tagPALETTEENTRY * *)
 0001:003C2B5C       FindClosest_PALETTE4(ulong,tagPALETTEENTRY *)
 0001:003C2BDF       FindClosest_PALETTE8(ulong,tagPALETTEENTRY *)
 0001:003C2C65       FindClosest_PALETTEA8(ulong,tagPALETTEENTRY *)
 0001:003C2D01       GetDxtBlkSize(ulong)
 0001:003C2D33       XXDecodeBlockRGB(S3TCBlockRGB *,S3TC_COLOR * const)
 0001:003C2D59       LoadCacheBlock(PIXELCACHE_BLOCK *,SURFACE_DATA *)
 0001:003C2E80       InitializePixelCache(SURFACE_DATA *,ulong)
 0001:003C2ED3       InCacheBlock(long,long,PIXELCACHE_BLOCK *)
 0001:003C2EF6       GetDstSpanAllZeros(int,ulong *,BLT_DATA *)
 0001:003C2F05       TArray<LINEENTRY>::Add(LINEENTRY *)
 0001:003C2F57       TArray<BLTENTRY>::TArray<BLTENTRY>(void)
 0001:003C2F64       TArray<BLTENTRY>::Add(BLTENTRY *)
 0001:003C2FB6       EncodeBlockRGB(S3TC_COLOR * const,S3TCBlockRGB *)
 0001:003C2FE8       EncodeBlockAlpha4(S3TC_COLOR * const,S3TCBlockAlpha4 *)
 0001:003C3041       EncodeBlockAlpha3(S3TC_COLOR * const,S3TCBlockAlpha3 *)
 0001:003C316B       RegisterLine(TArray<LINEENTRY> * *,ulong,void *)
 0001:003C31ED       RegisterBlt(TArray<BLTENTRY> * *,_D3DX_SURFACEFORMAT,_D3DX_SURFACEFORMAT,_D3DX_FILTERTYPE,void *)
 0001:003C327B       CSurfaceLock::CSurfaceLock(IDirectDrawSurface7 *,tagRECT *)
 0001:003C333B       CSurfaceLock::~CSurfaceLock(void)
 0001:003C3361       XXEncodeBlockRGB(S3TC_COLOR * const,S3TCBlockRGB *)
 0001:003C33CA       FlushCacheBlock(PIXELCACHE_BLOCK *,SURFACE_DATA *)
 0001:003C347A       ShutdownPixelCache(BLT_DATA *)
 0001:003C349C       GetPtrToCachedPixel(long,long,SURFACE_DATA *)
 0001:003C3551       RegisterBlts(void)
 0001:003C5391       RegisterLines(void)
 0001:003C5914       _d3dxFindTextureCallback(_DDPIXELFORMAT *,void *)
 0001:003C5968       ChooseTextureFormat(IDirect3DDevice7 *,_D3DX_SURFACEFORMAT,_D3DX_SURFACEFORMAT *)
 0001:003C59B0       _S3TCsetAlphaReference
 0001:003C59C0       _S3TCgetEncodeSize
 0001:003C59F0       _S3TCencode
 0001:003C5A20       _S3TCencodeEx
 0001:003C66F0       _S3TCgetDecodeSize
 0001:003C6700       _S3TCdecode
 0001:003C6BC0       _CodeRGBBlock
 0001:003CA730       _CodeAlphaBlock
 0001:003CC5A0       DirectInputCreateEx(x,x,x,x,x)
 0001:003CC870       ostream::operator<<(uchar)
 0001:003CC8EC       streambuf::sputc(int)
 0001:003CC90E       ostream::operator<<(double)
 0001:003CCA30       ostream::opfx(void)
 0001:003CCAA4       ostream::osfx(void)
 0001:003CCB54       ostream::operator<<(char const *)
 0001:003CCB7D       ostream::flush(void)
 0001:003CCC05       ostream::ostream(void)
 0001:003CCC3B       ostream::`scalar deleting destructor'(uint)
 0001:003CCC66       ostream::ostream(streambuf *)
 0001:003CCCCB       ostream::ostream(ostream const &)
 0001:003CCD39       ostream::~ostream(void)
 0001:003CCD48       ostream::operator=(streambuf *)
 0001:003CCDCE       ostream_withassign::ostream_withassign(void)
 0001:003CCE29       ostream_withassign::`scalar deleting destructor'(uint)
 0001:003CCE54       ostream_withassign::ostream_withassign(streambuf *)
 0001:003CCEB2       ostream_withassign::~ostream_withassign(void)
 0001:003CCEC5       ostream::writepad(char const *,char const *)
 0001:003CD031       istream::istream(void)
 0001:003CD079       istream::`scalar deleting destructor'(uint)
 0001:003CD0A4       istream::istream(streambuf *)
 0001:003CD11A       istream::istream(istream const &)
 0001:003CD199       istream::~istream(void)
 0001:003CD1A8       istream::operator=(streambuf *)
 0001:003CD240       istream::ipfx(int)
 0001:003CD321       streambuf::in_avail(void)
 0001:003CD331       istream::operator>>(char *)
 0001:003CD3ED       istream::isfx(void)
 0001:003CD422       istream::peek(void)
 0001:003CD452       istream::putback(char)
 0001:003CD4BF       streambuf::sputbackc(char)
 0001:003CD4E4       ios::clear(int)
 0001:003CD512       istream::sync(void)
 0001:003CD576       istream::eatwhite(void)
 0001:003CD5EF       istream_withassign::istream_withassign(void)
 0001:003CD64A       istream_withassign::`scalar deleting destructor'(uint)
 0001:003CD675       istream_withassign::istream_withassign(streambuf *)
 0001:003CD6D3       istream_withassign::~istream_withassign(void)
 0001:003CD6E6       istream::operator>>(float &)
 0001:003CD7AB       istream::operator>>(char &)
 0001:003CD7EF       ios::ios(void)
 0001:003CD84D       ios::`scalar deleting destructor'(uint)
 0001:003CD869       ios::ios(streambuf *)
 0001:003CD8D2       ios::ios(ios const &)
 0001:003CD91A       ios::~ios(void)
 0001:003CD964       ios::init(streambuf *)
 0001:003CD993       ios::operator=(ios const &)
 0001:003CD9CE       ios::xalloc(void)
 0001:003CD9FF       ios::bitalloc(void)
 0001:003CDA25       ofstream::ofstream(void)
 0001:003CDAAB       ofstream::`scalar deleting destructor'(uint)
 0001:003CDAD6       ofstream::ofstream(char const *,int,int)
 0001:003CDB8D       ofstream::ofstream(int)
 0001:003CDC16       ofstream::ofstream(int,char *,int)
 0001:003CDCA5       ofstream::~ofstream(void)
 0001:003CDCB8       ofstream::setbuf(char *,int)
 0001:003CDD00       ofstream::attach(int)
 0001:003CDD31       ofstream::open(char const *,int,int)
 0001:003CDD73       ofstream::close(void)
 0001:003CDDA6       filebuf::filebuf(void)
 0001:003CDDC0       filebuf::`scalar deleting destructor'(uint)
 0001:003CDDDC       filebuf::filebuf(int)
 0001:003CDDFB       filebuf::filebuf(int,char *,int)
 0001:003CDE43       filebuf::~filebuf(void)
 0001:003CDE9A       filebuf::close(void)
 0001:003CDEFD       filebuf::overflow(int)
 0001:003CDF6E       filebuf::underflow(void)
 0001:003CDFFE       filebuf::seekoff(long,ios::seek_dir,int)
 0001:003CE042       filebuf::sync(void)
 0001:003CE11D       filebuf::setbuf(char *,int)
 0001:003CE235       Iostream_init::Iostream_init(void)
 0001:003CE238       Iostream_init::Iostream_init(ios &,int)
 0001:003CE266       ios::setf(long)
 0001:003CE29D       Iostream_init::~Iostream_init(void)
 0001:003CE29E       __mtlockinit
 0001:003CE2A9       __mtlockterm
 0001:003CE2B4       __mtlock
 0001:003CE2BF       __mtunlock
 0001:003CE2CA       streambuf::snextc(void)
 0001:003CE316       streambuf::sbumpc(void)
 0001:003CE34D       streambuf::stossc(void)
 0001:003CE386       streambuf::sgetc(void)
 0001:003CE3AB       istream::getdouble(char *,int)
 0001:003CE4E4       filebuf::attach(int)
 0001:003CE558       filebuf::open(char const *,int,int)
 0001:003CE6CE       filebuf::setmode(int)
 0001:003CE736       streambuf::streambuf(void)
 0001:003CE775       streambuf::`scalar deleting destructor'(uint)
 0001:003CE791       streambuf::streambuf(char *,int)
 0001:003CE7F4       streambuf::~streambuf(void)
 0001:003CE824       streambuf::setbuf(char *,int)
 0001:003CE858       streambuf::xsputn(char const *,int)
 0001:003CE8AE       streambuf::xsgetn(char *,int)
 0001:003CE945       streambuf::sync(void)
 0001:003CE95C       streambuf::allocate(void)
 0001:003CE97A       streambuf::doallocate(void)
 0001:003CE9A7       streambuf::setb(char *,char *,int)
 0001:003CE9D7       streambuf::seekoff(long,ios::seek_dir,int)
 0001:003CE9DD       streambuf::seekpos(long,int)
 0001:003CE9EF       streambuf::pbackfail(int)
 0001:003CEA4B       std::_Xlen(void)
 0001:003CEAA5       std::logic_error::logic_error(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const &)
 0001:003CEB09       std::logic_error::what(void)
 0001:003CEB16       std::logic_error::_Doraise(void)
 0001:003CEB33       std::logic_error::~logic_error(void)
 0001:003CEB70       std::logic_error::`scalar deleting destructor'(uint)
 0001:003CEB8C       std::logic_error::logic_error(std::logic_error const &)
 0001:003CEBE9       std::length_error::~length_error(void)
 0001:003CEC26       std::length_error::_Doraise(void)
 0001:003CEC43       std::length_error::`scalar deleting destructor'(uint)
 0001:003CEC5F       std::length_error::length_error(std::length_error const &)
 0001:003CEC77       std::_Xran(void)
 0001:003CECD1       std::out_of_range::~out_of_range(void)
 0001:003CED0E       std::out_of_range::_Doraise(void)
 0001:003CED2B       std::out_of_range::`scalar deleting destructor'(uint)
 0001:003CED47       std::out_of_range::out_of_range(std::out_of_range const &)
 0001:003CEDA2       std::_Lockit::_Lockit(void)
 0001:003CEE3E       std::_Lockit::~_Lockit(void)
 0001:003CEE53       `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
 0001:003CEED3       __ArrayUnwind(void *,uint,int,void (*)(void *))
 0001:003CEF47       __onexit
 0001:003CEFC5       _atexit
 0001:003CEFD7       ___onexitinit
 0001:003CF006       type_info::~type_info(void)
 0001:003CF02F       type_info::`scalar deleting destructor'(uint)
 0001:003CF04B       type_info::operator==(type_info const &)
 0001:003CF066       type_info::operator!=(type_info const &)
 0001:003CF082       type_info::before(type_info const &)
 0001:003CF0A1       type_info::raw_name(void)
 0001:003CF0A5       type_info::type_info(type_info const &)
 0001:003CF0B0       type_info::operator=(type_info const &)
 0001:003CF0B5       _JumpToContinuation(void *,EHRegistrationNode *)
 0001:003CF0E9       _CallMemberFunction0(void *,void *)
 0001:003CF0F0       _CallMemberFunction1(void *,void *,void *)
 0001:003CF0F7       _CallMemberFunction2(void *,void *,void *,int)
 0001:003CF0FE       _UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)
 0001:003CF14D       ___CxxFrameHandler
 0001:003CF183       __CxxLongjmpUnwind(x)
 0001:003CF19D       _CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)
 0001:003CF1F1       CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)
 0001:003CF216       _CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)
 0001:003CF2CC       TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)
 0001:003CF341       _GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)
 0001:003CF3BC       __global_unwind2
 0001:003CF3FE       __local_unwind2
 0001:003CF456       __NLG_Return2
 0001:003CF466       __abnormal_termination
 0001:003CF489       __NLG_Notify1
 0001:003CF492       __NLG_Notify
 0001:003CF4A5       __NLG_Dispatch
 0001:003CF4AA       __fpmath
 0001:003CF4C1       __fpclear
 0001:003CF4C2       __cfltcvt_init
 0001:003CF4FA       ___setfflag
 0001:003CF510       _memmove
 0001:003CF580       LeadUp1
 0001:003CF5AC       LeadUp2
 0001:003CF5D0       LeadUp3
 0001:003CF60C       UnwindUp7
 0001:003CF614       UnwindUp6
 0001:003CF61C       UnwindUp5
 0001:003CF624       UnwindUp4
 0001:003CF62C       UnwindUp3
 0001:003CF634       UnwindUp2
 0001:003CF63C       UnwindUp1
 0001:003CF64F       UnwindUp0
 0001:003CF668       TrailUp0
 0001:003CF670       TrailUp1
 0001:003CF67C       TrailUp2
 0001:003CF690       TrailUp3
 0001:003CF708       LeadDown1
 0001:003CF728       LeadDown2
 0001:003CF750       LeadDown3
 0001:003CF7A4       UnwindDown7
 0001:003CF7AC       UnwindDown6
 0001:003CF7B4       UnwindDown5
 0001:003CF7BC       UnwindDown4
 0001:003CF7C4       UnwindDown3
 0001:003CF7CC       UnwindDown2
 0001:003CF7D4       UnwindDown1
 0001:003CF7E7       UnwindDown0
 0001:003CF800       TrailDown0
 0001:003CF808       TrailDown1
 0001:003CF818       TrailDown2
 0001:003CF82C       TrailDown3
 0001:003CF845       ___RTCastToVoid
 0001:003CF922       bad_typeid::bad_typeid(bad_typeid const &)
 0001:003CF93A       bad_typeid::`scalar deleting destructor'(uint)
 0001:003CF956       bad_typeid::~bad_typeid(void)
 0001:003CF95B       ___RTtypeid
 0001:003CFA21       bad_typeid::bad_typeid(char const *)
 0001:003CFA3A       ___RTDynamicCast
 0001:003CFB51       bad_cast::bad_cast(char const * const &)
 0001:003CFB69       bad_cast::`scalar deleting destructor'(uint)
 0001:003CFB85       bad_cast::~bad_cast(void)
 0001:003CFB8A       bad_cast::bad_cast(bad_cast const &)
 0001:003CFBA2       FindCompleteObject(void * *)
 0001:003CFE47       PMDtoOffset(void *,PMD const &)
 0001:003CFE6A       `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
 0001:003CFEEC       _sprintf
 0001:003CFF3E       __purecall
 0001:003CFF48       __ftol
 0001:003CFF6F       _qsort
 0001:003D00C3       _shortsort
 0001:003D0111       _swap
 0001:003D013D       _atol
 0001:003D01C8       _atoi
 0001:003D01D3       __atoi64
 0001:003D028D       __cinit
 0001:003D02BA       _exit
 0001:003D02CB       __exit
 0001:003D02DC       __cexit
 0001:003D02EB       __c_exit
 0001:003D02FA       _doexit
 0001:003D039F       __lockexit
 0001:003D03A8       __unlockexit
 0001:003D03B1       __initterm
 0001:003D03CB       _difftime
 0001:003D03DC       _time
 0001:003D04B8       _atof
 0001:003D050F       _chdir
 0001:003D0595       _localtime
 0001:003D06F5       _mktime
 0001:003D0703       __mkgmtime
 0001:003D0711       __make_time_t
 0001:003D08F5       __dosmaperr
 0001:003D0968       __errno
 0001:003D0971       ___doserrno
 0001:003D097A       __access
 0001:003D09C0       ___dtoxmode
 0001:003D0A78       __stat
 0001:003D0D33       _IsRootUNCName
 0001:003D0DA3       _ftell
 0001:003D0DC5       __ftell_lk
 0001:003D0F26       _fseek
 0001:003D0F52       __fseek_lk
 0001:003D0FDF       __fsopen
 0001:003D1010       _fopen
 0001:003D1023       _fwrite
 0001:003D1052       __fwrite_lk
 0001:003D115C       _fclose
 0001:003D118D       __fclose_lk
 0001:003D11D9       _fflush
 0001:003D1208       __fflush_lk
 0001:003D1236       __flush
 0001:003D1292       __flushall
 0001:003D129B       _flsall
 0001:003D133F       _fputs
 0001:003D138D       _fgets
 0001:003D13EF       _fread
 0001:003D141E       __fread_lk
 0001:003D1506       __findfirst
 0001:003D15D3       __findnext
 0001:003D169B       __findclose
 0001:003D16BB       ___timet_from_ft
 0001:003D171F       __getdrive
 0001:003D1762       __chdrive
 0001:003D17D5       __getcwd
 0001:003D17FC       __getdcwd
 0001:003D1825       __getdcwd_lk
 0001:003D18FA       __validdrive
 0001:003D1931       _remove
 0001:003D195B       __unlink
 0001:003D1966       _rename
 0001:003D19A0       __alloca_probe
 0001:003D19CF       _mkdir
 0001:003D1A00       _strncat
 0001:003D1B23       __strtime
 0001:003D1B9C       _sscanf
 0001:003D1BD0       _memchr
 0001:003D1C75       _vsprintf
 0001:003D1CC6       __statusfp
 0001:003D1CD9       __clearfp
 0001:003D1CED       __control87
 0001:003D1D22       __controlfp
 0001:003D1D38       __fpreset
 0001:003D1D63       __abstract_cw
 0001:003D1DF5       __hw_cw
 0001:003D1E7E       __abstract_sw
 0001:003D1EC0       __CIacos
 0001:003D1ED4       _acos
 0001:003D1F8B       _srand
 0001:003D1F98       _rand
 0001:003D1FBA       __copysign
 0001:003D1FDB       __chgsign
 0001:003D2000       __scalb
 0001:003D2016       __logb
 0001:003D20FD       __nextafter
 0001:003D2392       __finite
 0001:003D23A6       __isnan
 0001:003D23D4       __fpclass
 0001:003D2470       __CIasin
 0001:003D2484       _asin
 0001:003D2544       __except_handler3
 0001:003D261C       _ceil
 0001:003D26EB       _wcscat
 0001:003D2715       _wcscpy
 0001:003D2740       _strstr
 0001:003D27C0       _isalpha
 0001:003D27EE       _isupper
 0001:003D2816       _islower
 0001:003D283E       _isdigit
 0001:003D2866       _isxdigit
 0001:003D2893       _isspace
 0001:003D28BB       _ispunct
 0001:003D28E3       _isalnum
 0001:003D2911       _isprint
 0001:003D293F       _isgraph
 0001:003D296D       _iscntrl
 0001:003D2995       ___isascii
 0001:003D29A2       ___toascii
 0001:003D29AA       ___iscsymf
 0001:003D29E7       ___iscsym
 0001:003D2A30       __CIpow
 0001:003D2A49       _pow
 0001:003D2C4D       __strlwr
 0001:003D2D81       __mbscmp
 0001:003D2E30       _fprintf
 0001:003D2E6C       ___initstdio
 0001:003D2F14       ___endstdio
 0001:003D2F28       __lock_file
 0001:003D2F57       __lock_file2
 0001:003D2F7A       __unlock_file
 0001:003D2FA9       __unlock_file2
 0001:003D2FCC       _floor
 0001:003D309B       __beginthreadex
 0001:003D3106       _threadstartex(x)
 0001:003D31A2       __endthreadex
 0001:003D31F0       _strchr
 0001:003D31F6       ___from_strstr_to_strchr
 0001:003D32B0       _strrchr
 0001:003D32D7       _printf
 0001:003D3318       _WinMainCRTStartup
 0001:003D3420       __amsg_exit
 0001:003D3445       _fast_error_exit
 0001:003D346C       __EH_prolog
 0001:003D348B       _CxxThrowException(x,x)
 0001:003D34C5       __snprintf
 0001:003D3516       __toupper
 0001:003D351E       _toupper
 0001:003D358D       __toupper_lk
 0001:003D3660       _strlen
 0001:003D36DB       _strtod
 0001:003D3785       __close
 0001:003D37E2       __close_lk
 0001:003D3865       __write
 0001:003D38CA       __write_lk
 0001:003D3A55       __read
 0001:003D3ABA       __read_lk
 0001:003D3C93       __lseek
 0001:003D3CF8       __lseek_lk
 0001:003D3D6B       __ioinit
 0001:003D3F27       __ioterm
 0001:003D3F7B       __open
 0001:003D3F92       __sopen
 0001:003D4261       __setmode
 0001:003D42BA       __setmode_lk
 0001:003D4320       _memcpy
 0001:003D4390       LeadUp1_0
 0001:003D43BC       LeadUp2_0
 0001:003D43E0       LeadUp3_0
 0001:003D441C       UnwindUp7_0
 0001:003D4424       UnwindUp6_0
 0001:003D442C       UnwindUp5_0
 0001:003D4434       UnwindUp4_0
 0001:003D443C       UnwindUp3_0
 0001:003D4444       UnwindUp2_0
 0001:003D444C       UnwindUp1_0
 0001:003D445F       UnwindUp0_0
 0001:003D4478       TrailUp0_0
 0001:003D4480       TrailUp1_0
 0001:003D448C       TrailUp2_0
 0001:003D44A0       TrailUp3_0
 0001:003D4518       LeadDown1_0
 0001:003D4538       LeadDown2_0
 0001:003D4560       LeadDown3_0
 0001:003D45B4       UnwindDown7_0
 0001:003D45BC       UnwindDown6_0
 0001:003D45C4       UnwindDown5_0
 0001:003D45CC       UnwindDown4_0
 0001:003D45D4       UnwindDown3_0
 0001:003D45DC       UnwindDown2_0
 0001:003D45E4       UnwindDown1_0
 0001:003D45F7       UnwindDown0_0
 0001:003D4610       TrailDown0_0
 0001:003D4618       TrailDown1_0
 0001:003D4628       TrailDown2_0
 0001:003D463C       TrailDown3_0
 0001:003D4655       exception::exception(void)
 0001:003D4666       exception::`scalar deleting destructor'(uint)
 0001:003D4682       exception::exception(char const * const &)
 0001:003D46BF       exception::exception(exception const &)
 0001:003D4709       exception::operator=(exception const &)
 0001:003D4728       exception::~exception(void)
 0001:003D473E       exception::what(void)
 0001:003D474B       terminate(void)
 0001:003D47AC       unexpected(void)
 0001:003D47C4       _inconsistency(void)
 0001:003D481A       __mtinitlocks
 0001:003D4843       __mtdeletelocks
 0001:003D48AF       __lock
 0001:003D4910       __unlock
 0001:003D4925       __lockerr_exit
 0001:003D4940       _strcmp
 0001:003D49C4       ___InternalCxxFrameHandler
 0001:003D4A5F       FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)
 0001:003D4C12       FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)
 0001:003D4CBC       TypeMatch(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)
 0001:003D4D19       ___FrameUnwindToState
 0001:003D4DCD       CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)
 0001:003D4E48       CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)
 0001:003D4F63       ExFilterRethrow(_EXCEPTION_POINTERS *)
 0001:003D4F8D       BuildCatchObject(EHExceptionRecord *,EHRegistrationNode *,_s_HandlerType const *,_s_CatchableType const *)
 0001:003D5151       _DestructExceptionObject(EHExceptionRecord *,uchar)
 0001:003D51B8       AdjustPointer(void *,PMD const &)
 0001:003D51E0       _CallSettingFrame(x,x,x)
 0001:003D5207       __NLG_Return
 0001:003D522C       __mtinit
 0001:003D5280       __mtterm
 0001:003D529E       __initptd
 0001:003D52B1       __getptd
 0001:003D5318       __freeptd
 0001:003D53B8       ___threadid
 0001:003D53BE       ___threadhandle
 0001:003D53C4       __setdefaultprecision
 0001:003D53D6       __ms_p5_test_fdiv
 0001:003D5414       __ms_p5_mp_test_fdiv
 0001:003D543D       __forcdecpt
 0001:003D5497       __cropzeros
 0001:003D54E5       __positive
 0001:003D54FD       __fassign
 0001:003D553B       __cftoe
 0001:003D559C       __cftoe2
 0001:003D565E       __cftof
 0001:003D56B3       __cftof2
 0001:003D575A       __cftog
 0001:003D57ED       __cfltcvt
 0001:003D583E       __shift
 0001:003D5863       __flsbuf
 0001:003D597B       __output
 0001:003D60BC       _write_char
 0001:003D60F1       _write_multi_char
 0001:003D6122       _write_string
 0001:003D615A       _get_int_arg
 0001:003D6167       _get_int64_arg
 0001:003D6177       _get_short_arg
 0001:003D6185       __isctype
 0001:003D6200       __allmul
 0001:003D6234       ___loctotime_t
 0001:003D62F6       __fltin2
 0001:003D6375       __mbctoupper
 0001:003D63F0       ___tzset
 0001:003D641E       __tzset
 0001:003D6434       __tzset_lk
 0001:003D66BB       __isindst
 0001:003D66DC       __isindst_0
 0001:003D6888       _cvtdate
 0001:003D69C8       _gmtime
 0001:003D6AD2       __mbsicmp
 0001:003D6C67       __mbsrchr
 0001:003D6CD9       __fullpath
 0001:003D6D7E       __mbctolower
 0001:003D6DF9       __mbspbrk
 0001:003D6E8E       __openfile
 0001:003D6FFE       __getstream
 0001:003D70C6       __freebuf
 0001:003D70F1       __commit
 0001:003D7184       __stbuf
 0001:003D7211       __ftbuf
 0001:003D723B       __filbuf
 0001:003D7320       _strcpy
 0001:003D7330       _strcat
 0001:003D7410       __input
 0001:003D7E35       __hextodec
 0001:003D7E6C       _fgetc
 0001:003D7E86       __un_inc
 0001:003D7E9D       __whiteout
 0001:003D7EC1       _signal
 0001:003D8043       ctrlevent_capture(x)
 0001:003D80A5       _raise
 0001:003D8227       _siglookup
 0001:003D8264       ___fpecode
 0001:003D826D       ___pxcptinfoptrs
 0001:003D8280       __trandisp1
 0001:003D82E7       __trandisp2
 0001:003D8373       __rttospopde
 0001:003D8378       __rttospop
 0001:003D837A       __rtnospop
 0001:003D837C       __rttosnpop
 0001:003D837D       __rtnospopde
 0001:003D8384       __rtzeropop
 0001:003D8386       __rtzeronpop
 0001:003D838B       __rtonepop
 0001:003D838D       __rtonenpop
 0001:003D8392       __tosnan1
 0001:003D83BD       __nosnan2
 0001:003D83BF       __tosnan2
 0001:003D83E7       __nan2
 0001:003D8426       __rtindfpop
 0001:003D8428       __rtindfnpop
 0001:003D8439       __rttosnpopde
 0001:003D8443       __rtchsifneg
 0001:003D8450       __startTwoArgErrorHandling
 0001:003D8467       __startOneArgErrorHandling
 0001:003D84B0       __twoToTOS
 0001:003D84C5       __load_CW
 0001:003D84DC       __convertTOStoQNaN
 0001:003D84F5       __fload_withFB
 0001:003D8538       __checkTOS_withFB
 0001:003D854E       __fast_exit
 0001:003D855B       __math_exit
 0001:003D8585       __check_overflow_exit
 0001:003D8599       __check_range_exit
 0001:003D863C       _ldexp
 0001:003D8822       __set_exp
 0001:003D884B       __get_exp
 0001:003D885F       __add_exp
 0001:003D888B       __set_bexp
 0001:003D88AF       __sptype
 0001:003D8909       __decomp
 0001:003D89CA       __handle_qnan1
 0001:003D8A1E       __handle_qnan2
 0001:003D8A7E       __except1
 0001:003D8B16       __except2
 0001:003D8BBB       __raise_exc
 0001:003D8E6E       __handle_exc
 0001:003D9085       __umatherr
 0001:003D910D       __set_errno
 0001:003D9135       __get_fname
 0001:003D915A       __errcode
 0001:003D9187       __statfp
 0001:003D9195       __clrfp
 0001:003D91A4       __ctrlfp
 0001:003D91C7       __set_statfp
 0001:003D921D       __frnd
 0001:003D9241       __fFEXP
 0001:003D92A8       __rtinfpopse
 0001:003D92AA       __rtinfnpopse
 0001:003D92BA       __fFLN
 0001:003D936F       __rtinfpop
 0001:003D9371       __rtinfnpop
 0001:003D938E       __ffexpm1
 0001:003D9437       __powhlp
 0001:003D9567       __d_inttype
 0001:003D95CC       ___crtLCMapStringA
 0001:003D97F0       _strncnt
 0001:003D981B       _setlocale
 0001:003D9A61       __setlocale_set_cat
 0001:003D9B7C       __setlocale_get_all
 0001:003D9C35       __expandlocale
 0001:003D9D4D       ___init_dummy
 0001:003D9D50       __strcats
 0001:003D9D75       ___lc_strtolc
 0001:003D9E41       ___lc_lctostr
 0001:003D9E94       __setmbcp
 0001:003DA041       _getSystemCP
 0001:003DA08B       _CPtoLCID
 0001:003DA0BE       _setSBCS
 0001:003DA0E7       _setSBUpLow
 0001:003DA26C       __getmbcp
 0001:003DA27C       ___initmbctable
 0001:003DA298       __fcloseall
 0001:003DA319       __XcptFilter
 0001:003DA457       _xcptlookup
 0001:003DA491       __wincmdln
 0001:003DA4E9       __setenvp
 0001:003DA5A2       __setargv
 0001:003DA63B       _parse_cmdline
 0001:003DA7EF       ___crtGetEnvironmentStringsA
 0001:003DA921       __GetLinkerVersion
 0001:003DA94E       ___heap_select
 0001:003DAA96       __heap_init
 0001:003DAAF3       __heap_term
 0001:003DAB9B       __FF_MSGBANNER
 0001:003DABD4       __NMSG_WRITE
 0001:003DAD27       __GET_RTERRMSG
 0001:003DAD58       __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)
 0001:003DAD9E       __CxxSetUnhandledExceptionFilter(void)
 0001:003DADAF       __CxxRestoreUnhandledExceptionFilter(void)
 0001:003DADBC       __alloc_osfhnd
 0001:003DAEDF       __set_osfhnd
 0001:003DAF5B       __free_osfhnd
 0001:003DAFDA       __get_osfhandle
 0001:003DB01C       __open_osfhandle
 0001:003DB0C3       __lock_fhandle
 0001:003DB122       __unlock_fhandle
 0001:003DB144       __chsize
 0001:003DB19D       __chsize_lk
 0001:003DB2C2       _abort
 0001:003DB2D9       _ValidateRead(void const *,uint)
 0001:003DB2F5       _ValidateWrite(void *,uint)
 0001:003DB311       _ValidateExecute(int (*)(void))
 0001:003DB329       __tolower
 0001:003DB331       _tolower
 0001:003DB3A0       __tolower_lk
 0001:003DB46B       __ZeroTail
 0001:003DB4B4       __IncMan
 0001:003DB50A       __RoundMan
 0001:003DB596       __CopyMan
 0001:003DB5B1       __FillZeroMan
 0001:003DB5BD       __IsZeroMan
 0001:003DB5D8       __ShrMan
 0001:003DB665       __ld12cvt
 0001:003DB7D1       __ld12tod
 0001:003DB7E7       __ld12tof
 0001:003DB7FD       __ld12told
 0001:003DB877       __atodbl
 0001:003DB8A4       __atoldbl
 0001:003DB8D2       __atoflt
 0001:003DB8FF       __fptostr
 0001:003DB976       __fltout2
 0001:003DB9D2       ___dtold
 0001:003DBA90       _memset
 0001:003DBAE8       __fptrap
 0001:003DBAF1       __getbuf
 0001:003DBB35       __isatty
 0001:003DBB5E       _wctomb
 0001:003DBBB7       __wctomb_lk
 0001:003DBC20       __aulldiv
 0001:003DBC90       __aullrem
 0001:003DBD05       ___crtGetStringTypeA
 0001:003DBE4E       ___strgtold12
 0001:003DC31F       ___STRINGTOLD
 0001:003DC360       _strncpy
 0001:003DC45E       _getenv
 0001:003DC47F       __getenv_lk
 0001:003DC500       __stricmp
 0001:003DC5D0       _strpbrk
 0001:003DC60A       _mbtowc
 0001:003DC667       __mbtowc_lk
 0001:003DC730       __allshl
 0001:003DC74F       _ungetc
 0001:003DC778       __ungetc_lk
 0001:003DC7E6       __87except
 0001:003DC8B6       __matherr
 0001:003DC8C0       _fdiv_main_routine
 0001:003DC9D7       __adj_fdiv_r
 0001:003DCE76       __fdivp_sti_st
 0001:003DCE89       __fdivrp_sti_st
 0001:003DCE9C       __adj_fdiv_m32
 0001:003DCEE8       __adj_fdiv_m64
 0001:003DCF34       __adj_fdiv_m16i
 0001:003DCF68       __adj_fdiv_m32i
 0001:003DCF9C       __adj_fdivr_m32
 0001:003DCFE8       __adj_fdivr_m64
 0001:003DD034       __adj_fdivr_m16i
 0001:003DD068       __adj_fdivr_m32i
 0001:003DD09C       __safe_fdiv
 0001:003DD0B1       __safe_fdivr
 0001:003DD0C6       __fprem_common
 0001:003DD2CC       __adj_fprem
 0001:003DD37E       __fprem1_common
 0001:003DD584       __adj_fprem1
 0001:003DD639       __safe_fprem
 0001:003DD63F       __safe_fprem1
 0001:003DD645       __adj_fpatan
 0001:003DD648       __adj_fptan
 0001:003DD64B       ___init_time
 0001:003DD6DC       __get_lc_time
 0001:003DDA2A       __free_lc_time
 0001:003DDBBA       ___init_numeric
 0001:003DDD8F       _fix_grouping
 0001:003DDDC6       ___init_monetary
 0001:003DDE91       __get_lc_lconv
 0001:003DDFB3       _fix_grouping_0
 0001:003DDFEA       __free_lc_lconv
 0001:003DE038       ___init_ctype
 0001:003DE27D       ___init_collate
 0001:003DE280       _strcspn
 0001:003DE2C0       _strncmp
 0001:003DE2F8       ___get_qualified_locale
 0001:003DE475       _TranslateName
 0001:003DE4CD       _GetLcidFromLangCountry
 0001:003DE554       LangCountryEnumProc(x)
 0001:003DE758       _GetLcidFromLanguage
 0001:003DE7AE       LanguageEnumProc(x)
 0001:003DE86B       _GetLcidFromCountry
 0001:003DE8A2       CountryEnumProc(x)
 0001:003DE928       _GetLcidFromDefault
 0001:003DE942       _ProcessCodePage
 0001:003DE9A8       _TestDefaultCountry
 0001:003DE9C7       _TestDefaultLanguage
 0001:003DEA29       _IsThisWindowsNT
 0001:003DEA5F       crtGetLocaleInfoA(x,x,x,x)
 0001:003DEB45       _LcidFromHexString
 0001:003DEB7E       _GetPrimaryLen
 0001:003DEB9F       __ismbbkalnum
 0001:003DEBB0       __ismbbkprint
 0001:003DEBC1       __ismbbkpunct
 0001:003DEBD2       __ismbbalnum
 0001:003DEBE6       __ismbbalpha
 0001:003DEBFA       __ismbbgraph
 0001:003DEC0E       __ismbbprint
 0001:003DEC22       __ismbbpunct
 0001:003DEC33       __ismbblead
 0001:003DEC44       __ismbbtrail
 0001:003DEC55       __ismbbkana
 0001:003DECAD       _strtol
 0001:003DECC4       _strtoxl
 0001:003DEEC9       _strtoul
 0001:003DEEE0       __get_sbh_threshold
 0001:003DEEFF       __set_sbh_threshold
 0001:003DEFB2       ___sbh_heap_init
 0001:003DEFFA       ___sbh_find_block
 0001:003DF025       ___sbh_free_block
 0001:003DF34E       ___sbh_alloc_block
 0001:003DF657       ___sbh_alloc_new_region
 0001:003DF708       ___sbh_alloc_new_group
 0001:003DF803       ___sbh_resize_block
 0001:003DFAF9       ___sbh_heapmin
 0001:003DFBCA       ___sbh_heap_check
 0001:003DFEF9       __get_old_sbh_threshold
 0001:003DFEFF       __set_old_sbh_threshold
 0001:003DFF1B       ___old_sbh_new_region
 0001:003E005F       ___old_sbh_release_region
 0001:003E00B5       ___old_sbh_decommit_pages
 0001:003E0177       ___old_sbh_find_block
 0001:003E01CE       ___old_sbh_free_block
 0001:003E0213       ___old_sbh_alloc_block
 0001:003E041B       ___old_sbh_alloc_block_from_page
 0001:003E053F       ___old_sbh_resize_block
 0001:003E05E8       ___old_sbh_heap_check
 0001:003E0746       ___crtMessageBoxA
 0001:003E07CF       ___addl
 0001:003E07F0       ___add_12
 0001:003E084E       ___shl_12
 0001:003E087C       ___shr_12
 0001:003E08A9       ___mtold12
 0001:003E0970       _$I10_OUTPUT
 0001:003E0C03       ___ld12mul
 0001:003E0E23       ___multtenpow12
 0001:003E0E9F       __mbsnbicoll
 0001:003E0EDE       ___wtomb_environ
 0001:003E0F4C       __Getdays
 0001:003E0FDB       __Getmonths
 0001:003E1070       __Gettnames
 0001:003E12A2       _strftime
 0001:003E12BD       __Strftime
 0001:003E13B7       __expandtime
 0001:003E17A6       __store_str
 0001:003E17CD       __store_num
 0001:003E183C       __store_number
 0001:003E1885       __store_winword
 0001:003E1B54       ___getlocaleinfo
 0001:003E1C8C       _localeconv
 0001:003E1C92       ___crtGetStringTypeW
 0001:003E1E57       __itoa
 0001:003E1E84       _xtoa
 0001:003E1EE0       __ltoa
 0001:003E1F0A       _ultoa
 0001:003E1F25       __i64toa
 0001:003E1F56       x64toa(x,x,x,x,x)
 0001:003E1FDC       __ui64toa
 0001:003E2000       __strnicmp
 0001:003E2101       ___crtCompareStringA
 0001:003E237E       _strncnt_0
 0001:003E23A9       ___crtsetenv
 0001:003E2530       _findenv
 0001:003E2588       _copy_environ
 0001:003E25EF       ___crtGetLocaleInfoW
 0001:003E2702       ___crtGetLocaleInfoA
 0001:003E2820       __mbschr
 0001:003E28B7       __strdup
 0001:003E28F0       _vdf_fclose
 0001:003E28F6       _vdf_fexists
 0001:003E28FC       _vdf_getlasterror
 0001:003E2902       _vdf_fopen
 0001:003E2908       _vdf_ffilesize
 0001:003E290E       _vdf_fseek
 0001:003E2914       _vdf_ftell
 0001:003E291A       _vdf_getdir
 0001:003E2920       _vdf_searchfile
 0001:003E2926       _vdf_findopen
 0001:003E292C       _vdf_findclose
 0001:003E2932       _vdf_findnext
 0001:003E2938       _vdf_fread
 0001:003E293E       _vdf_initall
 0001:003E2944       _vdf_exitall
 0001:003E294A       OutputDebugStringA(x)
 0001:003E2950       DebugBreak()
 0001:003E2956       UnmapViewOfFile(x)
 0001:003E295C       MapViewOfFile(x,x,x,x,x)
 0001:003E2962       lstrcmpiA(x,x)
 0001:003E2968       IsBadReadPtr(x,x)
 0001:003E296E       GetWindowsDirectoryA(x,x)
 0001:003E2974       InterlockedExchange(x,x)
 0001:003E297A       RtlUnwind(x,x,x,x)
 0001:003E2980       TerminateProcess(x,x)
 0001:003E2986       GetTimeZoneInformation(x)
 0001:003E298C       GetSystemTime(x)
 0001:003E2992       SetEnvironmentVariableA(x,x)
 0001:003E2998       GetCurrentDirectoryA(x,x)
 0001:003E299E       SetCurrentDirectoryA(x)
 0001:003E29A4       GetFileAttributesA(x)
 0001:003E29AA       FindClose(x)
 0001:003E29B0       FileTimeToSystemTime(x,x)
 0001:003E29B6       GetDriveTypeA(x)
 0001:003E29BC       FindFirstFileA(x,x)
 0001:003E29C2       FindNextFileA(x,x)
 0001:003E29C8       GetFullPathNameA(x,x,x,x)
 0001:003E29CE       MoveFileA(x,x)
 0001:003E29D4       CreateDirectoryA(x,x)
 0001:003E29DA       InterlockedDecrement(x)
 0001:003E29E0       InterlockedIncrement(x)
 0001:003E29E6       TlsSetValue(x,x)
 0001:003E29EC       ExitThread(x)
 0001:003E29F2       GetStartupInfoA(x)
 0001:003E29F8       GetCommandLineA()
 0001:003E29FE       RaiseException(x,x,x,x)
 0001:003E2A04       ReadFile(x,x,x,x,x)
 0001:003E2A0A       SetHandleCount(x)
 0001:003E2A10       GetStdHandle(x)
 0001:003E2A16       GetFileType(x)
 0001:003E2A1C       FatalAppExitA(x,x)
 0001:003E2A22       TlsAlloc()
 0001:003E2A28       TlsFree(x)
 0001:003E2A2E       SetLastError(x)
 0001:003E2A34       TlsGetValue(x)
 0001:003E2A3A       WideCharToMultiByte(x,x,x,x,x,x,x,x)
 0001:003E2A40       FlushFileBuffers(x)
 0001:003E2A46       SetConsoleCtrlHandler(x,x)
 0001:003E2A4C       LCMapStringA(x,x,x,x,x,x)
 0001:003E2A52       LCMapStringW(x,x,x,x,x,x)
 0001:003E2A58       GetCPInfo(x,x)
 0001:003E2A5E       GetACP()
 0001:003E2A64       GetOEMCP()
 0001:003E2A6A       UnhandledExceptionFilter(x)
 0001:003E2A70       FreeEnvironmentStringsA(x)
 0001:003E2A76       FreeEnvironmentStringsW(x)
 0001:003E2A7C       GetEnvironmentStrings()
 0001:003E2A82       GetEnvironmentStringsW()
 0001:003E2A88       GetEnvironmentVariableA(x,x,x)
 0001:003E2A8E       HeapDestroy(x)
 0001:003E2A94       HeapCreate(x,x,x)
 0001:003E2A9A       VirtualFree(x,x,x)
 0001:003E2AA0       HeapFree(x,x,x)
 0001:003E2AA6       SetStdHandle(x,x)
 0001:003E2AAC       SetEndOfFile(x)
 0001:003E2AB2       IsBadWritePtr(x,x)
 0001:003E2AB8       IsBadCodePtr(x)
 0001:003E2ABE       GetStringTypeA(x,x,x,x,x)
 0001:003E2AC4       GetStringTypeW(x,x,x,x)
 0001:003E2ACA       IsValidLocale(x,x)
 0001:003E2AD0       IsValidCodePage(x)
 0001:003E2AD6       GetLocaleInfoA(x,x,x,x)
 0001:003E2ADC       EnumSystemLocalesA(x,x)
 0001:003E2AE2       GetUserDefaultLCID()
 0001:003E2AE8       HeapAlloc(x,x,x)
 0001:003E2AEE       VirtualAlloc(x,x,x,x)
 0001:003E2AF4       HeapReAlloc(x,x,x,x)
 0001:003E2AFA       CompareStringA(x,x,x,x,x,x)
 0001:003E2B00       CompareStringW(x,x,x,x,x,x)
 0001:003E2B06       GetLocaleInfoW(x,x,x,x)
 0001:003E2B0C       ClientToScreen(x,x)
 0001:003E2B12       GetParent(x)
 0001:003E2B18       GetClassInfoA(x,x,x)
 0001:003E2B1E       SetWindowPlacement(x,x)
 0001:003E2B24       AdjustWindowRectEx(x,x,x,x)
 0001:003E2B2A       GetWindowLongA(x,x)
 0001:003E2B30       GetMenu(x)
 0001:003E2B36       GetWindowPlacement(x,x)
 0001:003E2B3C       UnregisterClassA(x,x)
 0001:003E2B42       LoadImageA(x,x,x,x,x,x)
 0001:003E2B48       GetObjectA(x,x,x)
 0001:003E2B4E       GetPaletteEntries(x,x,x,x)
 0001:003E2B54       _rmdir
 0001:003E2B7E       _chmod
 0001:003E2BBE       RemoveDirectoryA(x)
 0001:003E2BC4       SetFileAttributesA(x,x)
 0002:000006F0       const zSTRING::`vftable'
 0002:000006FC       const zCCSCamera_EventMsgActivate::`vftable'
 0002:0000075C       const zCEventMessage::`vftable'
 0002:000007BC       const zCEventCore::`vftable'
 0002:0000081C       const oCCSManager::`vftable'
 0002:0000089C       const zCObject::`vftable'
 0002:000008B0       char const `std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Nullstr(void)'::`2'::_C
 0002:000008DC       const oCCSPlayer::`vftable'{for `zCCSDebugger'}
 0002:00000904       const oCCSPlayer::`vftable'{for `zCObject'}
 0002:00000970       const oCCSProps::`vftable'
 0002:000009B4       const oCCSTrigger::`vftable'
 0002:00000A4C       const zCCSCutsceneContext::`vftable'
 0002:00000B5C       const zCCSAtomicBlock::`vftable'
 0002:00000BC4       const zCCSBlock::`vftable'
 0002:00000C2C       const zCCSSyncBlock::`vftable'
 0002:00000C94       const zCCSBlockBase::`vftable'
 0002:00000CF8       const zCCSRole::`vftable'{for `zSTRING'}
 0002:00000D00       const zCCSRole::`vftable'{for `zCObject'}
 0002:00000D14       const zCEvMsgCutscene::`vftable'
 0002:00000D78       const zCCSBlockPosition::`vftable'
 0002:00000D8C       const zCCutscene::`vftable'
 0002:00000E60       const zCCSLib::`vftable'
 0002:00000E8C       const zCCSManager::`vftable'
 0002:00000F20       const zCCSPlayer::`vftable'{for `zCCSDebugger'}
 0002:00000F44       const zCCSPlayer::`vftable'{for `zCObject'}
 0002:00000F9C       const zCCSDebugger::`vftable'
 0002:00000FD8       const zCCSPoolItem::`vftable'{for `zCObject'}
 0002:00000FEC       const zCCSPoolItem::`vftable'{for `zSTRING'}
 0002:0000100C       const zCCSProps::`vftable'
 0002:00001044       const oCBinkPlayer::`vftable'
 0002:0000109C       const oCGameInfo::`vftable'
 0002:000010EC       const CGameManager::`vftable'
 0002:000010F8       const zCTextureFileHandler::`vftable'
 0002:00001104       const oCObjectFactory::`vftable'
 0002:00001148       const zCObjectFactory::`vftable'
 0002:000011EC       const oCMenuSavegame::`vftable'
 0002:00001278       const oCPlayerInfo::`vftable'
 0002:000012BC       int const SAVEGAME_SLOT_NONE
 0002:000012C0       int const SAVEGAME_SLOT_NEW
 0002:000012C4       int const SAVEGAME_SLOT_CURRENT
 0002:000012C8       int const SAVEGAME_SLOT_QUICK
 0002:000012CC       int const SAVEGAME_SLOT_MIN
 0002:000012D0       int const SAVEGAME_SLOT_MAX
 0002:000012D8       const oCSavegameInfo::`vftable'
 0002:000012EC       const oCSavegameManager::`vftable'
 0002:00001300       const oCSystemInfo::`vftable'
 0002:00001384       const oCTriggerChangeLevel::`vftable'
 0002:00001404       const oCTriggerScript::`vftable'
 0002:00001484       const oCObjectGenerator::`vftable'
 0002:00001520       const oCViewStatusBar::`vftable'{for `zCInputCallback'}
 0002:0000152C       const oCViewStatusBar::`vftable'{for `zCViewBase'}
 0002:00001594       const zCBinkPlayer::`vftable'
 0002:000015F0       const zCBuffer::`vftable'
 0002:00001614       char const DIR_SEPARATOR
 0002:0000161C       const zFILE::`vftable'
 0002:0000170C       const zFILE_FILE::`vftable'
 0002:0000180C       const zPATH::`vftable'
 0002:00001814       const zFILE_VDFS::`vftable'
 0002:00001924       const zERROR::`vftable'
 0002:0000192C       const zCFileCSV::`vftable'
 0002:00001A38       const zCGameInfo::`vftable'
 0002:00001A80       const zCNet::`vftable'
 0002:00001A88       const zCNetStatistics::`vftable'
 0002:00001AA4       protocol
 0002:00001ACC       const zCNetEventManager::`vftable'
 0002:00001B54       const zCNetHost::`vftable'
 0002:00001B70       const zCNetManager::`vftable'
 0002:00001BA8       const zCNetMessage::`vftable'
 0002:00001BB0       const zCNetSession::`vftable'
 0002:00001BB8       const zCNetVersion::`vftable'
 0002:00001BEC       const zCNetVobControl::`vftable'
 0002:00001C28       int const ENTRY_DONT_SAVE
 0002:00001C30       const zCOption::`vftable'
 0002:00001C50       const zCPlayerGroup::`vftable'
 0002:00001C6C       const zCPlayerInfo::`vftable'
 0002:00001CA0       const zCScanDirFileHandler::`vftable'
 0002:00001CAC       const zCScanDir::`vftable'
 0002:00001EB8       char const * const zCHARBUF_SKIP
 0002:00001EBC       char const * const zCHARBUF_EMPTY
 0002:00001ED0       const zCSystemInfo::`vftable'
 0002:00001EDC       const zCVideoPlayer::`vftable'
 0002:00001F24       const zCViewProgressBar::`vftable'{for `zCInputCallback'}
 0002:00001F2C       const zCViewProgressBar::`vftable'{for `zCViewBase'}
 0002:00001F78       const zCViewStatusBar::`vftable'{for `zCInputCallback'}
 0002:00001F84       const zCViewStatusBar::`vftable'{for `zCViewBase'}
 0002:00001FDC       const zCWorldInfo::`vftable'
 0002:000020B4       const oCMenu_Main::`vftable'
 0002:00002104       const oCMenu_ChgKeys::`vftable'
 0002:0000216C       const oCMenu_Log::`vftable'
 0002:000021BC       const oCMenu_Status::`vftable'
 0002:00002208       const oCStatusScreen::`vftable'
 0002:00002210       const oCLogScreen::`vftable'
 0002:00002218       const oCMapScreen::`vftable'
 0002:00002260       const oCSpell::`vftable'
 0002:0000229C       const oCVisualFX::`vftable'
 0002:000023DC       const zCEffect::`vftable'
 0002:00002450       const oCVisualFXAI::`vftable'
 0002:00002484       const zCAIBase::`vftable'
 0002:00002534       const oCVisFX_MultiTarget::`vftable'
 0002:00002690       const zCAICamera::`vftable'
 0002:00002874       const zCCamTrj_KeyFrame::`vftable'
 0002:000028EC       const zCCSCamera::`vftable'
 0002:0000296C       const zCCSCamera_EventMsg::`vftable'
 0002:00002A04       const zCFlash::zCBolt::`vftable'
 0002:00002A64       const zCFlash::`vftable'
 0002:00002AD4       const zCInput::`vftable'
 0002:00002B64       const zCInput_Win32::`vftable'
 0002:00002C3C       const zCMenu::`vftable'
 0002:00002CA4       const zCMenuItemButton::`vftable'{for `zCInputCallback'}
 0002:00002CAC       const zCMenuItemButton::`vftable'{for `zCViewBase'}
 0002:00002D34       const zCMenuItemList::`vftable'{for `zCInputCallback'}
 0002:00002D3C       const zCMenuItemList::`vftable'{for `zCViewBase'}
 0002:00002DC4       const zCMenuItemChoice::`vftable'{for `zCInputCallback'}
 0002:00002DCC       const zCMenuItemChoice::`vftable'{for `zCViewBase'}
 0002:00002E54       const zCMenuItemSlider::`vftable'{for `zCInputCallback'}
 0002:00002E5C       const zCMenuItemSlider::`vftable'{for `zCViewBase'}
 0002:00002EE8       const zCMenuItemInput::`vftable'{for `zCInputCallback'}
 0002:00002EF4       const zCMenuItemInput::`vftable'{for `zCViewBase'}
 0002:00002F7C       const zCMenuItemText::`vftable'{for `zCInputCallback'}
 0002:00002F84       const zCMenuItemText::`vftable'{for `zCViewBase'}
 0002:00003010       const zCMenuItem::`vftable'{for `zCInputCallback'}
 0002:0000301C       const zCMenuItem::`vftable'{for `zCViewBase'}
 0002:000030C4       const zCMusicTheme::`vftable'
 0002:000030D0       const zCMusicTheme_DM::`vftable'
 0002:000030E4       const zCMusicSys_DirectMusic::`vftable'
 0002:0000313C       const zCMusicJingle::`vftable'
 0002:0000315C       const zCMusicSystem::`vftable'
 0002:00003200       const zCSndDebugCallback::`vftable'
 0002:0000320C       const zCSndSys_MSS::`vftable'
 0002:00003294       const zCSoundSystem::`vftable'
 0002:0000331C       const zCSndFX_MSS::`vftable'
 0002:0000337C       const zCSoundFX::`vftable'
 0002:00003404       const zCViewWindow::`vftable'{for `zCInputCallback'}
 0002:0000340C       const zCViewWindow::`vftable'{for `zCViewBase'}
 0002:000034A8       const zCVolatileMemory<zCVertexTransform>::`vftable'
 0002:0000351C       const zCAIPlayer::`vftable'
 0002:000035E0       const zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::`vftable'{for `zCCacheBase'}
 0002:000035F0       const zCCache<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>::`vftable'{for `zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>'}
 0002:00003628       const zCSparseArray<zCAIPlayer const *,zCCacheData<zCAIPlayer const *,zCAIPlayer::zTLedgeInfo>>::`vftable'
 0002:000036A8       const zCArchiverFactory::`vftable'
 0002:000036D4       const zCArchiverBinSafe::`vftable'
 0002:0000384C       const zCArchiver::`vftable'
 0002:000039DC       const zCArchiverGeneric::`vftable'
 0002:00003B50       const zCSparseArray<zCObject *,zCArchiverGeneric::zTWriteObjectEntry>::`vftable'
 0002:00003BA4       const zCRndAlphaSortObject_Vob::`vftable'
 0002:00003BB4       const zCRndAlphaSortObject::`vftable'
 0002:00003C10       const zCSparseArray<void const *,int>::`vftable'
 0002:00003D44       const zCCollisionReport::`vftable'
 0002:00003D4C       const zCCollisionDetector::`vftable'
 0002:00003D78       const zCCollisionObject::`vftable'
 0002:00003DAC       const zCCollObjectUndef::`vftable'
 0002:00003DCC       const zCCollObjectLevelPolys::`vftable'
 0002:00003DEC       const zCCollObjectPoint::`vftable'
 0002:00003E0C       const zCCollObjectProjectile::`vftable'
 0002:00003E2C       const zCCollObjectComplex::`vftable'
 0002:00003E4C       const zCCollObjectBoxBlocker::`vftable'
 0002:00003E6C       const zCCollObjectBoxPassThrough::`vftable'
 0002:00003EA0       const zCCollObjectCharacter::`vftable'
 0002:00003ED4       const zCCollObjectBase::`vftable'
 0002:00003F54       const zCConvexPrimitiveUnitSphere::`vftable'
 0002:00003F78       const zCConvexPrimitive::`vftable'
 0002:00003FA4       const zCConvexPrimitiveScaleTrans::`vftable'
 0002:00003FC8       const zCConvexPrimitiveEllipsoid::`vftable'
 0002:00003FEC       const zCCache<zCCacheIndex,zCConvexCollisionCache>::`vftable'{for `zCCacheBase'}
 0002:00003FFC       const zCCache<zCCacheIndex,zCConvexCollisionCache>::`vftable'{for `zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>'}
 0002:00004034       const zCSparseArray<zCCacheIndex,zCCacheData<zCCacheIndex,zCConvexCollisionCache>>::`vftable'
 0002:00004084       const zCDecal::`vftable'
 0002:000040DC       uint const zCMgcEigenD::invalid_size
 0002:000040E0       uint const zCMgcEigenD::allocation_failed
 0002:000040E4       uint const zCMgcEigenD::ql_exceeded
 0002:00004100       const zCEngine::`vftable'
 0002:00004128       const zCFFT::`vftable'
 0002:000041E4       const zCLensFlareFX::`vftable'
 0002:00004214       const zCMaterial::`vftable'
 0002:00004228       const zCMalloc::`vftable'
 0002:0000425C       const zCMallocGeneric::`vftable'
 0002:00004290       const zCVolatileMemoryBase::`vftable'
 0002:000042BC       const zCMesh::`vftable'
 0002:0000434C       const zCModel::`vftable'
 0002:000043BC       const zCVisualAnimate::`vftable'
 0002:00004438       const zCModelMeshLib::`vftable'
 0002:00004498       const zCModelAni::`vftable'
 0002:000044B0       const zCModelConvertFileHandler::`vftable'
 0002:000044D4       const zCMorphMesh::`vftable'
 0002:00004544       const zCMorphMeshConvertFileHandler::`vftable'
 0002:000045C4       const zCParticleFX::`vftable'
 0002:00004620       const zCPFXPerFrameCallback::`vftable'
 0002:000046B4       const zCPolyStrip::`vftable'
 0002:0000471C       const zCLightning::zCBolt::`vftable'
 0002:00004964       const zCMeshSoftSkin::`vftable'
 0002:000049CC       const zCProgMeshProto::`vftable'
 0002:00004A3C       const zCProgMeshConvertFileHandler::`vftable'
 0002:00004A64       const zCQuadMark::`vftable'
 0002:00004B34       const zCCache<zCVob const *,zCDynVobLightCacheElement>::`vftable'{for `zCCacheBase'}
 0002:00004B44       const zCCache<zCVob const *,zCDynVobLightCacheElement>::`vftable'{for `zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>'}
 0002:00004B7C       const zCSparseArray<zCVob const *,zCCacheData<zCVob const *,zCDynVobLightCacheElement>>::`vftable'
 0002:00004BC8       const zCRndAlphaSortObject_WorldPoly::`vftable'
 0002:00004BE8       const zCResource::`vftable'
 0002:00004C0C       const zCResourceManager::`vftable'
 0002:00004C4C       const zCSession::`vftable'
 0002:00004CBC       const zCSkyControler_Indoor::`vftable'
 0002:00004D54       const zCSkyControler_Mid::`vftable'
 0002:00004DEC       const zCSkyControler::`vftable'
 0002:00004E84       const zCUnderwaterPFX::`vftable'
 0002:00004F54       const zCSkyControler_Outdoor::`vftable'
 0002:00005024       const zCSparseArrayBase::`vftable'
 0002:0000505C       const zCCacheBase::`vftable'
 0002:00005078       const zCTextureFileFormatTGA::`vftable'
 0002:000050A8       const zCTextureFileFormatInternal::`vftable'
 0002:000050D8       const zCTextureFileFormat::`vftable'
 0002:0000511C       const zCTexture::`vftable'{for `zCTextureExchange'}
 0002:0000514C       const zCTexture::`vftable'{for `zCResource'}
 0002:0000517C       const zCTextureExchange::`vftable'
 0002:000051B4       const zCLightMap::`vftable'
 0002:000051C8       const zCThread::`vftable'
 0002:000051F0       const zCCriticalSection::`vftable'
 0002:00005200       const zCSyncObject::`vftable'
 0002:00005210       const zCMutex::`vftable'
 0002:00005620       float const zfloatTwo
 0002:0000B88C       const zCVertexBuffer::`vftable'
 0002:0000B8EC       const zCVobLightPreset::`vftable'
 0002:0000B904       const zCVobLevelCompo::`vftable'
 0002:0000B97C       const zCVob::`vftable'
 0002:0000BA04       const zCVisual::`vftable'
 0002:0000BA74       const zCVobLight::`vftable'
 0002:0000BB00       aMt_noneMt_trig
 0002:0000BB4C       const zCVobStair::`vftable'
 0002:0000BBC4       const zCTriggerUntouch::`vftable'
 0002:0000BC3C       const zCTriggerBase::`vftable'
 0002:0000BCB4       const zCMessageFilter::`vftable'
 0002:0000BD2C       const zCCodeMaster::`vftable'
 0002:0000BDA4       const zCMoverControler::`vftable'
 0002:0000BE1C       const zCTriggerWorldStart::`vftable'
 0002:0000BE94       const zCTriggerList::`vftable'
 0002:0000BF14       const zCTriggerTeleport::`vftable'
 0002:0000BF94       const zCEarthquake::`vftable'
 0002:0000C00C       const zCPFXControler::`vftable'
 0002:0000C084       const zCTouchDamage::`vftable'
 0002:0000C0FC       const zCTouchAnimate::`vftable'
 0002:0000C174       const zCTouchAnimateSound::`vftable'
 0002:0000C1EC       const zCVobAnimate::`vftable'
 0002:0000C264       const zCVobLensFlare::`vftable'
 0002:0000C2DC       const zCEventCommon::`vftable'
 0002:0000C33C       const zCEventMover::`vftable'
 0002:0000C39C       const zCEventScreenFX::`vftable'
 0002:0000C3FC       const zCTrigger::`vftable'
 0002:0000C47C       const zCMover::`vftable'
 0002:0000C4FC       const zCVobScreenFX::`vftable'
 0002:0000C5A4       const zCWorld::`vftable'
 0002:0000C610       const zCVobBBox3DSorter<zCZone>::zTBoxSortHandle::`vftable'
 0002:0000C624       const zCVobBBox3DSorter<zCZone>::`vftable'
 0002:0000C630       const zCBBox3DSorterBase::zTBoxSortHandle::`vftable'
 0002:0000C6A4       const zCSoundSystemDummy::`vftable'
 0002:0000C72C       const zCMusicSys_Dummy::`vftable'
 0002:0000C784       const zCSoundFXDummy::`vftable'
 0002:0000C7E4       const zCVobCallback_PrintBigBBox::`vftable'
 0002:0000C7FC       const zCZoneZFogDefault::`vftable'
 0002:0000C880       const zCShowMemCallback::`vftable'
 0002:0000C89C       const zCZoneReverb::`vftable'
 0002:0000C924       const zCZone::`vftable'
 0002:0000C9AC       const zCZoneReverbDefault::`vftable'
 0002:0000CA34       const zCZoneVobFarPlane::`vftable'
 0002:0000CABC       const zCZoneVobFarPlaneDefault::`vftable'
 0002:0000CB44       const zCZoneMusic::`vftable'
 0002:0000CBCC       const zCZoneZFog::`vftable'
 0002:0000CC54       const zCVobSoundDaytime::`vftable'
 0002:0000CCDC       const zCBBox3DSorterBase::`vftable'
 0002:0000CCEC       const zCVobSound::`vftable'
 0002:0000CD8C       const oCZoneMusic::`vftable'
 0002:0000CE1C       const oCZoneMusicDefault::`vftable'
 0002:0000CEBC       const zCMusicControler::`vftable'
 0002:0000CF34       const zCEventMusicControler::`vftable'
 0002:0000D0C4       const zCRnd_D3D::`vftable'
 0002:0000D264       const zCRenderer::`vftable'
 0002:0000D404       const zD3D_alphaPoly::`vftable'
 0002:0000D454       const zCTex_D3D::`vftable'{for `zCTextureExchange'}
 0002:0000D484       const zCTex_D3D::`vftable'{for `zCResource'}
 0002:0000D4CC       const zCVertexBuffer_D3D::`vftable'
 0002:0000D544       const zCTexConGeneric::`vftable'
 0002:0000D5A8       const oCCollObjectCharacter::`vftable'
 0002:0000D5DC       const zCSparseArray<void const *,zCAccountInfo>::`vftable'
 0002:0000D614       const zCSparseArray<zTIndexB,int>::`vftable'
 0002:0000D64C       const zCSparseArray<zTIndexA,int>::`vftable'
 0002:0000D69C       const oCDocumentManager::`vftable'
 0002:0000D74C       const oCViewDialogInventory::`vftable'
 0002:0000D754       const oCViewDialogInventory::`vftable'{for `zCViewBase'}
 0002:0000D77C       const oCViewDialogInventory::`vftable'{for `zCObject'}
 0002:0000D7D0       const oCViewDialogItem::`vftable'
 0002:0000D7D8       const oCViewDialogItem::`vftable'{for `zCViewBase'}
 0002:0000D804       const oCViewDialogItem::`vftable'{for `zCObject'}
 0002:0000D858       const oCViewDialogItemContainer::`vftable'
 0002:0000D860       const oCViewDialogItemContainer::`vftable'{for `zCViewBase'}
 0002:0000D88C       const oCViewDialogItemContainer::`vftable'{for `zCObject'}
 0002:0000D8E4       const oCViewDialogStealContainer::`vftable'
 0002:0000D8EC       const oCViewDialogStealContainer::`vftable'{for `zCViewBase'}
 0002:0000D914       const oCViewDialogStealContainer::`vftable'{for `zCObject'}
 0002:0000D970       const oCViewDialogTrade::`vftable'
 0002:0000D978       const oCViewDialogTrade::`vftable'{for `zCViewBase'}
 0002:0000D9A4       const oCViewDialogTrade::`vftable'{for `zCObject'}
 0002:0000DA08       const oCViewDocument::`vftable'
 0002:0000DA10       const oCViewDocument::`vftable'{for `zCViewBase'}
 0002:0000DA3C       const oCViewDocument::`vftable'{for `zCObject'}
 0002:0000DA9C       const oCViewDocumentMap::`vftable'
 0002:0000DAA4       const oCViewDocumentMap::`vftable'{for `zCViewBase'}
 0002:0000DACC       const oCViewDocumentMap::`vftable'{for `zCObject'}
 0002:0000DB40       ushort const zCViewBase::ViewVirtualWidth
 0002:0000DB42       ushort const zCViewBase::ViewVirtualHeight
 0002:0000DB48       const zCViewBase::`vftable'
 0002:0000DB84       const zCViewDialog::`vftable'{for `zCViewBase'}
 0002:0000DBAC       const zCViewDialog::`vftable'{for `zCObject'}
 0002:0000DBEC       const zCViewDialog::`vftable'
 0002:0000DC08       const zCViewDialogChoice::`vftable'
 0002:0000DC10       const zCViewDialogChoice::`vftable'{for `zCViewBase'}
 0002:0000DC3C       const zCViewDialogChoice::`vftable'{for `zCObject'}
 0002:0000DC90       const zCViewDraw::`vftable'{for `zCViewBase'}
 0002:0000DCB8       const zCViewDraw::`vftable'{for `zCObject'}
 0002:0000DCEC       const zCViewFX::`vftable'{for `zCViewBase'}
 0002:0000DD14       const zCViewFX::`vftable'{for `zCObject'}
 0002:0000DD48       const zCViewObject::`vftable'{for `zCViewBase'}
 0002:0000DD70       const zCViewObject::`vftable'{for `zCObject'}
 0002:0000DD98       const zCViewPrint::`vftable'{for `zCViewBase'}
 0002:0000DDC0       const zCViewPrint::`vftable'{for `zCObject'}
 0002:0000DE2C       const oCAIHuman::`vftable'
 0002:0000DE7C       const oCAICamera::`vftable'
 0002:0000DEB0       const oCAIHuman_Stand::`vftable'
 0002:0000DF00       const oCAIVobMove::`vftable'
 0002:0000DF38       const oCAISound::`vftable'
 0002:0000DF6C       const oCAIVobMoveTorch::`vftable'
 0002:0000DFA4       const oCAIArrowBase::`vftable'
 0002:0000DFDC       const oCAIArrow::`vftable'
 0002:0000E010       const oCAIDrop::`vftable'
 0002:0000E064       const oCAniCtrl_Human::`vftable'
 0002:0000E10C       const oCSkyControler_Barrier::`vftable'
 0002:0000E1C8       const oCAskBox::`vftable'
 0002:0000E218       const oCDoc::`vftable'{for `zCInputCallback'}
 0002:0000E220       const oCDoc::`vftable'{for `zCViewBase'}
 0002:0000E28C       const oCGame::`vftable'
 0002:0000E364       const oCViewGothicProgressBar::`vftable'{for `zCInputCallback'}
 0002:0000E36C       const oCViewGothicProgressBar::`vftable'{for `zCViewBase'}
 0002:0000E43C       const oCInfoManager::`vftable'
 0002:0000E44C       const oCInfo::`vftable'
 0002:0000E474       int const INV_MAX_ITEMS
 0002:0000E4AC       const oCItemContainer::`vftable'
 0002:0000E574       const oCStealContainer::`vftable'
 0002:0000E644       const oCNpcContainer::`vftable'
 0002:0000E714       const oCNpcInventory::`vftable'
 0002:0000E804       const oCItem::`vftable'
 0002:0000E8E0       const oCMissionManager::`vftable'
 0002:0000E8EC       const oCMission::`vftable'
 0002:0000E914       const oCMobBed::`vftable'
 0002:0000EA3C       const oCMobSwitch::`vftable'
 0002:0000EB64       const oCMobContainer::`vftable'
 0002:0000ECBC       const oCMobLockable::`vftable'
 0002:0000EE04       const oCMobWheel::`vftable'
 0002:0000EF2C       const oCMobLadder::`vftable'
 0002:0000F054       const oCMobDoor::`vftable'
 0002:0000F19C       const oCMobFire::`vftable'
 0002:0000F2CC       const oCMobItemSlot::`vftable'
 0002:0000F3FC       const oCDummyVobGenerator::`vftable'
 0002:0000F474       const oCMobMsg::`vftable'
 0002:0000F4D4       const oCMOB::`vftable'
 0002:0000F58C       const oCMobInter::`vftable'
 0002:0000F6D0       const oCNewsMemory::`vftable'
 0002:0000F6DC       const oCNews::`vftable'
 0002:0000F710       const oCNpcTalent::`vftable'
 0002:0000F724       const oCNpc::`vftable'
 0002:0000F88C       const zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::`vftable'{for `zCCacheBase'}
 0002:0000F89C       const zCCacheAsk<oCNpc const *,oCNpc::TActiveInfo>::`vftable'{for `zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>'}
 0002:0000F8D4       const zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>::`vftable'
 0002:0000F90C       const zCCache<oCNpc const *,oCNpc::TActiveInfo>::`vftable'{for `zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCNpc::TActiveInfo>>'}
 0002:0000F944       const zCCache<oCNpc const *,oCNpc::TActiveInfo>::`vftable'{for `zCCacheBase'}
 0002:0000F954       const zCCacheAsk<oCNpc const *,oCShrinkHelper>::`vftable'{for `zCCacheBase'}
 0002:0000F964       const zCCacheAsk<oCNpc const *,oCShrinkHelper>::`vftable'{for `zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>'}
 0002:0000F99C       const zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>::`vftable'
 0002:0000F9D4       const zCCache<oCNpc const *,oCShrinkHelper>::`vftable'{for `zCSparseArray<oCNpc const *,zCCacheData<oCNpc const *,oCShrinkHelper>>'}
 0002:0000FA0C       const zCCache<oCNpc const *,oCShrinkHelper>::`vftable'{for `zCCacheBase'}
 0002:0000FA1C       const zCSparseArray<zTOverlayIndex,zCModelPrototype *>::`vftable'
 0002:0000FA8C       const oCNpcMessage::`vftable'
 0002:0000FAFC       const oCMsgDamage::`vftable'
 0002:0000FB6C       const oCMsgWeapon::`vftable'
 0002:0000FBDC       const oCMsgMovement::`vftable'
 0002:0000FC4C       const oCMsgAttack::`vftable'
 0002:0000FCBC       const oCMsgUseItem::`vftable'
 0002:0000FD2C       const oCMsgState::`vftable'
 0002:0000FD9C       const oCMsgManipulate::`vftable'
 0002:0000FE0C       const oCMsgConversation::`vftable'
 0002:0000FE7C       const oCMsgMagic::`vftable'
 0002:0000FF08       const oCNpc_States::`vftable'
 0002:0000FF80       const oCRtnCutscene::`vftable'
 0002:0000FFE4       const oCVob::`vftable'
 0002:0001008C       const oCTouchDamage::`vftable'
 0002:00010120       const oCWaypoint::`vftable'
 0002:00010138       const oCWay::`vftable'
 0002:00010174       const oCWorld::`vftable'
 0002:00010220       const zCConsole::`vftable'
 0002:0001023C       const zCEventManager::`vftable'
 0002:000102FC       const zCInputCallback::`vftable'
 0002:00010304       const zCView::`vftable'{for `zCInputCallback'}
 0002:0001030C       const zCView::`vftable'{for `zCViewBase'}
 0002:00010344       const zCViewText::`vftable'
 0002:00010364       const zCVobWaypoint::`vftable'
 0002:000103D8       const zCWayNet::`vftable'
 0002:000103EC       const zCWay::`vftable'
 0002:00010410       const zCWaypoint::`vftable'
 0002:00010428       const zCRoute::`vftable'
 0002:00010434       const zCVobSpot::`vftable'
 0002:000104AC       const zCVobStartpoint::`vftable'
 0002:0001053C       _KSDATAFORMAT_SUBTYPE_DIRECTMUSIC
 0002:0001054C       _KSDATAFORMAT_SUBTYPE_MIDI
 0002:00010E9C       _DPVCTGUID_VR12
 0002:00010EAC       _DPVCTGUID_TRUESPEECH
 0002:00010EBC       _DPVCTGUID_SC06
 0002:00010ECC       _DPVCTGUID_SC03
 0002:00010EDC       _DPVCTGUID_NONE
 0002:00010EEC       _DPVCTGUID_GSM
 0002:00010EFC       _DPVCTGUID_ADPCM
 0002:0001105C       _DS3DALG_HRTF_LIGHT
 0002:0001106C       _DS3DALG_HRTF_FULL
 0002:0001107C       _DS3DALG_NO_VIRTUALIZATION
 0002:0001121C       _DSDEVID_DefaultVoiceCapture
 0002:0001122C       _DSDEVID_DefaultVoicePlayback
 0002:0001123C       _DSDEVID_DefaultCapture
 0002:0001124C       _DSDEVID_DefaultPlayback
 0002:0001137C       _DPAID_ComPort
 0002:0001138C       _DPAID_INetPort
 0002:0001139C       _DPAID_INetW
 0002:000113AC       _DPAID_INet
 0002:000113BC       _DPAID_ModemW
 0002:000113CC       _DPAID_Modem
 0002:000113DC       _DPAID_PhoneW
 0002:000113EC       _DPAID_Phone
 0002:000113FC       _DPAID_LobbyProvider
 0002:0001140C       _DPAID_ServiceProvider
 0002:0001141C       _DPAID_TotalSize
 0002:0001142C       _DPLPROPERTY_PlayerScore
 0002:0001143C       _DPLPROPERTY_PlayerGuid
 0002:0001144C       _DPLPROPERTY_LobbyGuid
 0002:0001145C       _DPLPROPERTY_MessagesSupported
 0002:000114EC       _DPSPGUID_MODEM
 0002:000114FC       _DPSPGUID_SERIAL
 0002:0001150C       _DPSPGUID_TCPIP
 0002:0001151C       _DPSPGUID_IPX
 0002:0001194C       _TID_DXFILEHeader
 0002:000119DC       _TID_D3DRMRightHanded
 0002:000119EC       _TID_D3DRMPropertyBag
 0002:000119FC       _TID_D3DRMStringProperty
 0002:00011A0C       _TID_D3DRMExternalVisual
 0002:00011A1C       _TID_D3DRMProgressiveMesh
 0002:00011A2C       _TID_D3DRMUrl
 0002:00011A3C       _TID_D3DRMInlineData
 0002:00011A4C       _TID_D3DRMLightAttenuation
 0002:00011A5C       _TID_D3DRMLightPenumbra
 0002:00011A6C       _TID_D3DRMLightRange
 0002:00011A7C       _TID_D3DRMLightUmbra
 0002:00011A8C       _TID_D3DRMAppData
 0002:00011A9C       _TID_D3DRMCamera
 0002:00011AAC       _TID_D3DRMLight
 0002:00011ABC       _TID_D3DRMFrameRotation
 0002:00011ACC       _TID_D3DRMFrameVelocity
 0002:00011ADC       _TID_D3DRMFramePosition
 0002:00011AEC       _TID_D3DRMAnimationOptions
 0002:00011AFC       _TID_D3DRMTimedFloatKeys
 0002:00011B0C       _TID_D3DRMBoolean2d
 0002:00011B1C       _TID_D3DRMMeshFaceWraps
 0002:00011B2C       _TID_D3DRMBoolean
 0002:00011B3C       _TID_D3DRMMaterialWrap
 0002:00011B4C       _TID_D3DRMMeshVertexColors
 0002:00011B5C       _TID_D3DRMIndexedColor
 0002:00011B6C       _TID_D3DRMTextureReference
 0002:00011B7C       _TID_D3DRMTextureFilename
 0002:00011B8C       _TID_D3DRMGuid
 0002:00011B9C       _TID_D3DRMColorRGB
 0002:00011BAC       _TID_D3DRMColorRGBA
 0002:00011BBC       _TID_D3DRMMaterialPower
 0002:00011BCC       _TID_D3DRMMaterialEmissiveColor
 0002:00011BDC       _TID_D3DRMMaterialSpecularColor
 0002:00011BEC       _TID_D3DRMMaterialDiffuseColor
 0002:00011BFC       _TID_D3DRMMaterialAmbientColor
 0002:00011C0C       _TID_D3DRMFloatKeys
 0002:00011C1C       _TID_D3DRMAnimationKey
 0002:00011C2C       _TID_D3DRMAnimationSet
 0002:00011C3C       _TID_D3DRMAnimation
 0002:00011C4C       _TID_D3DRMMatrix4x4
 0002:00011C5C       _TID_D3DRMCoords2d
 0002:00011C6C       _TID_D3DRMMeshNormals
 0002:00011C7C       _TID_D3DRMMeshTextureCoords
 0002:00011C8C       _TID_D3DRMMeshMaterialList
 0002:00011C9C       _TID_D3DRMFrameTransformMatrix
 0002:00011CAC       _TID_D3DRMFrame
 0002:00011CBC       _TID_D3DRMMaterialArray
 0002:00011CCC       _TID_D3DRMMaterial
 0002:00011CDC       _TID_D3DRMMeshFace
 0002:00011CEC       _TID_D3DRMVector
 0002:00011CFC       _TID_D3DRMMesh
 0002:00011D0C       _TID_D3DRMInfo
 0002:0001248C       _DDVPTYPE_PHILIPS
 0002:0001249C       _DDVPTYPE_BROOKTREE
 0002:000124AC       _DDVPTYPE_CCIR656
 0002:000124BC       _DDVPTYPE_E_HREFL_VREFL
 0002:000124CC       _DDVPTYPE_E_HREFL_VREFH
 0002:000124DC       _DDVPTYPE_E_HREFH_VREFL
 0002:000124EC       _DDVPTYPE_E_HREFH_VREFH
 0002:00014080       const ListT<CSurfaceFormatNode>::`vftable'
 0002:00014094       const ListT<CDDrawDeviceNode>::`vftable'
 0002:000140A8       const ListT<CD3duDeviceNode>::`vftable'
 0002:000140BC       const ListT<CD3duContextNode>::`vftable'
 0002:00014368       const CSurfaceFormatList::`vftable'
 0002:000143FC       const CD3duDeviceList::`vftable'
 0002:00014410       const ListT<CRefreshRateNode>::`vftable'
 0002:00014584       const CRefreshRateList::`vftable'
 0002:00014598       const CD3duContextList::`vftable'
 0002:00014AF8       const CD3duContext::`vftable'
 0002:00015620       const ListT<CVideoModeNode>::`vftable'
 0002:000157D8       const CVideoModeList::`vftable'
 0002:0001583C       const CDDrawDeviceList::`vftable'
 0002:00015880       _GUID const GUID_SURFACEDATA_ORIGINALSIZE
 0002:00015A80       _c_dfDIMouse2
 0002:00015A98       _c_dfDIKeyboard
 0002:00015AB0       _c_dfDIJoystick
 0002:00015AD8       const ostream::`vftable'
 0002:00015ADC       const ostream::`vbtable'
 0002:00015AE8       const ostream_withassign::`vftable'
 0002:00015AEC       const ostream_withassign::`vbtable'
 0002:00015AF8       const istream::`vftable'
 0002:00015AFC       const istream::`vbtable'
 0002:00015B08       const istream_withassign::`vftable'
 0002:00015B0C       const istream_withassign::`vbtable'
 0002:00015B50       long const ios::basefield
 0002:00015B54       long const ios::adjustfield
 0002:00015B58       long const ios::floatfield
 0002:00015B60       const ios::`vftable'
 0002:00015B68       const ofstream::`vftable'
 0002:00015B6C       const ofstream::`vbtable'
 0002:00015B74       int const filebuf::openprot
 0002:00015B78       int const filebuf::sh_none
 0002:00015B7C       int const filebuf::sh_read
 0002:00015B80       int const filebuf::sh_write
 0002:00015B84       int const filebuf::binary
 0002:00015B88       int const filebuf::text
 0002:00015B90       const filebuf::`vftable'
 0002:00015BC0       const streambuf::`vftable'
 0002:00015BF0       const std::length_error::`vftable'
 0002:00015C10       const std::logic_error::`vftable'
 0002:00015C1C       uint const std::basic_string<char,std::char_traits<char>,std::allocator<char>>::npos
 0002:00015C24       const std::out_of_range::`vftable'
 0002:00015C68       const type_info::`vftable'
 0002:00015CAC       const bad_typeid::`vftable'
 0002:00015D30       const bad_cast::`vftable'
 0002:00015DB4       const exception::`vftable'
 0002:00015E88       ___lookuptable
 0002:00015EFC       ___dnames
 0002:00015F14       ___mnames
 0002:00015F48       __DEFAULT_CW_in_mem
 0002:00015F4A       __pi_by_2_to_61
 0002:0005BAF8       __IMPORT_DESCRIPTOR_SHW32
 0002:0005BB0C       __IMPORT_DESCRIPTOR_mss32
 0002:0005BB20       __IMPORT_DESCRIPTOR_COMCTL32
 0002:0005BB34       __IMPORT_DESCRIPTOR_WINMM
 0002:0005BB48       __IMPORT_DESCRIPTOR_WSOCK32
 0002:0005BB5C       __IMPORT_DESCRIPTOR_BugslayerUtil
 0002:0005BB70       __IMPORT_DESCRIPTOR_KERNEL32
 0002:0005BB84       __IMPORT_DESCRIPTOR_USER32
 0002:0005BB98       __IMPORT_DESCRIPTOR_GDI32
 0002:0005BBAC       __IMPORT_DESCRIPTOR_ADVAPI32
 0002:0005BBC0       __IMPORT_DESCRIPTOR_ole32
 0002:0005BBD4       __IMPORT_DESCRIPTOR_binkw32
 0002:0005BBE8       __IMPORT_DESCRIPTOR_DDRAW
 0002:0005BBFC       __IMPORT_DESCRIPTOR_DINPUT
 0002:0005BC10       __IMPORT_DESCRIPTOR_VDFS32G
 0002:0005BC24       __NULL_IMPORT_DESCRIPTOR
 0003:00000000       ___xc_a
 0003:00001BC4       ___xc_z
 0003:00001BC8       ___xi_a
 0003:00001BDC       ___xi_z
 0003:00001BE0       ___xp_a
 0003:00001BE8       ___xp_z
 0003:00001BEC       ___xt_a
 0003:00001BF4       ___xt_z
 0003:00003DC8       cy
 0003:00006EF5       a2addon1
 0003:00007728       aSock
 0003:00007EB1       aNknownNetworkA
 0003:00008FF0       uchar zCPlayerInfo::next_id
 0003:000091AC       char spaceChar
 0003:0000B6E4       float playTime
 0003:0000BB94       int zCAICamera::bCamChanges
 0003:0000BB9C       int standardTraceFlags
 0003:0000BBA0       short zCAICamera::s_iLookAroundSgn
 0003:0000C28C       float CAMSPHERE_DIAMETER
 0003:0000E53C       aMl
 0003:0000EBF4       aDmusicMedia
 0003:0000F388       int zCActiveSnd::maxChannels
 0003:0000F38C       float RANGE_SCALE
 0003:0000FB5D       aEvice
 0003:00010828       ulong VideoRGBSize
 0003:0001082C       ulong VideoBSize
 0003:00010830       ulong VideoBMask
 0003:00010834       ulong VideoGPos
 0003:00010838       ulong VideoGSize
 0003:0001083C       ulong VideoGMask
 0003:00010840       ulong VideoRPos
 0003:00010844       ulong VideoRSize
 0003:00010848       ulong VideoRMask
 0003:0001084C       VIDMODE VideoHwModeCur
 0003:00010888       int * vidGotMode
 0003:000108A4       int vidCheckMemory
 0003:000108A8       ulong vidWindowStretch
 0003:000108B0       LARGELOGPAL vidWinPal
 0003:00010CB8       ulong * vidDefSize
 0003:000119A4       int APP_VERSION_MAJOR
 0003:000119A8       int APP_VERSION_MINOR
 0003:000119AC       char * APP_NAME
 0003:000119B0       char * APP_VERSION
 0003:000119B4       char * REG_PROGRAM
 0003:000119B8       char * REG_VERSION
 0003:000119BC       char * REG_COMPANY
 0003:000119C0       char * ENV_NOBROWSERSTRING
 0003:000119C4       char * HFILE_LOG
 0003:000119C8       MENUITEM * ENV_STDMENU
 0003:000119E8       int netEnable
 0003:00011A0C       int winShowMouse
 0003:00011A10       aCouldNotRegist
 0003:00011A30       String
 0003:00011F41       aIcrosoftWindow
 0003:00011F55       aIcrosoftWind_0
 0003:00011F6D       aNUnknownOperat
 0003:000123D1       aRivateInstruct
 0003:00012429       aTackOverflow
 0003:00012465       aIvideByZero
 0003:000124A1       aLlegalOpcode
 0003:000124C5       aAgeFault
 0003:000124F1       aReakpoint
 0003:00012519       aCcessViolation
 0003:00012BB4       int playerLightInt
 0003:00012C90       int zCAIPlayer::s_bShowWeaponTrails
 0003:00013E94       ulong bspCollectCtr
 0003:00013E9C       int zCRayTurboAdmin::s_iPolyTreshold
 0003:000153D8       char const * * zCMgcEigenD::message
 0003:00015658       __unnamed * ChunkNames
 0003:00016264       uchar zCMaterial::s_matUsageDefault
 0003:00016558       int zCMemPoolBase::s_disablePools
 0003:00016D50       int zCModel::s_bSmoothRootNode
 0003:000171F8       int zCModelPrototype::s_autoConvertAnis
 0003:00018E48       int zCParticleFX::s_bAmbientPFXEnabled
 0003:00019328       float zEFFECT_VERT_PERC
 0003:0001932C       int zCProgMeshProto::s_frameCtr
 0003:00019330       int zCProgMeshProto::s_subMeshRenderDir
 0003:00019334       float zCProgMeshProto::s_lodParamStrengthOverride
 0003:00019338       float zCProgMeshProto::s_lodParamStrengthModifier
 0003:000196F8       zTRnd_TexFormatInfo * texFormatInfoList
 0003:00019A00       int zCRenderManager::s_useRendererTNL
 0003:00019A04       int zCRenderManager::s_detailTexturesEnabled
 0003:00019B94       float `CalcAlphaFromDistToPlane(zTPlane const &,zVEC3 const &)'::`2'::ONE_OVER_DETAIL_MAX_DIST
 0003:00019B98       float `CalcAlphaFromDistToPlane(zTPlane const &,zVEC3 const &)'::`2'::DETAIL_MAX_DIST
 0003:00019DB0       int zCSkyControler::s_skyEffectsEnabled
 0003:0001A6AC       char * zTEX_FILE_INTERNAL_COOKIE
 0003:0001AAA8       char zCTexture::s_useDefaultTex
 0003:0001AAA9       char zCTexture::s_globalLoadTextures
 0003:0001AAAC       zTTexScaleSize zCTexture::s_texScaleSize
 0003:0001AAB0       zTTexScaleBPP zCTexture::s_texScaleBPP
 0003:0001AAB4       float zCTexture::s_texRefRAM
 0003:0001AAB8       zCTexture::zTTexFileDesiredBPP zCTexture::s_texRefBPP
 0003:0001AABC       zTRnd_TextureFormat * zCTexture::s_texDesiredBPPDefault
 0003:0001B634       int zCVob::s_renderVobs
 0003:0001B638       int zCVob::s_enableAnimations
 0003:0001CAB8       int zCWorld::s_bFadeOutFarVerts
 0003:0001CABC       int zCWorld::s_bWaveAnisEnabled
 0003:0001CAC0       int zCWorld::s_bAmbientVobsEnabled
 0003:0001CAC4       int zCWorld::s_bEnvMappingEnabled
 0003:0001CACC       char const * const tocotronic
 0003:0001EF6C       int zCZoneMusic::s_autochange
 0003:0001F2DC       int oCZoneMusic::s_zonetime
 0003:0001F2E0       int oCZoneMusic::s_daytime
 0003:0001F8CC       aTOfSync
 0003:00021078       float `zCRnd_D3D::XD3D_AlphaBlendPoly(zCPolygon *,zCMaterial *)'::`42'::ooLastNumVert
 0003:0002107C       int `zCRnd_D3D::XD3D_AlphaBlendPoly(zCPolygon *,zCMaterial *)'::`42'::lastNumVert
 0003:000210D0       float `zCRnd_D3D::AddAlphaPoly(zCPolygon const *)'::`36'::ooLastNumVert
 0003:000210D4       int `zCRnd_D3D::AddAlphaPoly(zCPolygon const *)'::`36'::lastNumVert
 0003:00021D0C       zTDXTCSupport DXTCSupportSwitch
 0003:000236BC       char const * * oCLogTopic::ms_strSections
 0003:000236C8       char const * * oCLogTopic::ms_strStati
 0003:00024404       oCNpc::oEBloodMode oCNpc::modeBlood
 0003:00025154       float TRAIL_STRIP_SEGMENT_TIME
 0003:000253EC       int ANI_ENABLE_TURN
 0003:000253F0       int INTERPOLATE_MAX_TIME
 0003:000260F4       int oCNpcFocus::s_bHighlightInteractFocus
 0003:000261C0       int oCGame::s_bUseOldControls
 0003:000261C4       float oCGame::s_fUseSpeechReverb
 0003:000261C8       int oCGame::s_bUseOnlineHelp
 0003:000261CC       int oCGame::s_bUsePotionKeys
 0003:000261D0       int oCGame::s_bUseQuickSave
 0003:000261EC       int game_showerror
 0003:0002B460       int oCItem::s_bItemEffectEnabled
 0003:0002B728       int mobNameConv
 0003:0002C110       int oCNpc::ai_baseEnabled
 0003:0002C114       int oCNpc::isEnabledTalkBox
 0003:0002C118       int oCNpc::isEnabledTalkBoxPlayer
 0003:0002C11C       float NPC_ANGRY_TIME
 0003:0002C120       int oCNpc::angle_near
 0003:0002C124       int oCNpc::angle_far_up
 0003:0002C128       int oCNpc::angle_far_side
 0003:0002C12C       int playerPercAssessMagic
 0003:0002C130       int playerPercAssessStopMagic
 0003:0002ECD0       float SPAWN_INSERTRANGE
 0003:0002ECD4       float SPAWN_REMOVERANGE
 0003:0002FC18       int count
 0003:0002FCEC       uchar tree_version
 0003:00030198       int * Op_Prio
 0003:00030868       float zCView::s_fViewTimePerChar
 0003:00030D20       MemInitDefaultPool()
 0003:00030D24       MemFreeDefaultPool()
 0003:00030D28       _MemDefaultPool
 0003:00030D68       _D3DX_FORMATDESC * g_d3dxDdpfSupportedPFs
 0003:0003213C       long ios::x_maxbit
 0003:00032140       int ios::x_curindex
 0003:00032220       __NLG_Destination
 0003:00032230       __fltused
 0003:00032234       __ldused
 0003:00032238       __FPinit
 0003:0003223C       __FPmtinit
 0003:00032240       __FPmtterm
 0003:00032410       aAcos
 0003:00032420       aAsin
 0003:00032430       __half
 0003:00032440       __iob
 0003:000326D0       __aexit_rtn
 0003:000326D4       ___app_type
 0003:000326D8       void * __pMyUnhandledExceptionFilter
 0003:000326E0       ___badioinfo
 0003:00032710       void (*__pInconsistency)(void)
 0003:00032714       __locktable
 0003:00032758       lpCriticalSection
 0003:000327F0       ___tlsindex
 0003:000327F4       __cfltcvt_tab
 0003:0003280C       ___nullstring
 0003:00032810       ___wnullstring
 0003:00032814       __pctype
 0003:00032818       __pwctype
 0003:0003281C       __wctype
 0003:00032A20       ___mb_cur_max
 0003:00032A24       ___decimal_point
 0003:00032A28       ___decimal_point_length
 0003:00032A30       __timezone
 0003:00032A34       __daylight
 0003:00032A38       __dstbias
 0003:00032ABC       __tzname
 0003:00032AE4       __lpdays
 0003:00032B18       __days
 0003:00032B60       __indefinite
 0003:00032B6A       __piby2
 0003:00032B90       __d_inf
 0003:00032B98       __d_ind
 0003:00032BA0       __d_max
 0003:00032BA8       __d_min
 0003:00032BB0       __d_mzero
 0003:00032CB0       __infinity
 0003:00032CBA       __minfinity
 0003:00032CC4       __logemax
 0003:00032CEA       __OP_EXPjmptab
 0003:00032D10       aC_0
 0003:00032D94       aC
 0003:00032E18       ___lc_category
 0003:00032F58       __XcptActTab
 0003:00032FD0       __First_FPE_Indx
 0003:00032FD4       __Num_FPE
 0003:00032FD8       __XcptActTabSize
 0003:00032FDC       __XcptActTabCount
 0003:00032FE0       __amblksiz
 0003:00033078       __HUGE
 0003:000330B0       __matherr_flag
 0003:00033220       ___rgLocInfo
 0003:00033224       a040a
 0003:00033244       a1252
 0003:000336C4       ___rglangidNotDefault
 0003:000336D8       ___rg_country
 0003:00033790       ___rg_language
 0003:00033998       ___old_small_block_heap
 0003:000359BC       ___old_sbh_threshold
 0003:000359C0       ___lc_time_curr
 0003:000359C8       ___lc_time_c
 0003:00035A78       ___lconv_static_decimal
 0003:00035A80       ___lconv_c
 0003:00035AB0       ___lconv
 0003:00035AC0       __pow10pos
 0003:00035C20       __pow10neg
 0003:00035DA8       zCClassDef oCCSManager::classDef
 0003:00035E44       zSTRING const zMENU_SEPARATOR
 0003:00035F90       zCClassDef oCCSPlayer::classDef
 0003:00036030       zCClassDef oCCSProps::classDef
 0003:000360A8       zCClassDef oCCSTrigger::classDef
 0003:00036120       zCClassDef zCCSCutsceneContext::classDef
 0003:0003618C       int zCCSCutsceneContext::playDisabled
 0003:00036190       zCClassDef zCEvMsgCutscene::classDef
 0003:00036208       zCClassDef zCCSBlock::classDef
 0003:00036278       zCClassDef zCCSSyncBlock::classDef
 0003:000362E8       zCClassDef zCCSAtomicBlock::classDef
 0003:00036358       zCClassDef zCCutscene::classDef
 0003:000363D8       zSTRING const CS_MAIN_ROLENAME
 0003:000363EC       zSTRING const CS_PLAYER_ROLENAME
 0003:00036418       zCClassDef zCCSBlockBase::classDef
 0003:00036488       zCClassDef zCCSRole::classDef
 0003:00036500       zCClassDef zCCSLib::classDef
 0003:00036578       zCArray<zSTRING> libSvmModuleList
 0003:00036588       zCClassDef zCCSManager::classDef
 0003:00036600       zCCSPlayer * dbplayer
 0003:00036608       zCClassDef zCCSPlayer::classDef
 0003:00036680       zCClassDef zCCSPoolItem::classDef
 0003:000366F8       zCClassDef zCCSProps::classDef
 0003:00036958       CGameManager * gameMan
 0003:0003695C       zCEngine * zengine
 0003:00036960       hWnd
 0003:00036964       lParam
 0003:00036968       ThreadId
 0003:0003696C       void * hSplashThread
 0003:00036970       HINSTANCE__ * hSplashInstance
 0003:00036B50       int gLogStatistics
 0003:00036BB0       zSTRING const * const PLAYER_INSTANCE
 0003:00036C78       zSTRING const * const PLAYER_INSTANCE_NAME
 0003:00036D18       zSTRING const SAVEGAME_EXT
 0003:00036D48       zCClassDef oCSavegameInfo::classDef
 0003:00036DB4       zSTRING const SAVEGAME_DIR
 0003:00036DC8       zSTRING const SAVEGAME_PIC_FILE
 0003:00036DDC       zSTRING const SAVEGAME_CURRENT_DIR
 0003:00036E04       zSTRING const SAVEGAME_GLOBAL_FILE
 0003:00036E18       zSTRING const SAVEGAME_HEADER_FILE
 0003:00036E48       zCClassDef oCTriggerScript::classDef
 0003:00036F40       zCClassDef oCTriggerChangeLevel::classDef
 0003:00037434       zCBuffer * * zFILE::bufferList
 0003:0003744C       int * zFILE::bufferFlag
 0003:00037468       zSTRING zFILE::s_rootDirString
 0003:0003747C       zSTRING zFILE::s_physPathString
 0003:00037490       zFILE * zFILE::s_virtPath
 0003:00037494       zSTRING zFILE::s_virtPathString
 0003:000374AC       zCCriticalSection * zFILE::s_dirscanCiticalSection
 0003:000374B0       int zFILE::s_numFilesOpen
 0003:000374B4       int zFILE::s_maxFilesOpen
 0003:000374B8       bool zFILE::s_initialized
 0003:000374C4       bool zFILE_VDFS::s_vdfsInitialized
 0003:000374C5       bool zFILE_VDFS::s_physical_first
 0003:000374C8       zCCriticalSection * zFILE_VDFS::s_criticalSection
 0003:000374E0       uint sendSock
 0003:000374E8       uint WM_LOGMSG
 0003:000374F0       zTErrorMessage msg
 0003:0003767C       uint WM_LOGCOMMAND
 0003:00037EDC       zCNetMessageQueue * recvQueue
 0003:00037F0C       zTNetTimeout timeout
 0003:00037F38       zCNetMessageQueue * sendQueue
 0003:00037F6C       zCNetMessage * msgPtr
 0003:00037F88       buf
 0003:0003CF88       int (*connectCallback)(void *)
 0003:0003CF90       zCNet * znet
 0003:0003CF94       void * handle_stream_listen
 0003:0003CF98       void * handle_dgram_listen
 0003:0003CF9C       ushort stateFlag
 0003:0003CFA0       int lockQueues
 0003:000410CC       hObject
 0003:000410E0       zCClassDef zCNetEventManager::classDef
 0003:000411A8       uchar zCNetHost::iter
 0003:000411AC       zCNetHost * zCNetHost::localhost
 0003:000411D0       zCClassDef zCNetManager::classDef
 0003:00041250       zCNetManager * znetman
 0003:000412E8       zCClassDef zCNetVobControl::classDef
 0003:00041380       zSTRING const zOPT_SEC_SOUND
 0003:00041394       zSTRING const ZOPT_GAMEKEY_RIGHT
 0003:000413A8       zSTRING const zOPT_SEC_INTERNAL
 0003:000413BC       zSTRING const ZOPT_GAMEKEY_ACTIONRIGHT
 0003:000413D0       zSTRING const ZOPT_GAMEKEY_SLOW
 0003:000413E4       zSTRING const ZOPT_JOY_ENABLE
 0003:000413F8       zSTRING const zOPT_SEC_FILES
 0003:0004140C       zSTRING const ZOPT_GAMEKEY_LAME_HEAL
 0003:00041424       zSTRING const ZOPT_GAMEKEY_STRAFELEFT
 0003:00041438       zSTRING const ZOPT_LANGUAGE
 0003:0004144C       zSTRING const ZOPT_GAMEKEY_INVENTORY
 0003:00041460       zSTRING const ZOPT_SND_USEREVERB
 0003:00041474       zSTRING const zOPT_SEC_VIDEO
 0003:00041488       zSTRING const zOPT_SEC_KEYS
 0003:0004149C       zSTRING const ZOPT_SND_SFX_VOL
 0003:000414B0       zSTRING const ZOPT_GAMEKEY_SCREEN_LOG
 0003:000414C4       zSTRING const ZOPT_GAMEKEY_SCREEN_MAP
 0003:000414D8       zSTRING const zOPT_SEC_INFO
 0003:000414EC       zSTRING const zOPT_SEC_MUSIC
 0003:00041500       zSTRING const ZOPT_VID_GAMMA
 0003:00041514       zSTRING const zOPT_SEC_PERFORMANCE
 0003:00041528       zSTRING const ZOPT_GAMEKEY_UP
 0003:0004153C       zSTRING const ZOPT_SND_SPEAKERTYPE
 0003:00041550       zSTRING const ZOPT_GAMEKEY_LOCK_TARGET
 0003:00041578       zSTRING const ZOPT_DEF_LANGUAGE
 0003:0004158C       zSTRING const ZOPT_GAMEKEY_LOOK_FP
 0003:000415A0       zSTRING const ZOPT_GAMEKEY_DOWN
 0003:000415C8       zSTRING const ZOPT_GAMEKEY_SMOVE
 0003:000415DC       zSTRING const ZOPT_GAMEKEY_PARADE
 0003:000415F0       zSTRING const zOPT_SEC_GAME
 0003:00041604       zSTRING const ZOPT_SND_SAMPLERATE
 0003:00041618       zSTRING const ZOPT_GAMEKEY_SNEAK
 0003:0004162C       zSTRING const ZOPT_GAMEKEY_WEAPON
 0003:00041640       zSTRING const ZOPT_GAMEKEY_LOOK
 0003:00041654       zSTRING const ZOPT_GAMEKEY_STRAFERIGHT
 0003:00041668       zSTRING const ZOPT_VID_RES
 0003:0004167C       zSTRING const ZOPT_SND_SPEECH_VOL
 0003:00041690       zSTRING const ZOPT_GAMEKEY_LEFT
 0003:000416A4       zSTRING const ZOPT_GAMEKEY_ACTION
 0003:000416B8       zSTRING const ZOPT_GAMEKEY_LAME_POTION
 0003:000416CC       zSTRING const zOPT_SEC_SETTINGS
 0003:000416E0       zSTRING const zOPT_SEC_OPTIONS
 0003:000416F4       zSTRING const ZOPT_GAMEKEY_ACTIONLEFT
 0003:00041708       zSTRING const * const zOPTION_PATHNAMES
 0003:00041910       zSTRING const zOPT_SEC_KEYS_DEFAULT1
 0003:00041924       zSTRING const ZOPT_GAMEKEY_SCREEN_STATUS
 0003:00041938       zSTRING const zOPT_SEC_KEYS_DEFAULT0
 0003:0004194C       zSTRING const ZOPT_GAMEKEY_END
 0003:00041960       zSTRING const ZOPT_SND_MUSIC_VOL
 0003:00041974       zSTRING const ZOPT_SND_3DPROV
 0003:00041988       zCOption * zoptions
 0003:0004198C       zCOption * zgameoptions
 0003:00041998       zCList<zCPlayerGroup> zCPlayerGroup::group_list
 0003:000419B4       zCPlayerGroup zCPlayerGroup::allPlayerGroup
 0003:000419F4       zCArray<int> zCPlayerInfo::free_ids
 0003:00041A28       zCPlayerInfo * zCPlayerInfo::activePlayer
 0003:00041A34       zCScanDir dirScanner
 0003:00041C70       zSTRING const zSTR_EMPTY
 0003:00041C84       zSTRING const zSTR_SKIP
 0003:00041C98       zCMemPool<zSTRING> zSTRING::s_MemPool
 0003:00041CD0       zERROR zerr
 0003:00041D0C       int BS_GPLUS
 0003:00042428       int s_bCheckRoutines
 0003:0004242C       int freeLook
 0003:00042520       zCClassDef oCSpell::classDef
 0003:00042634       zCArray<oCVisualFX> s_worldVisFXList
 0003:00042658       zCClassDef oCVisualFX::classDef
 0003:000426EC       zCParser * oCVisualFX::fxParser
 0003:000427C8       zVEC3 lastTrjPos
 0003:000427E0       int drawBBox
 0003:000427E4       int drawTrj
 0003:000427E8       int showTarget
 0003:000427EC       oCVisualFX * oCVisualFX::actFX
 0003:000427F8       zCClassDef oCVisFX_MultiTarget::classDef
 0003:00042868       zSTRING CamModMobLadder
 0003:0004287C       zSTRING CamModDialog
 0003:00042894       zSTRING CamModLookBack
 0003:000428AC       zSTRING CamModDeath
 0003:000428C0       zSTRING CamModFall
 0003:000428D4       zSTRING CamModRangedShrt
 0003:000428E8       zSTRING CamModDive
 0003:000428FC       zSTRING CamModShoulder
 0003:00042910       zSTRING CamModRanged
 0003:00042924       zSTRING CamModInventory
 0003:00042938       zSTRING CamModThrow
 0003:00042950       zCClassDef zCAICamera::classDef
 0003:000429BC       zCArray<zCCSCamera *> zCAICamera::dialogCamList
 0003:000429C8       zSTRING CamModJump
 0003:000429DC       zSTRING CamModJumpUp
 0003:000429F0       zSTRING CamModNormal
 0003:00042A04       zSTRING CamModLook
 0003:00042A18       zSTRING CamModFirstPerson
 0003:00042A2C       zSTRING CamModMelee
 0003:00042A40       zSTRING CamModRun
 0003:00042A54       zSTRING CamModFocus
 0003:00042A68       zSTRING CamModMagic
 0003:00042A7C       zSTRING CamModClimb
 0003:00042A90       zSTRING CamModSwim
 0003:00042AA4       zSTRING CamModMeleeMult
 0003:00042AB8       zCAICamera * zCAICamera::current
 0003:00042ABC       int zCAICamera::bCreated
 0003:00042AC0       float zCAICamera::lookingCamLastAzi
 0003:00042AC4       int zCAICamera::lookingCamAziGoalReached
 0003:00042DDC       zTPoseFailReason failReasonDummy
 0003:00042E40       float numSCsSearched
 0003:00042E44       float numSCsCached
 0003:00042E4C       zCVob * speaker
 0003:00042E50       zCVob * listener
 0003:00044F38       zCClassDef zCCSCamera_EventMsg::classDef
 0003:00044FB8       zCClassDef zCCSCamera::classDef
 0003:00045028       zCClassDef zCCamTrj_KeyFrame::classDef
 0003:00045098       zCClassDef zCCSCamera_EventMsgActivate::classDef
 0003:000451B0       int zCCSCamera::playing
 0003:000451B4       int zCCSCamera::draw
 0003:000451B8       int zCCSCamera::evaluateAvgFPS
 0003:000451BC       zCView * messages
 0003:000451C4       int showDebug
 0003:000451C8       zCArray<void (*)(void)> zCExceptionHandler::ExceptionReleaseCallbackList
 0003:00045508       char * zCExceptionHandler::m_szLogFileName
 0003:0004560C       long (*zCExceptionHandler::m_previousFilter)(_EXCEPTION_POINTERS *)
 0003:00045610       zCArray<void (*)(EXCEPTION_DESCR *)> zCExceptionHandler::ExceptionInfoCallbackList
 0003:0004561C       zCExceptionHandler g_zCExceptionHandler
 0003:00045620       void * zCExceptionHandler::m_hReportFile
 0003:00045628       int zCExceptionHandler::isActive
 0003:00045640       zCArray<zSCtrlValue> zCInput::values
 0003:00045650       zCInput * zinput
 0003:00045678       bool * keyevent
 0003:000458B8       bool * keytoggle
 0003:00045B10       bool * keyRepeatEnabled
 0003:00045D50       zCArray<int> keybuffer
 0003:00045D60       IDirectInput7A * lpDInput
 0003:00045D64       IDirectInputDevice7A * lpDIKeyboard
 0003:00045DF0       zMAT4 zCPose::tmpMat
 0003:00045E38       zCArray<zCMenu *> zCMenu::activeList
 0003:00045E44       zCArraySort<zCMenu *> zCMenu::menuList
 0003:00045E54       zSTRING DEF_DAT_FILE
 0003:00045E68       zCParser * zCMenu::menuParser
 0003:00045E6C       zCWorld * zCMenu::world
 0003:00045E70       zCCamera * zCMenu::camera
 0003:00045E74       zCTimer * zCMenu::timer
 0003:00045E78       int zCMenu::inGameMenu
 0003:00045E7C       void (*zCMenu::EnterCallback)(void)
 0003:00045E80       void (*zCMenu::LeaveCallback)(void)
 0003:00045E84       void (*zCMenu::FrameCallback)(void)
 0003:00045E88       zCSoundFX * zCMenu::browseSnd
 0003:00045E8C       zCSoundFX * zCMenu::selectSnd
 0003:00045E90       zCSoundFX * zCMenu::escSnd
 0003:00045E94       zCVob * zCMenu::soundSourceVob
 0003:00045EA0       int __lastSelection
 0003:00045EFC       zCArraySort<zCMenuItem *> zCMenuItem::itemList
 0003:00045F0C       zCMenuItem * zCMenuItem::tmp
 0003:00045F14       zCMusicSystem * zmusic
 0003:00045F18       int zCMusicSystem::s_musicSystemDisabled
 0003:00045F38       ushort * wlpszFileName
 0003:00046148       IDirectMusicBand * activeBand
 0003:0004614C       IDirectMusicLoader * g_pLoader
 0003:00046150       IDirectMusicPerformance * g_pPerformance
 0003:00046154       IDirectMusicPort * g_pPort
 0003:00046158       IDirectMusicComposer * g_pComposer
 0003:0004615C       IDirectMusicStyle * g_pStyle
 0003:00046160       IDirectMusicSegment * g_pSeg
 0003:00046198       zCArraySort<zCActiveSnd *> zCActiveSnd::activeSndList
 0003:000462E8       zCDrvProperties_MSS zCSndSys_MSS::prefs
 0003:00046930       zCSndDebugCallback sndDebugCallback
 0003:00046A20       zCArray<zCActiveSnd *> zCActiveSnd::preAllocedSndList
 0003:00046A54       zCActiveSnd * zCActiveSnd::nextFreeSnd
 0003:00046A58       ulong zCActiveSnd::lastHandle
 0003:00046A5C       int zCActiveSnd::autoUpdate3D
 0003:00046A98       long VideoBPPShift
 0003:00046BA0       long VideoBPP
 0003:00046BA4       int (** vidBlitFunc)(BLIT_CMD *)
 0003:00046BE0       long VideoH
 0003:00046BE4       long VideoW
 0003:00047378       long VideoPitch
 0003:00047484       uchar * Video
 0003:00047890       ulong VideoBPos
 0003:00047894       VIDMODE VideoModeCur
 0003:000478D0       int vidDontShowErrors
 0003:000478D4       int vidOnlyFullScreen
 0003:000478D8       int vidHideMenu
 0003:000478DC       int vidDisableMenuKeys
 0003:000478E0       int vidDisableAltEnter
 0003:000478E4       int vidAllowMinimizeWindow
 0003:000478E8       int vidResetPaletteOnRestore
 0003:000478EC       ulong vidFreeStretch
 0003:000478F0       ulong vidShowBitDepths
 0003:000478F4       ulong vidEnableBitDepths
 0003:000478F8       int (*winSetVideoMode)(void *)
 0003:000478FC       int (*vidModeFilter)(void *)
 0003:00047908       int vidSetModeCalled
 0003:0004790C       ulong vidBusyMode
 0003:00047910       VIDMODE * vidpModes
 0003:00047914       int vidnModes
 0003:00047D2C       char * sysCommandLine
 0003:00047D30       HHOOK__ * g_lLowLevelHook
 0003:00047D34       ulong winMainThreadID
 0003:00047ED0       void * winMainThread
 0003:00047ED8       Filename
 0003:00047FE0       Frequency
 0003:000480E8       __unnamed iwPos
 0003:000480EC       Y
 0003:000480F0       nWidth
 0003:000480F4       nHeight
 0003:00048168       hhk
 0003:00048210       uBytes
 0003:00048214       int APP_VERSION_POINT
 0003:00048218       int APP_VERSION_INT
 0003:00048220       HINSTANCE__ * hInstApp
 0003:00048224       HDC__ * dcScreen
 0003:00048228       HICON__ * hIconApp
 0003:0004822C       HWND__ * hWndApp
 0003:00048230       int sysExiting
 0003:00048234       int sysStopProcessingMessages
 0003:00048238       int winNT
 0003:0004823C       int winBPP
 0003:00048240       ulong sysTimeGap
 0003:00048244       int winCursorShowState
 0003:00048250       hKey
 0003:00048254       hMenu
 0003:00048280       int usrSafeMode
 0003:00048284       int usrWantPause
 0003:00048288       int usrWantQuit
 0003:0004828C       int winMinimized
 0003:000482F8       zCLineCache zlineCache
 0003:00048304       zCMemPool<zCVertex> zCVertex::s_MemPool
 0003:00048320       zCVolatileMemory<zCVertexTransform> zCVertexTransform::s_MemMan
 0003:00048344       zTEngineStats zengineStats
 0003:00048368       zCMemPool<zCVertFeature> zCVertFeature::s_MemPool
 0003:00048384       zCMemPool<zCPortal> zCPortal::s_MemPool
 0003:000483A0       zCMemPool<zCPolygon> zCPolygon::s_MemPool
 0003:000483C8       zCClassDef zCAIBase::classDef
 0003:00048438       zCClassDef zCAIBaseSound::classDef
 0003:00048538       zCClassDef zCAIPlayer::classDef
 0003:000485E8       zMAT4 zMAT4::s_identity
 0003:00048628       zMAT3 zMAT3::s_identity
 0003:00048658       zCClassDef zCArchiver::classDef
 0003:0004872C       zCArchiverFactory zarcFactory
 0003:000487B8       zCClassDef zCArchiverBinSafe::classDef
 0003:00048898       zSTRING zCArchiver::stringEOL
 0003:000488B0       zCClassDef zCArchiverGeneric::classDef
 0003:00048944       int bspFrameCtr
 0003:0004895C       int tr_numLeafVobs
 0003:00048960       zCArray<zTBBox2D> zCBspSector::s_activeOutdoorPortals
 0003:0004898C       int tr_numLeafPolys
 0003:000489A8       int zCBspSector::s_startPointOutdoor
 0003:000489E4       int zCBspSector::s_sectorsRendered
 0003:000489EC       int numDrawnFarPolys
 0003:000489F0       int tr_numLeafs
 0003:000489F4       int zCBspSector::s_outdoorPortal
 0003:000489F8       zCArray<zCBspSector *> zCBspSector::s_activeSectorList
 0003:00048A40       zCRndAlphaSortObject_Vob * zCRndAlphaSortObject_Vob::s_alphaVobList
 0003:00049E40       int tr_numLeafVobsSkip
 0003:0004BE90       int numFoundFarPolys
 0003:0004BE98       int g_bIsInCompileLightMode
 0003:0004BEA0       int zCRndAlphaSortObject_Vob::s_currentAlphaVob
 0003:0004BEA8       zCMaterial * zCPortal::portalDummyMaterial
 0003:0004BEAC       int zCBspTree::s_showPortals
 0003:0004BEB0       int zCBspTree::s_renderAllPortals
 0003:0004BF08       zMAT4 zCOBBox3D::trafoB2ToThis
 0003:0004BF88       zVEC3 zCCamera::activeCamPos
 0003:0004BF94       zCCamera * zCCamera::activeCam
 0003:0004BFA8       zCCollisionReport * zCCollisionDetector::s_aoCollReportList
 0003:0004C2E8       ulong zCCollisionDetector::s_iCollisionDetectorFrameCtr
 0003:0004C2EC       int zCCollisionDetector::s_iCurrentCollReport
 0003:0004C2F4       zCCollisionObjectDef zCCollisionObject::s_oCollObjClass
 0003:0004C304       zCArray<zCCollisionObjectDef *> * zCCollisionObjectDef::s_aoCollObjClassList
 0003:0004C314       zCCollisionObjectDef zCCollObjectUndef::s_oCollObjClass
 0003:0004C320       zCCollisionObjectDef zCCollObjectPoint::s_oCollObjClass
 0003:0004C32C       zCCollisionObjectDef zCCollObjectBoxPassThrough::s_oCollObjClass
 0003:0004C338       zCCollisionObjectDef zCCollObjectComplex::s_oCollObjClass
 0003:0004C344       zCCollisionObjectDef zCCollObjectBoxBlocker::s_oCollObjClass
 0003:0004C350       zCCollisionObjectDef zCCollObjectLevelPolys::s_oCollObjClass
 0003:0004C35C       zCCollisionObjectDef zCCollObjectCharacter::s_oCollObjClass
 0003:0004C368       zCCollisionObjectDef zCCollObjectProjectile::s_oCollObjClass
 0003:0004C37C       zCMemPoolBase s_TreePool
 0003:0004C398       zCMemPoolBase s_ListPool
 0003:0004C3B4       zCMemPoolBase s_ListSortPool
 0003:0004C3D4       zCMemPool<zCConvexCollisionCache> zCConvexCollisionCache::s_MemPool
 0003:0004C448       zCConvexPrimitiveUnitSphere zCConvexPrimitiveUnitSphere::s_unitSphere
 0003:0004C4B0       zCClassDef zCDecal::classDef
 0003:0004C538       zCMesh * zCDecal::decalMesh1Sided
 0003:0004C53C       zCMesh * zCDecal::decalMesh2Sided
 0003:0004C544       int zCMgcEigenD::verbose
 0003:0004C548       uint zCMgcEigenD::error
 0003:0004C558       zCFFT zCFFT::s_fftSlow
 0003:0004C574       zCFFT zCFFT::s_fftFast
 0003:0004C5A0       zCFFT zCFFT::s_fft
 0003:0004C5F8       zCClassDef zCLensFlareFX::classDef
 0003:0004C664       zCMesh * zCLensFlareFX::s_lensFlareMesh
 0003:0004C668       zCMesh * zCLensFlareFX::s_coronaMesh
 0003:0004C66C       zCMesh * zCLensFlareFX::s_glowMesh
 0003:0004C708       zCClassDef zCMaterial::classDef
 0003:0004C774       ulong zCTexAniCtrl::masterFrameCtr
 0003:0004C778       zCMallocGeneric zmalloc
 0003:0004C780       char const * const zCMemPoolBase::s_className
 0003:0004C784       char const * const zCMemPoolBase::s_fileName
 0003:0004C788       int zCMemPoolBase::s_line
 0003:0004C7B8       zCArraySort<zCVertex *> zCMesh::s_vertexCache
 0003:0004C7C8       zCClassDef zCMesh::classDef
 0003:0004C860       int zCMesh::s_numMeshes
 0003:0004C864       zCMesh * zCMesh::s_meshRoot
 0003:0004C868       int zCMesh::s_autoConvertMeshes
 0003:0004C86C       int zCMesh::s_usesVertexCache
 0003:0004C870       int s_bAddVobsToMesh
 0003:0004C898       zCClassDef zCModelAni::classDef
 0003:0004C904       zSTRING const zMDL_NODE_NAME_L_HAND
 0003:0004C920       zCClassDef zCModel::classDef
 0003:0004C9B4       zSTRING const zMDL_NODE_NAME_R_HAND
 0003:0004C9C8       zSTRING const zMDL_NODE_NAME_R_FOOT
 0003:0004C9DC       zSTRING const zMDL_NODE_NAME_FOOTSTEPS
 0003:0004C9F4       zSTRING const zMDL_NODE_NAME_BIP_PREFIX
 0003:0004CA08       zSTRING const zMDL_NODE_NAME_HEAD
 0003:0004CA20       int * zCModel::s_iNumSoftSkinPoly
 0003:0004CA70       zSTRING const zMDL_NODE_NAME_L_FOOT
 0003:0004CA84       int zCModel::s_drawSkeleton
 0003:0004CAAC       float __unnamed::samplePosScaler
 0003:0004CB38       zCClassDef zCModelMeshLib::classDef
 0003:0004CBAC       float __unnamed::samplePosRangeMin
 0003:0004CBE8       int zCModelPrototype::s_ignoreAnis
 0003:0004CBEC       int zCModelPrototype::s_autoConvertMeshes
 0003:0004CBF0       zCModelPrototype * zCModelPrototype::s_modelRoot
 0003:0004CC00       zCClassDef zCMorphMesh::classDef
 0003:0004CCC4       zCMorphMeshProto * zCMorphMeshProto::morphRoot
 0003:0004CCC8       int zCMorphMeshProto::autoConvertBinaryFile
 0003:0004CCD8       zCClassDef zCObject::classDef
 0003:0004CD48       zCClassDef zCObjectFactory::classDef
 0003:0004CDE0       zCArraySort<zCClassDef *> * zCClassDef::classDefList
 0003:0004CDE4       int zCClassDef::startupFinished
 0003:0004CDE8       zCClassDef * zCClassDef::classDefSearchDummy
 0003:0004CDF0       zCObjectFactory * zfactory
 0003:0004CE0C       zCArraySort<zCParticleEmitter *> zCParticleFX::s_emitterPresetList
 0003:0004CE20       zCParticleEmitter zCParticleFX::s_emitterDummyDefault
 0003:0004D1A8       zCClassDef zCParticleFX::classDef
 0003:0004D214       zCParticleFX::zCStaticPfxList zCParticleFX::s_pfxList
 0003:0004D220       int zCParticleFX::s_globNumPart
 0003:0004D224       zSParticle * zCParticleFX::s_globPartList
 0003:0004D228       zSParticle * zCParticleFX::s_globFreePart
 0003:0004D22C       zCMesh * zCParticleFX::s_partMeshTri
 0003:0004D230       zCMesh * zCParticleFX::s_partMeshQuad
 0003:0004D234       zCParser * zCParticleFX::s_pfxParser
 0003:0004D238       int zCParticleFX::s_showDebugInfo
 0003:0004D250       zCVertex * * zCPolygon::s_vertListScene
 0003:0005D270       zCVertFeature * zCPolygon::s_clipFeatScene
 0003:00095334       int zCPolygon::s_numClipFeatScene
 0003:00095338       zCVertex * zCPolygon::s_clipVertScene
 0003:000BD338       int zCPolygon::s_numClipVertScene
 0003:000BD33C       zCArraySort<zCPolygon::zSFeatureSavedValues> zCPolygon::morphedFeatureList
 0003:000BD34C       int zCPolygon::s_numFeatListScene
 0003:000BD350       zCVertFeature * * zCPolygon::s_featListScene
 0003:000CD3F8       int zCPolygon::s_numVertListScene
 0003:000CD3FC       zCArraySort<zCPolygon::zSVertexSavedValues> zCPolygon::morphedVerticesList_Wall
 0003:000CD40C       zCArray<zCPolygon::zSPolySavedValues> zCPolygon::morphedPolysSavedValuesList
 0003:000CD418       zCArraySort<zCPolygon::zSVertexSavedValues> zCPolygon::morphedVerticesList_Height
 0003:000CD4D0       zCVertex * * zCPolygon::s_actClipVert
 0003:000CD4D4       int zCPolygon::s_actNumClipVert
 0003:000CD4F0       zCClassDef zCPolyStrip::classDef
 0003:000D0A10       ushort * zCProgMeshProto::s_wedgeRemap
 0003:000D2A10       zVEC3 * zCProgMeshProto::s_posCacheListLOD
 0003:000DEA78       zVEC3 * zCProgMeshProto::s_posCacheList
 0003:000E4AA0       zCClassDef zCMeshSoftSkin::classDef
 0003:000E4B10       zVEC3 * zCProgMeshProto::s_posNormalCSList
 0003:000EAB10       int * zCProgMeshProto::s_posCacheListLODIndices
 0003:000F6B10       zCArray<ushort> zCProgMeshProto::s_workIndexList
 0003:000F6B48       zCClassDef zCProgMeshProto::classDef
 0003:000F6BE4       int s_morphedVerts
 0003:000F6BE8       int zCProgMeshProto::s_autoSubdivEnabled
 0003:000F6BEC       ulong zCProgMeshProto::s_classCtorCtr
 0003:000F6BF0       int zCProgMeshProto::s_posCacheCount
 0003:000F6BF4       int zCProgMeshProto::s_posCacheCountLOD
 0003:000F6BF8       int zCProgMeshProto::s_posCacheIndex
 0003:000F6C04       int zCProgMeshProto::s_markMeshMaterials
 0003:000F6C08       zCVertexBufferDyn * zCProgMeshProto::s_vertBufferColor
 0003:000F6C0C       zCVertexBufferDyn * zCProgMeshProto::s_vertBufferNormal
 0003:000F6C28       zCClassDef zCQuadMark::classDef
 0003:000F6C9C       zVEC3 zCRayCache::s_start
 0003:000F6CA8       zVEC3 zCRayCache::s_stop
 0003:000F6E78       zCRayCache * zCRayCache::s_anchor
 0003:000F6E7C       zCRayCacheElement * zCRayCache::s_current
 0003:000F6F08       zCRenderer * zrenderer
 0003:000F6F14       zCMemPool<zCDynVobLightCacheElement> zCDynVobLightCacheElement::s_MemPool
 0003:000F6F78       zCArray<zCPolygon *> zCRndAlphaSortObject_WorldPoly::s_polyList
 0003:000F6F88       zCShaderStage * zCRenderManager::s_shaderStageList
 0003:000F9F88       zCShader * zCRenderManager::s_shaderList
 0003:000FA8B0       zCRndAlphaSortObject_WorldPoly * zCRndAlphaSortObject_WorldPoly::s_alphaWorldPolyList
 0003:0010EA44       zCRenderManager zrenderMan
 0003:0010EA70       int zCRndAlphaSortObject_WorldPoly::s_currentAlphaWorldPoly
 0003:0010EA74       int zCRndAlphaSortObject_WorldPoly::s_lastPolyIndex
 0003:0010EA78       zCShader * zCRndAlphaSortObject_WorldPoly::s_lastShader
 0003:0010EA7C       int zCRndAlphaSortObject_WorldPoly::s_polysRendered
 0003:0010EA84       int zCRenderManager::s_currentShader
 0003:0010EA88       int zCRenderManager::s_currentShaderStage
 0003:0010EA8C       zCVertexBufferDyn2 * zCRenderManager::s_vertBufferDynTex1
 0003:0010EA90       zCVertexBufferDyn2 * zCRenderManager::s_vertBufferDynTex2
 0003:0010EA94       zCVertexBufferDyn2 * zCRenderManager::s_vertBufferDynTex2Normal
 0003:0010EAC0       zCClassDef zCResource::classDef
 0003:0010EB30       zCResourceManager * zresMan
 0003:0010EB40       zCClassDef zCSkyControler::classDef
 0003:0010EBB0       zCClassDef zCSkyControler_Mid::classDef
 0003:0010EC20       zCClassDef zCSkyControler_Indoor::classDef
 0003:0010EC8C       zCSkyControler * zCSkyControler::s_activeSkyControler
 0003:0010ECD8       zCClassDef zCSkyControler_Outdoor::classDef
 0003:0010EDC0       zCClassDef zCSoundFX::classDef
 0003:0010F03C       zCSoundSystem * zsound
 0003:0010F04C       zCSoundManager::zTScriptSoundData zCSoundManager::scriptSoundData
 0003:0010F088       zSTRING zCSoundManager::mediumIDList
 0003:0010F09C       zSTRING zCSoundManager::prefixProto
 0003:0010F0B0       zCSoundManager * zsndMan
 0003:0010F0C0       int zCCacheBase::s_currentFrame
 0003:0010F0C4       zCCacheBase * zCCacheBase::s_anchor
 0003:0010F0C8       zCCacheBase * zCCacheBase::s_run
 0003:0010F0E8       zCClassDef zCTextureFileFormat::classDef
 0003:0010F158       zCClassDef zCTextureFileFormatTGA::classDef
 0003:0010F1D8       zCClassDef zCTextureFileFormatInternal::classDef
 0003:0010F250       zCClassDef zCLightMap::classDef
 0003:0010F2C0       zSTRING zCTexture::zTEX_DEFAULT_TEXTURE_FILE
 0003:0010F2F8       zCClassDef zCTexture::classDef
 0003:0010F368       zSTRING * zCTexture::s_texDesiredBPPSuffix
 0003:0010F3B8       ulong zCTexture::s_texSupportedFormats
 0003:0010F3BC       ulong zCTexture::s_texMaxPixelSize
 0003:0010F3D4       zCTimer ztimer
 0003:0010F3FC       zCFPUControler zfpuControler
 0003:0010F404       ulong zCTimer::s_forcedMaxFrameTime
 0003:0010F410       long * trg_sinFix
 0003:00111410       long * trg_cosFix
 0003:00113410       float * trg_cos
 0003:00115410       float * trg_sin
 0003:0011741C       zCVertexBufferManager zvertexBufferMan
 0003:00117438       zCClassDef zCVertexBuffer::classDef
 0003:001174A8       ulong zCVertexBuffer::s_classCtorCtr
 0003:001174CC       zCArray<zCVisual *> zCVisual::s_visualClassList
 0003:001174D8       zCClassDef zCVob::classDef
 0003:00117548       zCClassDef zCEventCore::classDef
 0003:001175B8       zCClassDef zCVobLevelCompo::classDef
 0003:00117628       zCClassDef zCVobLightPreset::classDef
 0003:00117698       zCClassDef zCEventMessage::classDef
 0003:00117708       zCClassDef zCVisual::classDef
 0003:00117778       zCClassDef zCVisualAnimate::classDef
 0003:001177E4       int zCVob::s_vobAlreadyInMovement
 0003:001177E8       zCMesh * zCVob::s_shadowMesh
 0003:001177EC       ulong zCVob::s_nextFreeID
 0003:001177F0       int zCVob::s_ignoreVisuals
 0003:001177F4       int zCVob::s_showHelperVisuals
 0003:001177F8       zCCollisionDetector * zCVob::s_poCollisionDetector
 0003:001177FC       int zCVobLevelCompo::unarcIgnoreVisuals
 0003:00117800       uint std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Nilrefs
 0003:00117804       std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Node * std::_Tree<zCClassDef *,std::pair<zCClassDef * const,zCVisual *>,std::map<zCClassDef *,zCVisual *,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Kfn,std::less<zCClassDef *>,std::allocator<zCVisual *>>::_Nil
 0003:00117810       zCClassDef zCVobLight::classDef
 0003:0011787C       zCArray<zCVobLightPreset *> zCVobLight::lightPresetList
 0003:00117888       int zCVobLight::renderLightVisuals
 0003:00117890       zCClassDef zCEventMover::classDef
 0003:00117900       zCClassDef zCVobStair::classDef
 0003:00117978       zCClassDef zCTouchAnimate::classDef
 0003:001179E8       zCClassDef zCMoverControler::classDef
 0003:00117A60       zCClassDef zCMover::classDef
 0003:00117AD0       zCClassDef zCEarthquake::classDef
 0003:00117B40       zCClassDef zCPFXControler::classDef
 0003:00117BB0       zCClassDef zCVobLensFlare::classDef
 0003:00117C20       zCClassDef zCEventScreenFX::classDef
 0003:00117C90       zCClassDef zCTriggerBase::classDef
 0003:00117D00       zCClassDef zCTouchDamage::classDef
 0003:00117D70       zCClassDef zCTrigger::classDef
 0003:00117DE0       zCClassDef zCEffect::classDef
 0003:00117E50       zCClassDef zCVobAnimate::classDef
 0003:00117EC0       zCClassDef zCMessageFilter::classDef
 0003:00117F30       zCClassDef zCVobScreenFX::classDef
 0003:00117FA0       zCClassDef zCEventCommon::classDef
 0003:00118010       zCClassDef zCTriggerUntouch::classDef
 0003:00118080       zCClassDef zCTriggerTeleport::classDef
 0003:001180F0       zCClassDef zCCodeMaster::classDef
 0003:00118160       zCClassDef zCTriggerList::classDef
 0003:001181D0       zCClassDef zCTouchAnimateSound::classDef
 0003:00118240       zCClassDef zCTriggerWorldStart::classDef
 0003:0011835C       zCWorld::zTWorldLoadMode zCWorld::s_worldLoadMode
 0003:00118364       zCWorld::zTWorldLoadMergeMode zCWorld::s_worldMergeMode
 0003:00118378       zSTRING s_worldFileName
 0003:0011838C       zCWorld::zTWorldSaveMode zCWorld::s_worldSaveMode
 0003:001183A0       zCClassDef zCWorld::classDef
 0003:00118420       int zCWorld::showTextureStats
 0003:00118424       int zCWorld::s_bAlternateRenderOrder
 0003:001184C8       zCClassDef zCVobSound::classDef
 0003:00118538       zCClassDef zCZoneZFog::classDef
 0003:001185A8       zCClassDef zCZone::classDef
 0003:00118618       zCClassDef zCZoneZFogDefault::classDef
 0003:00118684       zCBBox3DSorterBase * zCBBox3DSorterBase::s_currentSorter
 0003:00118688       zCClassDef zCVobSoundDaytime::classDef
 0003:001186F4       int zCBBox3DSorterBase::s_currentDimension
 0003:001186F8       zCClassDef zCZoneReverbDefault::classDef
 0003:00118768       zCClassDef zCZoneVobFarPlaneDefault::classDef
 0003:001187D8       zCClassDef zCZoneReverb::classDef
 0003:00118848       zCClassDef zCZoneMusic::classDef
 0003:001188B8       zCClassDef zCZoneVobFarPlane::classDef
 0003:00118924       int zCZoneMusic::s_canruleautochange
 0003:00118938       zCClassDef oCZoneMusicDefault::classDef
 0003:001189B0       zCClassDef oCZoneMusic::classDef
 0003:00118A1C       long oCZoneMusic::s_lastzonechange
 0003:00118A20       oHEROSTATUS oCZoneMusic::s_herostatus
 0003:00118A24       oCZoneMusic * oCZoneMusic::s_musiczone
 0003:00118A28       oCZoneMusic * oCZoneMusic::s_oldmusiczone
 0003:00118A38       zCClassDef zCEventMusicControler::classDef
 0003:00118AA8       zCClassDef zCMusicControler::classDef
 0003:00118B18       int * dxDeviceModeNum
 0003:00118B30       dxDEVICE * dxDevice
 0003:00125630       zD3DTEX * tex
 0003:00145630       ulong dxDeviceNumber
 0003:00145638       _DDPIXELFORMAT * pflist
 0003:00145A38       ulong dxSelectDevice
 0003:00145A3C       ulong dxDeviceNum
 0003:00145A40       ulong dxDeviceGUIDflag
 0003:00145A48       tagDDDEVICEIDENTIFIER2 dddi
 0003:00146A78       _GUID dxDeviceGUID
 0003:00146A88       int * supportDXTC
 0003:00146FE8       zCSurfaceCache_D3D::zD3D_SlotHeader * * zCSurfaceCache_D3D::xsc_listofsurfaces
 0003:00147240       zCSurfaceCache_D3D global_surfaceCache
 0003:0016FA48       zCDXTCCache_D3D global_DXTCCache
 0003:001709E0       zTRnd_PolyDrawMode global_PolyDrawMode
 0003:001709E8       ID3DXContext * zCRnd_D3D::xd3d_pd3dx
 0003:001709EC       IDirectDraw7 * zCRnd_D3D::xd3d_pdd7
 0003:001709F0       IDirect3D7 * zCRnd_D3D::xd3d_pd3d7
 0003:001709F4       IDirect3DDevice7 * zCRnd_D3D::xd3d_pd3dDevice7
 0003:001709F8       int zCRnd_D3D::xd3d_dd7inuse
 0003:001709FC       int zCRnd_D3D::xd3d_palsupp
 0003:00170A00       ulong zCRnd_D3D::xd3d_actFrameNumber
 0003:00170A04       zCVertexBufferDyn * zD3D_alphaPoly::vertexbufferdyn
 0003:00170A08       zCVertexBuffer * zD3D_alphaPoly::vertexbuffer
 0003:00170A0C       int zD3D_alphaPoly::locked
 0003:00170A10       ulong zD3D_alphaPoly::startvertex
 0003:00170A14       ulong zD3D_alphaPoly::actvertex
 0003:00170A18       int zD3D_alphaPoly::numberofvertices
 0003:00170A1C       int zD3D_alphaPoly::actnov
 0003:00170A20       int zCSurfaceCache_D3D::xsc_listposition
 0003:00170A24       bool `zCRnd_D3D::XD3D_AlphaBlendPoly(zCPolygon *,zCMaterial *)'::`9'::ignore
 0003:00170A3C       zCArray<zCVertexBuffer_D3D *> zCVertexBuffer_D3D::xvb_vertexbufferList
 0003:00170A5C       int ImageSize
 0003:00170A60       int PalSize
 0003:00170A64       ushort * Qadd
 0003:00170A68       uchar * TrueColorPic
 0003:0022026C       zCCollisionObjectDef oCCollObjectCharacter::s_oCollObjClass
 0003:0022031C       int zCAccount::s_actCounter
 0003:0022060C       int oCNpc::isEnabledDamageDebug
 0003:00220698       zSTRING * oCNpc::FightAIInstances
 0003:00220B98       zCClassDef oCViewDialogInventory::classDef
 0003:00220C10       zCClassDef oCViewDialogItem::classDef
 0003:00220C88       zCClassDef oCViewDialogItemContainer::classDef
 0003:00220D90       zCClassDef oCViewDialogStealContainer::classDef
 0003:00220E80       zCClassDef oCViewDialogTrade::classDef
 0003:00221138       zCClassDef zCViewDialog::classDef
 0003:002211B0       zCClassDef zCViewDialogChoice::classDef
 0003:00221228       zCClassDef zCViewDraw::classDef
 0003:002212A8       zCClassDef zCViewFX::classDef
 0003:00221320       zCClassDef zCViewObject::classDef
 0003:00221398       zCClassDef zCViewPrint::classDef
 0003:00221468       zCClassDef oCAIHuman::classDef
 0003:002214D8       zCClassDef oCAIHuman_Stand::classDef
 0003:00221560       zSTRING oCAIHuman::Cam_Run
 0003:00221578       zCClassDef oCAICamera::classDef
 0003:002215E4       zSTRING oCAIHuman::Cam_Fight
 0003:002215F8       zSTRING oCAIHuman::Cam_Normal
 0003:0022167C       zSTRING curCamMode
 0003:00221720       zCClassDef oCAIVobMove::classDef
 0003:00221790       zCClassDef oCAIArrowBase::classDef
 0003:00221840       zCClassDef oCAIDrop::classDef
 0003:002218C0       zCClassDef oCAIArrow::classDef
 0003:00221940       zCClassDef oCAISound::classDef
 0003:002219D8       zCClassDef oCAIVobMoveTorch::classDef
 0003:00221AC0       zSTRING const ANI_EYEBLINK
 0003:00221B38       zCClassDef oCAniCtrl_Human::classDef
 0003:00221BA8       oTGilValues TGilValues
 0003:002243E0       int ANI_ADD_PARADE
 0003:002243E4       int ANI_ADD_STEPFORWARD
 0003:002243E8       int ANI_ADD_STEPBACK
 0003:002243EC       int ANI_ADD_HITSTEP
 0003:002243F0       int ANI_ADD_STUMBLE
 0003:002243F4       int ANI_ADD_FALLEN
 0003:00224468       zCOLOR COLOR_NO
 0003:0022449C       zCOLOR COLOR_YES
 0003:002244F0       oCItem * offer
 0003:002245D0       oCDoc * document
 0003:002245D4       zCView * oCDoc::posView
 0003:00224680       zSTRING * focusnames
 0003:002246F8       oCNpcFocus * * oCNpcFocus::focuslist
 0003:00224738       oCNpcFocus * oCNpcFocus::focus
 0003:0022473C       int oCNpcFocus::s_iHightlightMeleeFocus
 0003:00224740       oCVisualFX * oCNpcFocus::highLightFX
 0003:00224744       int oCNpcFocus::isHighLighted
 0003:00224840       zVEC3 game_pos
 0003:00224884       oCGame * ogame
 0003:0022488C       oCParticleControl * pfxc
 0003:00224890       int game_testmode
 0003:00224894       int game_con
 0003:00224898       zCConsole * game_species_con
 0003:0022489C       zCConsole * game_fight_con
 0003:002248A0       zCConsole * edit_con
 0003:002248A4       zCConsole * game_cam_con
 0003:002248A8       zCConsole * game_aiConsole
 0003:00224A80       oCNpc * oldSelfNpc
 0003:00224A84       oCNpc * oldOtherNpc
 0003:00224A88       oCNpc * oldVictimNpc
 0003:00224DD8       zSTRING infoClass
 0003:00224E64       int oCInfoManager::size_checked
 0003:00224FD4       zCList<oCItemContainer> s_openContainers
 0003:00224FF4       zCList<oCItemContainer> oCItemContainer::contList
 0003:002250F0       int oCItemContainer::gfx_loaded
 0003:002250F4       zCGfx * oCItemContainer::gfx_cat
 0003:002250F8       zCGfx * oCItemContainer::gfx_equip
 0003:002250FC       zCGfx * oCItemContainer::gfx_cursor
 0003:00225100       zCGfx * oCItemContainer::gfx_cursor_equip
 0003:00225104       zCGfx * * oCItemContainer::gfx_arrow
 0003:00225124       zCGfx * oCNpcInventory::gfx_title
 0003:00225168       zCClassDef oCItem::classDef
 0003:002251E8       float oCItem::s_fGlobalItemZBiasScale
 0003:00225294       zSTRING tradeClass
 0003:002252D0       int oCTradeManager::size_checked
 0003:00225384       oCMissionManager misMan
 0003:00225430       zCClassDef oCMobWheel::classDef
 0003:002254A0       zCClassDef oCMobBed::classDef
 0003:00225518       zCClassDef oCMobDoor::classDef
 0003:00225598       zCClassDef oCMobLockable::classDef
 0003:00225618       zCClassDef oCMobMsg::classDef
 0003:00225698       zCClassDef oCMobFire::classDef
 0003:00225730       zCClassDef oCMobItemSlot::classDef
 0003:0022579C       zCArray<zSTRING> mobList
 0003:002257C0       zCClassDef oCMobSwitch::classDef
 0003:00225840       zCClassDef oCMobLadder::classDef
 0003:002258B0       zCClassDef oCMobContainer::classDef
 0003:00225930       zCClassDef oCDummyVobGenerator::classDef
 0003:002259A0       zCClassDef oCMobInter::classDef
 0003:00225A10       zCClassDef oCMOB::classDef
 0003:00225A7C       int mobSaveConv
 0003:00225B84       int oCNews::news_counter
 0003:00225BA0       zSTRING const * const BS_NAMES
 0003:00225E0C       zSTRING const NPC_NODE_SHIELD
 0003:00225E20       zCClassDef oCNpc::classDef
 0003:00225EF0       zSTRING const NPC_NODE_SWORD
 0003:00225F04       zSTRING const NPC_NODE_HELMET
 0003:00225F48       zSTRING const NPC_NODE_BOW
 0003:00225F60       zSTRING const NPC_NODE_LONGSWORD
 0003:00225FA0       zSTRING const NPC_NODE_TORSO
 0003:00225FE0       int * oCNpc::bodyStateList
 0003:00226070       zSTRING const NPC_NODE_JAWS
 0003:00226088       zSTRING const * const npcStatesPrg
 0003:00226114       zSTRING const NPC_NODE_CROSSBOW
 0003:00226148       zSTRING const NPC_NODE_RIGHTHAND
 0003:00226424       zSTRING const NPC_NODE_LEFTHAND
 0003:0022644C       zSTRING const NPC_TALK_ANI
 0003:00226460       zSTRING const * const BS_MOD_NAMES
 0003:002264D8       float * percRange
 0003:00226578       zCClassDef oCNpcTalent::classDef
 0003:00226660       int oCNpc::godmode
 0003:00226664       int oCNpc::ai_disabled
 0003:00226668       float oCNpc::ai_messagesSkip
 0003:0022666C       float oCNpc::ai_messagesSkipTimer
 0003:00226670       float oCNpc::ai_scriptStateSkip
 0003:00226674       float oCNpc::ai_scriptStateSkipTimer
 0003:00226678       int oCNpc::isEnabledTalkBoxAmbient
 0003:0022667C       int oCNpc::isEnabledTalkBoxNoise
 0003:00226680       int oCNpc::s_bTargetLocked
 0003:00226684       oCNpc * oCNpc::player
 0003:00226688       int oCNpc::s_bEnabledDialogCamStop
 0003:0022668C       oCNpc * oCNpc::dontArchiveThisNpc
 0003:00226698       int g_bDontKillOUSound
 0003:002266D8       zMAT4 oCNpc::s_playerPositionMatrix
 0003:002267D0       int oCNpc::game_mode
 0003:002267D4       oCNpc * stealnpc
 0003:002267D8       float stealcheck_timer
 0003:002267DC       oCStealContainer * oCNpc::stealcontainer
 0003:00226860       zCClassDef oCMsgManipulate::classDef
 0003:002268E8       zCClassDef oCMsgUseItem::classDef
 0003:00226980       zCClassDef oCMsgConversation::classDef
 0003:002269F0       zCClassDef oCMsgDamage::classDef
 0003:00226A70       zCClassDef oCMsgAttack::classDef
 0003:00226AE0       zCClassDef oCMsgState::classDef
 0003:00226B60       zCClassDef oCNpcMessage::classDef
 0003:00226BE0       zCClassDef oCMsgMagic::classDef
 0003:00226C50       zCClassDef oCMsgMovement::classDef
 0003:00226CC0       zCClassDef oCMsgWeapon::classDef
 0003:00226FB0       zCClassDef oCObjectFactory::classDef
 0003:002271C8       oCRtnManager rtnMan
 0003:00227330       int * oCText::TXT_ATR
 0003:00227348       zCView * oCText::output
 0003:0022734C       int oCText::TXT_GUILD
 0003:00227350       int oCText::TXT_ATTRIBUTE
 0003:00227354       int oCText::TXT_FIGHT_TALENT
 0003:00227358       int oCText::TXT_TALENT
 0003:0022735C       int oCText::TXT_DAYTIME
 0003:00227360       int oCText::TXT_ATR_HP
 0003:00227364       int oCText::TXT_ATTITUDE
 0003:00227368       int oCText::TXT_SPELL
 0003:0022736C       int oCText::TXT_PC_GREETING
 0003:00227370       int oCText::TXT_PC_FIRST_PHRASE
 0003:00227374       int oCText::TXT_PC_SECOND_PHRASE
 0003:00227378       int oCText::TXT_PC_TRADE_PHRASE
 0003:0022737C       int oCText::TXT_NPC_LAST_PHRASE
 0003:00227380       int oCText::TXT_PC_TRADE_THREAT
 0003:00227384       int oCText::TXT_NPC_TRADE_THREAT
 0003:00227388       int oCText::TXT_PC_INFO_THREAT
 0003:0022738C       int oCText::TXT_NPC_INFO_THREAT
 0003:00227390       int oCText::TXT_INTIMIDATION
 0003:00227394       int oCText::TXT_NEWS_INTRO
 0003:00227398       int oCText::TXT_NEWS_STOLE
 0003:0022739C       int oCText::TXT_NEWS_STOLE_10
 0003:002273A0       int oCText::TXT_NEWS_STOLE_30
 0003:002273A4       int oCText::TXT_NEWS_STOLE_50
 0003:002273A8       int oCText::TXT_NEWS_STOLE_70
 0003:002273AC       int oCText::TXT_NEWS_STOLE_90
 0003:002273B0       int oCText::TXT_NEWS_STOLE_100
 0003:002273B4       int oCText::TXT_NEWS_ATTACKED
 0003:002273B8       int oCText::TXT_NEWS_KILLED
 0003:002273BC       int oCText::TXT_YNEWS_INTRO
 0003:002273C0       int oCText::TXT_YNEWS_STOLE
 0003:002273C4       int oCText::TXT_YNEWS_STOLE_10
 0003:002273C8       int oCText::TXT_YNEWS_STOLE_30
 0003:002273CC       int oCText::TXT_YNEWS_STOLE_50
 0003:002273D0       int oCText::TXT_YNEWS_STOLE_70
 0003:002273D4       int oCText::TXT_YNEWS_STOLE_90
 0003:002273D8       int oCText::TXT_YNEWS_STOLE_100
 0003:002273DC       int oCText::TXT_YNEWS_ATTACKED
 0003:002273E0       int oCText::TXT_YNEWS_KILLED
 0003:002273E4       int oCText::TXT_INVCAT
 0003:002273E8       int oCText::TXT_HELP
 0003:0022744C       zCList<oCVob> debuglist
 0003:00227470       zSTRING const * const SndMaterialName
 0003:00227510       zCClassDef oCVob::classDef
 0003:00227590       zCClassDef oCTouchDamage::classDef
 0003:002277A8       zCClassDef oCWorld::classDef
 0003:00227860       zCConsole zcon
 0003:0022793C       zCList<zCConsole> zCConsole::active_consoles
 0003:00227944       zCConsole * zCConsole::cur_console
 0003:00227948       zCClassDef zCEventManager::classDef
 0003:002279BC       zCArray<zCEventManager *> zCEventManager::activeEM
 0003:002279C8       int zCEventManager::disableEventManagers
 0003:002279CC       int zCEventManager::showMsgCommunication
 0003:002279D4       zCFontMan * zfontman
 0003:002279D8       zCTextureConvert * zCFont::texConv
 0003:002279E0       zCOLOR GFX_RED
 0003:002279E4       zCOLOR GFX_PALEGREEN
 0003:002279E8       zCOLOR GFX_SKY
 0003:002279F0       zCOLOR GFX_BROWN
 0003:002279F4       zCOLOR GFX_DOCHRE
 0003:002279F8       int * Pal8to24
 0003:00227DF8       zCOLOR GFX_GREEN
 0003:00227DFC       zCOLOR GFX_IVORY
 0003:00227E00       zCOLOR GFX_YELLOW
 0003:00227E04       zCOLOR GFX_PINK
 0003:00227E08       zCOLOR GFX_ORCHID
 0003:00227E0C       uchar * Cache
 0003:00227E10       zCOLOR GFX_DGREEN
 0003:00227E14       zCOLOR GFX_OCHRE
 0003:00227E18       zCOLOR GFX_PURPLE
 0003:00227E1C       zCOLOR GFX_ORANGE
 0003:00227E20       zCOLOR GFX_BLACK
 0003:00227E24       zCOLOR GFX_BLUE
 0003:00227E28       zCOLOR GFX_DPINK
 0003:00227E2C       zCOLOR GFX_AQUA
 0003:00227E30       zCOLOR GFX_FLESH
 0003:00227E34       zCOLOR GFX_LPINK
 0003:00227E38       zCOLOR GFX_STEEL
 0003:00227E3C       zCOLOR GFX_DBLUE
 0003:00227E40       zCOLOR GFX_VIOLET
 0003:00227E44       zCOLOR GFX_DRED
 0003:00227E48       zCOLOR GFX_LBLUE
 0003:00227E4C       zCOLOR GFX_WARMGREY
 0003:00227E50       zCOLOR GFX_CYAN
 0003:00227E54       zCOLOR GFX_KHAKI
 0003:00227E58       zCOLOR GFX_INDIGO
 0003:00227E5C       zCOLOR GFX_LYELLOW
 0003:00227E60       ushort * Gfx_Pal8to16
 0003:00228060       zCOLOR GFX_COLDGREY
 0003:00228064       zCOLOR GFX_CARROT
 0003:00228068       zCOLOR GFX_GOLD
 0003:0022806C       uchar * CacheC
 0003:00228070       zCOLOR GFX_WHITE
 0003:00228074       zCOLOR GFX_GREY
 0003:00228078       zCOLOR GFX_MBLUE
 0003:0022807C       zCOLOR GFX_MAGENTA
 0003:00228080       zCOLOR GFX_OLIVE
 0003:00228084       zCOLOR GFX_BEIGE
 0003:00228088       zCOLOR GFX_LGREY
 0003:0022808C       zCOLOR GFX_DORANGE
 0003:00228090       zCGfx * zCGfx::Gfx_List
 0003:00228094       int zCGfx::gfxcount
 0003:00228098       TGfx_Gfx * Gfx_List
 0003:0022809C       uchar * Gfx_pal
 0003:002280A0       int Gfx_reloading
 0003:002280AC       zSTRING Semikolon
 0003:002280C0       zCParser parser
 0003:0022A284       int zCParser::enableParsing
 0003:0022A288       zCPar_TreeNode * errorNode
 0003:0022A28C       zCParser * zCParser::cur_parser
 0003:0022A290       zCPar_TreeNode * lastNode
 0003:0022A2A4       zSTRING ParErr_Redefined
 0003:0022A2B8       zSTRING ParErr_UndefinedFunction
 0003:0022A2CC       zSTRING ParErr_Expected
 0003:0022A3A8       zSTRING Operators
 0003:0022A3BC       zSTRING ParErr_UnknownVar
 0003:0022A3D0       zSTRING ParErr_NoValidClass
 0003:0022A3E4       zSTRING ParErr_SyntaxError
 0003:0022A3F8       zSTRING ParErr_OutOfArray
 0003:0022A428       zCPar_SymbolTable * zCPar_SymbolTable::cur_table
 0003:0022A430       zCPar_Symbol * zCPar_Symbol::instance_sym
 0003:0022A434       void * zCPar_Symbol::instance_adr
 0003:0022A460       zCList<zCInputCallback> zCInputCallback::inputList
 0003:0022A468       zCView * screen
 0003:0022A46C       zCView * zCView::stdoutput
 0003:0022A470       zCView * zCView::modal
 0003:0022A474       int zCView::showDebug
 0003:0022A488       zCClassDef zCWayNet::classDef
 0003:0022A4F8       zCClassDef zCVobWaypoint::classDef
 0003:0022A568       zCClassDef zCVobStartpoint::classDef
 0003:0022A5D8       zCClassDef zCWaypoint::classDef
 0003:0022A648       zCClassDef zCVobSpot::classDef
 0003:0022A6BC       CD3duGlobals * g_pGlobals
 0003:0022A6C0       ulong g_dwDebugLevel
 0003:0022A6D8       TArray<LINEENTRY> * ArrayFilterSpan
 0003:0022A6DC       TArray<LINEENTRY> * ArrayCopySpan
 0003:0022A6E0       TABLEENTRY * FnTable
 0003:0022F050       _CRT_CRITICAL_SECTION ios::x_lockc
 0003:0022F068       long * ios::x_statebuf
 0003:0022F088       int ios::fLockcInit
 0003:0022F098       ostream_withassign cout
 0003:0022F0F0       CriticalSection
 0003:0022F108       Target
 0003:0022F10C       ___fastflag
 0003:0022F110       __adjust_fdiv
 0003:0022F114       __umaskval
 0003:0022F118       __osver
 0003:0022F11C       __winver
 0003:0022F120       __winmajor
 0003:0022F124       __winminor
 0003:0022F128       ___argc
 0003:0022F12C       ___argv
 0003:0022F130       ___wargv
 0003:0022F134       __environ
 0003:0022F138       ___initenv
 0003:0022F13C       __wenviron
 0003:0022F140       ___winitenv
 0003:0022F144       __pgmptr
 0003:0022F148       __wpgmptr
 0003:0022F14C       __exitflag
 0003:0022F150       __C_Termination_Done
 0003:0022F154       __C_Exit_Done
 0003:0022F170       __cflush
 0003:0022F174       __aenvptr
 0003:0022F178       __wenvptr
 0003:0022F17C       ___error_mode
 0003:0022F1EC       WideCharStr
 0003:0022F2C4       __stdbuf
 0003:0022F2F0       ___lc_handle
 0003:0022F2F8       Locale
 0003:0022F308       ___lc_codepage
 0003:0022F30C       ___lc_collate_cp
 0003:0022F41C       __adbgmsg
 0003:0022F420       lpTopLevelExceptionFilter
 0003:0022F424       __fmode
 0003:0022F42C       __commode
 0003:0022F430       ___lc_time_intl
 0003:0022F44C       ___lc_id
 0003:0022F4AC       ___lconv_static_null
 0003:0022F4E0       zCWavePool `zCWavePool::GetPool(void)'::`2'::thePool
 0003:0022F520       ___alternate_form
 0003:0022F524       ___no_lead_zeros
 0003:0022F528       ___sbh_sizeHeaderList
 0003:0022F52C       ___sbh_indGroupDefer
 0003:0022F530       ___sbh_pHeaderScan
 0003:0022F534       ___sbh_initialized
 0003:0022F538       ___sbh_pHeaderDefer
 0003:0022F53C       ___sbh_cntHeaderList
 0003:0022F540       ___sbh_pHeaderList
 0003:0022F544       ___sbh_threshold
 0003:0022F548       __crtheap
 0003:0022F54C       ___active_heap
 0003:0022F550       ___mbcodepage
 0003:0022F560       ___mbulinfo
 0003:0022F56C       ___ismbcodepage
 0003:0022F580       __mbcasemap
 0003:0022F680       __mbctype
 0003:0022F784       ___mblcid
 0003:0022F788       ___setlc_active
 0003:0022F78C       ___unguarded_readlc_active
 0003:0022F7A0       ___pioinfo
 0003:0022F8A0       __nhandle
 0003:0022F8A4       __acmdln
 0003:0022F8A8       ___piob
 0003:0022F8C0       __bufin
 0003:002308C0       __nstream
 0003:002308C4       ___env_initialized
 0003:002308C8       ___mbctype_initialized
 0003:002308CC       ___onexitend
 0003:002308D0       ___onexitbegin
